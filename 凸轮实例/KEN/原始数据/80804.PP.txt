
0
1  VARL WDAT 
2  VARL GSAJ 
3  VARL WRAC 
4  VARL GLPOS 
5  VARR ADAT 
6  VARR GPAJ 
7  VARI VSPEED 
8  VARL XNOSE
9  VARS GSTYP 
10  VARS GPTYP 
11  VARR BCWA 
13  VARN COMP 
14  VARN CTIME 
15  VARN CLOBE 
16  VARV CALZV 
17  VARL DDATC :VARL DDATMIN :VARL DDAT 
18  VARL DPOS :VARI DPTYP 
19  VARL DTRAV :VARI DRINFD 
20  VARI DFLAG :VARI DEQUIP 
21  VARN DTCAL 
22  VARI DTINT :VARI DTCTR 
25  VARN DRA :VARL DSOFF 
26  VARN DRAT :VARN QRAT 
27  VARI DSTATE :VARI PPR 
28  VARL DFRMAX 
29  VARI DXXP 
30  VARR FCWA 
31  VARL FEEDEP :VARN FOFF :VARL FPOFF :VARL FPCLR 
32  VARV FEEDVEL 
33  VARI FLPDCO 
34  VARI GFLAG :VARI GSTATE 
35  VARI INCH 
36  VARI INC 
37  VARS LSTYP :VARS NULL 
38  VARI LCRFLAG 
39  VARI MANFEED 
40  VARI MCFLAG 
41  VARI PARTCT 
42  VARS PRTID 
44  VARI PLCDATE :VARI PLCID 
45  VARI PSET 
49  VARI RFLAG 
50  VARI RLPDCO 
52  VARR LOCSV :VARR GSV 
53  VARI RS 
54  VARI SWSTATE 
55  VARI SLOBE :VARR SVPLG 
56  VARS SERIAL :VARI SPIN 
57  VARI TOPARTCT :VARI TOTDRCT 
58  VARL TAPER 
59  VARL TAJ 
60  VARI TOWCHCT 
61  VARL WRMINSET 
62  VARL WRMIN 
63  VARL WRMAX 
67  VARI WLEFT 
71  VARL WRMEM :VARL WRMEM1 
72  VARL WROFF 
73  VARL WRAT 
74  VARI XVARI 
75  VARN XVARN :VARN XVARN1 
77  VARL XPMAX 
78  VARL XLMIN 
79  VARL ZDAT :VARR RDAT 
80  VARL ZPMAX :VARL ZPMAX1 :VARL ZPMAX2 
81  VARL ZPFIRST 
83  VARN DAMAX :VARN ZAMAX :VARN SAMAX :VARN FFSA :VARN QAMAX 
85  VARV DVMAX :VARV RVMAX :VARV SVMAX :VARV XVMAX :VARV ZVMAX :VARV QVMAX 
86  VARV SVLOAD 
90  VARI SINGCY 
91  VARI SSTMEM 
92  VARI RSMEM 
93  VARI DUALCY 
95  VARI FICY 
97  VARI ROCY 
98  VARS PASSWORD :VARS CHECK :VARI CHECK1 
99  VARL GICRB :VARV GFFD :VARV RAPIDFR :VARI DQRS :VARI DRS 
100  VARI RS1 :VARI RS2 :VARI RS3 :VARI RS4 :VARI RS5 :VARI RS6 :VARI RS7 :VARI RS8 
101  VARI RS9 :VARI RS10 :VARI RS11 :VARI RS12 
102  VARN CRS :VARN CRS1 :VARN CRS2 :VARN CRS3 :VARN CRS4 :VARN CRS5 :VARN CRS6 
103  VARN CRS9 :VARN CRS10 :VARN CRS11 :VARN CRS12 
104  VARL CRL :VARN CRL1 :VARN CRL2 :VARN CRL3 :VARN CRL4 :VARN CRL5 :VARN CRL6 
105  VARN CRL9 :VARN CRL10 :VARN CRL11 :VARN CRL12 
106  VARI QRS :VARI QRS1 :VARI QRS2 :VARI QRS3 :VARI QRS4 :VARI QRS5 :VARI QRS6 
107  VARI QRS7 :VARI QRS8 :VARI QRS9 :VARI QRS10 :VARI QRS11 :VARI QRS12 
108  VARN CV :VARN CVMAX :VARN CVSET :VARL CVWRSET 
109  VARL RTF :VARL R1TF :VARL R2TF :VARL R3TF :VARL R4TF :VARL R9TF :VARL R10TF 
110  VARL R11TF :VARL R12TF 
111  VARI RINC :VARI R1INC :VARI R2INC :VARI R3INC :VARI R4INC 
112  VARI R9INC :VARI R10INC :VARI R11INC :VARI R12INC 
113  VARL RINC1 :VARL R1INC1 :VARL R2INC1 :VARL R3INC1 :VARL R4INC1 
114  VARL R9INC1 :VARL R10INC1 :VARL R11INC1 :VARL R12INC1 
115  VARL RINC2 :VARL R1INC2 :VARL R2INC2 :VARL R3INC2 :VARL R4INC2 
116  VARL R9INC2 :VARL R10INC2 :VARL R11INC2 :VARL R12INC2 
117  VARL RINC3 :VARL R1INC3 :VARL R2INC3 :VARL R3INC3 :VARL R4INC3 
118  VARL R9INC3 :VARL R10INC3 :VARL R11INC3 :VARL R12INC3 
119  VARL RINC4 :VARL R1INC4 :VARL R2INC4 :VARL R3INC4 :VARL R4INC4 
120  VARL R9INC4 :VARL R10INC4 :VARL R11INC4 :VARL R12INC4 
121  VARL RINC5 :VARL R1INC5 :VARL R2INC5 :VARL R3INC5 :VARL R4INC5 
122  VARL R9INC5 :VARL R10INC5 :VARL R11INC5 :VARL R12INC5 
123  VARL RINC6 :VARL R1INC6 :VARL R2INC6 :VARL R3INC6 :VARL R4INC6 
124  VARL R9INC6 :VARL R10INC6 :VARL R11INC6 :VARL R12INC6 
125  VARV RINCFR :VARV R1INCFR :VARV R2INCFR :VARV R3INCFR :VARV R4INCFR 
126  VARV R9INCFR :VARV R10INCFR :VARV R11INCFR :VARV R12INCFR 
127  VARR GAGEPOS1 :VARR GAGEPOS2 :VARR GAGEPOS3 :VARR GAGEPOS4 :VARR GAGEPOS5 :VARR GAGEPOS6 
128  VARR RINCFA :VARR R1INCFA :VARR R2INCFA :VARR R3INCFA :VARR R4INCFA 
129  VARR R9INCFA :VARR R10INCFA :VARR R11INCFA :VARR R12INCFA 
131  VARR LOBEANG1 :VARR LOBEANG2 :VARR LOBEANG3 :VARR LOBEANG4 :VARR LOBEANG5 :VARR LOBEANG6 
133  VARL RFPR :VARL R1FR :VARL R2FR :VARL R3FR :VARL R4FR 
134  VARL R9FR :VARL R10FR :VARL R11FR :VARL R12FR 
135  VARN RWS :VARN R1WS :VARN R2WS :VARN R3WS :VARN R4WS 
136  VARN R9WS :VARN R10WS :VARN R11WS :VARN R12WS 
137  VARN RDWELL :VARN R1DWELL :VARN R2DWELL :VARN R3DWELL :VARN R4DWELL 
138  VARN R9DWELL :VARN R10DWELL :VARN R11DWELL :VARN R12DWELL 
140  VARL FTF :VARL F1TF :VARL F2TF :VARL F3TF :VARL F4TF 
141  VARL F9TF :VARL F10TF :VARL F11TF :VARL F12TF 
143  VARI FINC :VARI F1INC :VARI F2INC :VARI F3INC :VARI F4INC 
144  VARI F9INC :VARI F10INC :VARI F11INC :VARI F12INC 
145  VARL FINC1 :VARL F1INC1 :VARL F2INC1 :VARL F3INC1 :VARL F4INC1 
146  VARL F9INC1 :VARL F10INC1 :VARL F11INC1 :VARL F12INC1 
147  VARL FINC2 :VARL F1INC2 :VARL F2INC2 :VARL F3INC2 :VARL F4INC2 
148  VARL F9INC2 :VARL F10INC2 :VARL F11INC2 :VARL F12INC2 
150  VARL FINC3 :VARL F1INC3 :VARL F2INC3 :VARL F3INC3 :VARL F4INC3 
151  VARL F9INC3 :VARL F10INC3 :VARL F11INC3 :VARL F12INC3 
153  VARL FINC4 :VARL F1INC4 :VARL F2INC4 :VARL F3INC4 :VARL F4INC4 
154  VARL F9INC4 :VARL F10INC4 :VARL F11INC4 :VARL F12INC4 
155  VARV FINCFR :VARV F1INCFR :VARV F2INCFR :VARV F3INCFR :VARV F4INCFR 
156  VARV F9INCFR :VARV F10INCFR :VARV F11INCFR :VARV F12INCFR 
157  VARR FINCFA :VARR F1INCFA :VARR F2INCFA :VARR F3INCFA :VARR F4INCFA 
158  VARR F9INCFA :VARR F10INCFA :VARR F11INCFA :VARR F12INCFA 
160  VARI FVS :VARI F1VS :VARI F2VS :VARI F3VS :VARI F4VS 
161  VARI F9VS :VARI F10VS :VARI F11VS :VARI F12VS 
163  VARL FFR :VARL F1FR :VARL F2FR :VARL F3FR :VARL F4FR 
164  VARL F9FR :VARL F10FR :VARL F11FR :VARL F12FR 
165  VARN FWS :VARN F1WS :VARN F2WS :VARN F3WS :VARN F4WS 
166  VARN F9WS :VARN F10WS :VARN F11WS :VARN F12WS 
167  VARN FDWELL :VARN F1DWELL :VARN F2DWELL :VARN F3DWELL :VARN F4DWELL 
168  VARN F9DWELL :VARN F10DWELL :VARN F11DWELL :VARN F12DWELL 
170  VARR RANG :VARR R1ANG :VARR R2ANG :VARR R3ANG :VARR R4ANG 
171  VARR R9ANG :VARR R10ANG :VARR R11ANG :VARR R12ANG 
172  VARR LFT :VARR LFT1 :VARR LFT2 
173  VARR P1AJ :VARR P2AJ :VARR P3AJ :VARR P4AJ :VARR PAJ :VARR PTAJ 
174  VARR P9AJ :VARR P10AJ :VARR P11AJ :VARR P12AJ 
175  VARL S1AJ :VARL S2AJ :VARL S3AJ :VARL S4AJ :VARL S5AJ 
176  VARL S6AJ :VARL S9AJ :VARL S10AJ :VARL S11AJ :VARL S12AJ 
177  VARL STAJ :VARL SAJ :VARL WCSAJ :VARL GASAJ :VARL PGSAJ 
178  VARL CAJ :VARL COSET :VARL COSET1 :VARL COSET2 
179  VARN DWS :VARN SVMEM :VARL DBOFF 
180  VARI LOWP 
181  VARN RMWCV :VARN FMWCV :VARN MWCVMAX :VARN RDMWCV :VARN FDMWCV :VARI PDROP :VARN USPEED 
182  VARN STEPRAD :VARN DIAMCTR :VARN DPSET 
183  VARN RECIPS :VARN QRECIPS 
185  VARL XLOAD 
187  VARR SLOAD 
190  VARL ZLOAD 
193  VARL ZLMAX 
200  VARI RLPD 
203  VARI FLPD 
205  VARL DFD :VARL RDFD 
207  VARL DFCLR 
210  VARL DFR :VARL RDFR 
213  VARN DTURN :VARN RDTURN 
215  VARN COMPCOR 
217  VARL RADFD 
220  VARV RADFR :VARV RADFR2 
223  VARL RRDFD 
225  VARV RRDFR :VARV RRDFR2 
227  VARL FADFD 
229  VARV FADFR :VARV F2ADFR :VARV F3ADFR :VARV F4ADFR :VARV F5ADFR :VARV F6ADFR 
230  VARV F7ADFR :VARV F8ADFR :VARV F9ADFR :VARV F10ADFR :VARV F11ADFR :VARV F12ADFR 
231  VARV FADFR2 :VARV F2ADFR2 :VARV F3ADFR2 :VARV F4ADFR2 :VARV F5ADFR2 :VARV F6ADFR2 
232  VARV F7ADFR2 :VARV F8ADFR2 :VARV F9ADFR2 :VARV F10ADFR2 :VARV F11ADFR2 :VARV F12ADFR2 
233  VARL FRDFD 
234  VARV FRDFR :VARV F2RDFR :VARV F3RDFR :VARV F4RDFR :VARV F5RDFR :VARV F6RDFR 
235  VARV F7RDFR :VARV F8RDFR :VARV F9RDFR :VARV F10RDFR :VARV F11RDFR :VARV F12RDFR 
236  VARV FRDFR2 :VARV F2RDFR2 :VARV F3RDFR2 :VARV F4RDFR2 :VARV F5RDFR2 :VARV F6RDFR2 
237  VARV F7RDFR2 :VARV F8RDFR2 
238  VARV F9RDFR2 :VARV F10RDFR2 :VARV F11RDFR2 :VARV F12RDFR2 
239  VARI SPD 
240  VARS S1 :VARS S2 :VARS S3 :VARS S4 :VARS S5 :VARS S6 :VARS S7 :VARS S8 
241  VARS RGSTYP :VARS FGSTYP :VARI DUALPWS 
242  VARL NO1POS :VARL NO2POS :VARL NO3POS :VARL NO4POS :VARL NO5POS :VARL NO6POS 
243  VARL NO7POS :VARV BWTR 
244  VARN RPMEM :VARN RPMEM1 :VARN RPMEM2 :VARI TWD :VARI SENSE :VARL TOFFSET 
247  VARL BTF 
250  VARN BWS 
253  VARL BAFR 
255  VARL BFFR 
257  VARL BFEP 
258  VARL BGA 
260  VARN BFDWELL 
263  VARN BBDWELL 
265  VARL BBEP 
268  VARL BRAEP 
270  VARL BMFR 
273  VARN BMDWELL 
275  VARL BMEP 
278  VARL BSFR 
280  VARN BSDWELL 
282  VARL BRFR 
283  VARI DWLCK 
285  VARL BREP 
286  VARI ERLYWRNG :VARI INSPFREQ 
287  VARL ORUN 
288  VARI WBALCTR :VARI WBALINT 
289  ESCENB =0:PROC LAST
290  DEQUIP =0
291  RESB 1015:RESB 1016:RESB 1017:RESB 1018:RESB 1019
292  SPIN =-1
293  WLEFT =10
298  IF DEQUIP >0 THEN PROC DRSEL
299  PROC START1:ENDPROC 
300 DEFPROC DRPA
302  PATHSTART 
304  INTYPE =0:XP =XP :ZP =ZP -4.5-1.18-1.15
306  INTYPE =0:XP =XP -.3:ZP =ZP -4.5-1.7-1.15
308  INTYPE =0:XP =XP -.3:ZP =ZP -4.5-1.7-13.6
310  INTYPE =0:XP =XP :ZP =ZP -4.5-1.7-13.6-.52
312  INTYPE =0:XP =XP :ZP =ZP -26-1.15
328  PATHEND 
329  ENDPROC 
330 DEFPROC DRPR
332  PATHSTART 
334  INTYPE =0:XP =XP :ZP =ZP +4.5+1.18+1.15
336  INTYPE =0:XP =XP -.3:ZP =ZP +4.5+1.7+1.15
338  INTYPE =0:XP =XP -.3:ZP =ZP +4.5+1.7+13.6
340  INTYPE =0:XP =XP :ZP =ZP +4.5+1.7+13.6+.52
342  INTYPE =0:XP =XP :ZP =ZP +26+1.15
358  PATHEND 
359  ENDPROC 
360 DEFPROC SPINSEL:IF BIT 40=1 THEN ENDPROC 
363  UKEY 6 'MAIN''SPINDLE''305-203''SPIN0'
364  UKEY 7 'AUX. 1''SPINDLE''203-100''SPIN1'
365  UKEY 8 'AUX. 2''SPINDLE''100-42.5''SPIN2'
366  UKEY 9 'AUX. 3''SPINDLE''75-42.5''SPIN3'
367  UKEY 10 'AUX. 4''SPINDLE''42.5-32.5''SPIN4'
369  ENDPROC 
370 DEFPROC PLCSELS:ESCENB =0:LSTYP =GSTYP :SETB 1005
371  RESB 991:RESB 992:RESB 993:RESB 994:RESB 995:RESB 996:RESB 997:RESB 998
372  IF BIT 881=1 THEN GSTYP =S1 :GOTO 390
374  IF BIT 882=1 THEN GSTYP =S2 :GOTO 390
376  IF BIT 883=1 THEN GSTYP =S3 :GOTO 390
378  IF BIT 884=1 THEN GSTYP =S4 :GOTO 390
380  IF BIT 885=1 THEN GSTYP =S5 :GOTO 390
382  IF BIT 886=1 THEN GSTYP =S6 :GOTO 390
384  IF BIT 887=1 THEN GSTYP =S7 :GOTO 390
386  IF BIT 888=1 THEN GSTYP =S8 
390  PROC IDSHAFT
392  IF GSTYP <>LSTYP THEN PROC CALC
394  ESCENB =1:RESB 1005:ENDPROC 
400 DEFPROC SELS1:GSTYP =S1 :PROC CALC:PROC IDSHAFT:PROC CHECKID:ENDPROC 
402 DEFPROC SELS2:GSTYP =S2 :PROC CALC:PROC IDSHAFT:PROC CHECKID:ENDPROC 
404 DEFPROC SELS3:GSTYP =S3 :PROC CALC:PROC IDSHAFT:PROC CHECKID:ENDPROC 
406 DEFPROC SELS4:GSTYP =S4 :PROC CALC:PROC IDSHAFT:PROC CHECKID:ENDPROC 
408 DEFPROC SELS5:GSTYP =S5 :PROC CALC:PROC IDSHAFT:PROC CHECKID:ENDPROC 
410 DEFPROC SELS6:GSTYP =S6 :PROC CALC:PROC IDSHAFT:PROC CHECKID:ENDPROC 
412 DEFPROC SELS7:GSTYP =S7 :PROC CALC:PROC IDSHAFT:PROC CHECKID:ENDPROC 
414 DEFPROC SELS8:GSTYP =S8 :PROC CALC:PROC IDSHAFT:PROC CHECKID:ENDPROC 
415 DEFPROC CHECKID:IF MCFLAG =7 THEN CHECK1 =0 ELSE ENDPROC 
416  GPVAR 'ARE YOU SURE TOOLING MATCHES SHAFT  1=YES, 0=NO',CHECK1 ,1,0
417  IF CHECK1 =0 THEN ENDPROC ELSE PROC CANCELPAR
418  ENDPROC 
420 DEFPROC IDSHAFT:XVARI =ESCENB :ESCENB =0
421  RESB 991:RESB 992:RESB 993:RESB 994:RESB 995:RESB 996:RESB 997:RESB 998
422  IF GSTYP =S1 THEN SETB 991:PROC ZPMAXSET
424  IF GSTYP =S2 THEN SETB 992:PROC ZPMAXSET
426  IF GSTYP =S3 THEN SETB 993:PROC ZPMAXSET
428  IF GSTYP =S4 THEN SETB 994:PROC ZPMAXSET
430  IF GSTYP =S5 THEN SETB 995:PROC ZPMAXSET
432  IF GSTYP =S6 THEN SETB 996:PROC ZPMAXSET
434  IF GSTYP =S7 THEN SETB 997:PROC ZPMAXSET
436  IF GSTYP =S8 THEN SETB 998:PROC ZPMAXSET
437  IF DXXP =7 THEN DVAR 'SETUP ON SHAFT'GSTYP 
438  ESCENB =XVARI :ENDPROC 
439 DEFPROC PARTPAR:UKEY 14 '''''''CANCELPAR'
440  IF PASSWORD ='' THEN GOTO 442
441  PRINT 'BUT PASSWORD CAN BE ENTERED TO SELECT PRESET PARTS':PROC ACCESS:GOTO 450
442  PRINT 'BUT PRESET PARTS CAN BE SELECTED BY SOFT SWITCH AS INDICATED.'
443  IF MCFLAG <>1 THEN GOTO 450 
444  PRINT 'REMOVE PART FROM THE MACHINE & CLOSE THE SLIDING GUARD' 
445  PRINT 'TO PERMIT WORKREST AUTOMATIC TRAVERSE WHERE NECESSARY.' 
450  PROC CLEAR
451  IF S1 <>'' THEN UKEY 1'SELECT''SHAFT''1''SELS1' 
452  IF S2 <>'' THEN UKEY 2'SELECT''SHAFT''2''SELS2' 
453  IF S3 <>'' THEN UKEY 3'SELECT''SHAFT''3''SELS3' 
454  IF S4 <>'' THEN UKEY 4'SELECT''SHAFT''4''SELS4' 
455  IF S5 <>'' THEN UKEY 5'SELECT''SHAFT''5''SELS5' 
456  IF S6 <>'' THEN UKEY 6'SELECT''SHAFT''6''SELS6' 
457  IF S7 <>'' THEN UKEY 7'SELECT''SHAFT''7''SELS7' 
458  IF S8 <>'' THEN UKEY 8'SELECT''SHAFT''8''SELS8' 
459  ENDPROC 
460 DEFPROC SETUP
461  S1 =''
462  S2 =''
463  S3 =''
464  S4 =''
465  S5 =''
466  S6 =''
467  S7 =''
468  S8 =''
469  PASSWORD =''
470  LOBEANG1 =0
471  LOBEANG2 =0
473  LOBEANG3 =0
474  LOBEANG4 =0
475  LOBEANG5 =0
476  LOBEANG6 =0
495  ZPTTYPE =1
496  PLCDATE =1802860
497  PLCID =80000
498  PRTID ='16-JUN-89-V3'
499  SERIAL ='808-04'
500  WDAT =483.125
501  ADAT = 344.7
502  DDAT =75
503  RDAT =0
504  DDATMIN =DDAT -9
505  ZDAT =0
506  WRMIN =203
507  WRMAX =307
508  WCSAJ =1
509  INCH =0
510  IF INCH <2 THEN UNITS =INCH 
511  IF DEQUIP >0 THEN GOTO 513
512  DFLAG =1
513  IF DFLAG =4 THEN DTCAL =160 ELSE DTCAL =315
514  DPTYP =0
515  WROFF =0
516  GFLAG =0
517  RFLAG =0
518  MCFLAG =11
519  DRAT =1:QRAT =1
520  RESB 961
521  RESB 962
522  RESB 963
523  RESB 972
524  SETB 973
525  RESB 974
526  SETB 976
527  SETB 977
528  SETB 978
529  RESB 981
530  RESB 982
531  RESB 983
532  SETB 984 
533  RESB 985
534  SETB 986
535  SETB 988
536  RESB 1002
537  RESB 1006
538  RESB 1007
539  RESB 1010
540  RESB 1011
541  SETB 1012:IF SWSTATE =1 THEN SETB 4085 ELSE RESB 4085
542  IF BIT 1012=0 THEN SWSTATE =0
543  SETB 1013
544  SETB 1022
545  SETB 1023
546  SETB 4029
547  RESB 4030
548  RESB 4032
549  RESB 4033
551  RESB 4041
552  RESB 4042
553  RESB 4045
554  RESB 4047
555  SETB 4048
556  SETB 4050
557  RESB 4051
558  RESB 4052
559  RESB 4055
560  RESB 4056
561  RESB 4057
562  RESB 4058
563  RESB 4059
564  RESB 4060
565  RESB 4062
566  SETB 4063
567  RESB 4065:RESB 44 : SETB 3780
568  RESB 4066:SETB 4068:SETB 4072:SETB 4077
569  ZPMAX1 =0:ZPMAX2 =0
570  IF SPIN <1 THEN GOTO 577
571  WDAT =290
572  IF SPIN =1 THEN WRMAX =200:WRMIN =100:CVMAX =35:CVSET =35:CVWRSET =100
574  IF SPIN =2 THEN WRMAX =100:WRMIN =42.5:CVMAX =30:CVSET =30:CVWRSET =50
575  IF SPIN =3 THEN WRMAX =75:WRMIN =42.5:CVMAX =30:CVSET =30:CVWRSET =37.5
576  IF SPIN =4 THEN WRMAX =42.5:WRMIN =32.5:CVMAX =20:CVSET =20:CVWRSET =21
577  IF SPIN >-1 THEN PROC SPINID
578  MWCVMAX =60:WRMINSET =WRMIN 
579  DAMAX =1/DRAT 
580  QAMAX =8000:SAMAX =8000:FFSA =4000:ZAMAX =1000
581  LOCSV =360
582  XA =250:ZA =ZAMAX :SA =SAMAX :QA =QAMAX :FA =500:DA =DAMAX :RA =100000
583  ERLYWRNG =20:INSPFREQ =20
584  XVMAX =75
585  ZVMAX =166
586  SVMAX =1000
587  QVMAX =1800
588  RVMAX =3600
589  DVMAX =1/DRAT :PPR =1
590  IF DVMAX >2 THEN DVMAX =2
591  XPMAX =-WDAT +WRMIN 
592  ZPMAX =1089
593  ZLMAX =ZPMAX 
594  DFRMAX =0.005
595  XLMIN =80
596  DSOFF =.01
597  SVPLG =360
598  SETB 4000
599  PROC IDSHAFT:ENDPROC 
600 DEFPROC FEED
602  IF MANFEED =1 THEN GOTO 610
604  IF INC >0 THEN WST =1:FV =FEEDVEL :FP =FEEDEP 
608  PROC HFEED:IF WST +FST >2 THEN GOTO 608 ELSE ENDPROC 
610  IF BIT 859=1 THEN FV =FEEDVEL /10:GOTO 620
612  IF BIT 860=1 THEN FV =FEEDVEL /2: GOTO 620
614  IF BIT 861=1 THEN FV =FEEDVEL : GOTO 620
616  IF BIT 862=1 THEN FV =FEEDVEL *2:GOTO 620
618  FST =2:GOTO 610
620  IF INC >0 THEN WST =1
622  FP =FEEDEP 
624  IF BIT 952=1 THEN ENDPROC 
626  IF WST >0 THEN GOTO 626
628  IF FST =2 THEN ENDPROC 
630  IF INC >0 THEN GOTO 628
632  IF BIT 859+BIT 860+BIT 861+BIT 862<1 THEN FST =2
634  GOTO 610
636 DEFPROC HFEED
637  IF INC >0 THEN ENDPROC 
638  IF BIT 865=1 THEN FV =FEEDVEL :FP =FEEDEP ELSE FST =2 :GOTO 638
639  ENDPROC 
640 DEFPROC R1CFEED
642  INC =0:IF R1INC =0 THEN GOTO 658
644  FEEDVEL =R1INCFR 
645  INC =INC +1:FEEDEP =FP -R1INC1 : PROC FEED:IF R1INC -INC >5 THEN GOTO 645
646  IF INC =R1INC THEN GOTO 660
648  INC =INC +1:FEEDEP =FP -R1INC2 : PROC FEED:IF INC =R1INC THEN GOTO 660
650  INC =INC +1:FEEDEP =FP -R1INC3 : PROC FEED:IF INC =R1INC THEN GOTO 660
652  INC =INC +1:FEEDEP =FP -R1INC4 : PROC FEED:IF INC =R1INC THEN GOTO 660
654  INC =INC +1:FEEDEP =FP -R1INC5 : PROC FEED:IF INC =R1INC THEN GOTO 660
656  FEEDEP =FP -R1INC6 :PROC FEED:GOTO 660
658  FEEDVEL =R1FR *R1WS /60 : FEEDEP =FP -R1TF :PROC FEED
660  DELAY R1DWELL :ENDPROC 
662 DEFPROC R2CFEED
664  INC =0:IF R2INC =0 THEN GOTO 680
666  FEEDVEL =R2INCFR 
668  INC =INC +1:FEEDEP =FP -R2INC1 : PROC FEED:IF R2INC -INC >5 THEN GOTO 668
669  IF INC =R2INC THEN GOTO 682
670  INC =INC +1:FEEDEP =FP -R2INC2 : PROC FEED:IF INC =R2INC THEN GOTO 682
672  INC =INC +1:FEEDEP =FP -R2INC3 : PROC FEED:IF INC =R2INC THEN GOTO 682
674  INC =INC +1:FEEDEP =FP -R2INC4 : PROC FEED:IF INC =R2INC THEN GOTO 682
676  INC =INC +1:FEEDEP =FP -R2INC5 : PROC FEED:IF INC =R2INC THEN GOTO 682
678  FEEDEP =FP -R2INC6 :PROC FEED:GOTO 682
680  FEEDVEL =R2FR *R2WS /60 : FEEDEP =FP -R2TF :PROC FEED
682  DELAY R2DWELL :ENDPROC 
692 DEFPROC R3CFEED
694  INC =0:IF R3INC =0 THEN GOTO 710
696  FEEDVEL =R3INCFR 
698  INC =INC +1:FEEDEP =FP -R3INC1 : PROC FEED:IF R3INC -INC >5 THEN GOTO 698
699  IF INC =R3INC THEN GOTO 712
700  INC =INC +1:FEEDEP =FP -R3INC2 : PROC FEED:IF INC =R3INC THEN GOTO 712
702  INC =INC +1:FEEDEP =FP -R3INC3 : PROC FEED:IF INC =R3INC THEN GOTO 712
704  INC =INC +1:FEEDEP =FP -R3INC4 : PROC FEED:IF INC =R3INC THEN GOTO 712
706  INC =INC +1:FEEDEP =FP -R3INC5 : PROC FEED:IF INC =R3INC THEN GOTO 712
708  FEEDEP =FP -R3INC6 :PROC FEED:GOTO 712
710  FEEDVEL =R3FR *R3WS /60 : FEEDEP =FP -R3TF :PROC FEED
712  DELAY R3DWELL :ENDPROC 
722 DEFPROC R4CFEED
724  INC =0:IF R4INC =0 THEN GOTO 740
726  FEEDVEL =R4INCFR 
728  INC =INC +1:FEEDEP =FP -R4INC1 : PROC FEED:IF R4INC -INC >5 THEN GOTO 728
729  IF INC =R4INC THEN GOTO 742
730  INC =INC +1:FEEDEP =FP -R4INC2 : PROC FEED:IF INC =R4INC THEN GOTO 742
732  INC =INC +1:FEEDEP =FP -R4INC3 : PROC FEED:IF INC =R4INC THEN GOTO 742
734  INC =INC +1:FEEDEP =FP -R4INC4 : PROC FEED:IF INC =R4INC THEN GOTO 742
736  INC =INC +1:FEEDEP =FP -R4INC5 : PROC FEED:IF INC =R4INC THEN GOTO 742
738  FEEDEP =FP -R4INC6 :PROC FEED:GOTO 742
740  FEEDVEL =R4FR *R4WS /60 : FEEDEP =FP -R4TF :PROC FEED
742  DELAY R4DWELL :ENDPROC 
744 DEFPROC R9CFEED
746  INC =0:IF R9INC =0 THEN GOTO 764
748  FEEDVEL =R9INCFR 
750  INC =INC +1:FEEDEP =FP -R9INC1 : PROC FEED:IF R9INC -INC >5 THEN GOTO 750
752  IF INC =R9INC THEN GOTO 766
754  INC =INC +1:FEEDEP =FP -R9INC2 : PROC FEED:IF INC =R9INC THEN GOTO 766
756  INC =INC +1:FEEDEP =FP -R9INC3 : PROC FEED:IF INC =R9INC THEN GOTO 766
758  INC =INC +1:FEEDEP =FP -R9INC4 : PROC FEED:IF INC =R9INC THEN GOTO 766
760  INC =INC +1:FEEDEP =FP -R9INC5 : PROC FEED:IF INC =R9INC THEN GOTO 766
762  FEEDEP =FP -R9INC6 :PROC FEED:GOTO 766
764  FEEDVEL =R9FR *R9WS /60 : FEEDEP =FP -R9TF :PROC FEED
766  DELAY R9DWELL :ENDPROC 
768 DEFPROC R10CFEED
770  INC =0:IF R10INC =0 THEN GOTO 788
772  FEEDVEL =R10INCFR 
774  INC =INC +1:FEEDEP =FP -R10INC1 : PROC FEED:IF R10INC -INC >5 THEN GOTO 774
776  IF INC =R10INC THEN GOTO 790
778  INC =INC +1:FEEDEP =FP -R10INC2 : PROC FEED:IF INC =R10INC THEN GOTO 790
780  INC =INC +1:FEEDEP =FP -R10INC3 : PROC FEED:IF INC =R10INC THEN GOTO 790
782  INC =INC +1:FEEDEP =FP -R10INC4 : PROC FEED:IF INC =R10INC THEN GOTO 790
784  INC =INC +1:FEEDEP =FP -R10INC5 : PROC FEED:IF INC =R10INC THEN GOTO 790
786  FEEDEP =FP -R10INC6 :PROC FEED:GOTO 790
788  FEEDVEL =R10FR *R10WS /60 : FEEDEP =FP -R10TF :PROC FEED
790  DELAY R10DWELL :ENDPROC 
792 DEFPROC R11CFEED
794  INC =0:IF R11INC =0 THEN GOTO 812
796  FEEDVEL =R11INCFR 
798  INC =INC +1:FEEDEP =FP -R11INC1 : PROC FEED:IF R11INC -INC >5 THEN GOTO 798
800  IF INC =R11INC THEN GOTO 814
802  INC =INC +1:FEEDEP =FP -R11INC2 : PROC FEED:IF INC =R11INC THEN GOTO 814
804  INC =INC +1:FEEDEP =FP -R11INC3 : PROC FEED:IF INC =R11INC THEN GOTO 814
806  INC =INC +1:FEEDEP =FP -R11INC4 : PROC FEED:IF INC =R11INC THEN GOTO 814
808  INC =INC +1:FEEDEP =FP -R11INC5 : PROC FEED:IF INC =R11INC THEN GOTO 814
810  FEEDEP =FP -R11INC6 :PROC FEED:GOTO 814
812  FEEDVEL =R11FR *R11WS /60 : FEEDEP =FP -R11TF :PROC FEED
814  DELAY R11DWELL :ENDPROC 
816 DEFPROC R12CFEED
818  INC =0:IF R12INC =0 THEN GOTO 836
820  FEEDVEL =R12INCFR 
822  INC =INC +1:FEEDEP =FP -R12INC1 : PROC FEED:IF R12INC -INC >5 THEN GOTO 822
824  IF INC =R12INC THEN GOTO 838
826  INC =INC +1:FEEDEP =FP -R12INC2 : PROC FEED:IF INC =R12INC THEN GOTO 838
828  INC =INC +1:FEEDEP =FP -R12INC3 : PROC FEED:IF INC =R12INC THEN GOTO 838
830  INC =INC +1:FEEDEP =FP -R12INC4 : PROC FEED:IF INC =R12INC THEN GOTO 838
832  INC =INC +1:FEEDEP =FP -R12INC5 : PROC FEED:IF INC =R12INC THEN GOTO 838
834  FEEDEP =FP -R12INC6 :PROC FEED:GOTO 838
836  FEEDVEL =R12FR *R12WS /60 : FEEDEP =FP -R12TF :PROC FEED
838  DELAY R12DWELL :ENDPROC 
840 DEFPROC F1CFEED
841  INC =0:IF F1INC =0 THEN GOTO 854
842  FEEDVEL =F1INCFR 
844  INC =INC +1:FEEDEP =FP -F1INC1 -COMP :COMP =0:PROC FEED:IF F1INC -INC >3 THEN GOTO 844
846  IF INC =F1INC THEN GOTO 856
848  INC =INC +1:FEEDEP =FP -F1INC2 : PROC FEED:IF INC =F1INC THEN GOTO 856
850  INC =INC +1:FEEDEP =FP -F1INC3 : PROC FEED:IF INC =F1INC THEN GOTO 856
852  FEEDEP =FP -F1INC4 : PROC FEED:GOTO 856
854  FEEDVEL =F1FR *F1WS /60:FEEDEP =FP -F1TF -COMP :COMP =0:PROC FEED
856  DELAY F1DWELL :ENDPROC 
860 DEFPROC F2CFEED
861  INC =0:IF F2INC =0 THEN GOTO 874
862  FEEDVEL =F2INCFR 
864  INC =INC +1:FEEDEP =FP -F2INC1 -COMP :COMP =0:PROC FEED:IF F2INC -INC >3 THEN GOTO 864
866  IF INC =F2INC THEN GOTO 876
868  INC =INC +1:FEEDEP =FP -F2INC2 : PROC FEED:IF INC =F2INC THEN GOTO 876
870  INC =INC +1:FEEDEP =FP -F2INC3 : PROC FEED:IF INC =F2INC THEN GOTO 876
872  FEEDEP =FP -F2INC4 : PROC FEED:GOTO 876
874  FEEDVEL =F2FR *F2WS /60:FEEDEP =FP -F2TF -COMP :COMP =0:PROC FEED
876  DELAY F2DWELL :ENDPROC 
880 DEFPROC F3CFEED
881  INC =0:IF F3INC =0 THEN GOTO 894
882  FEEDVEL =F3INCFR 
884  INC =INC +1:FEEDEP =FP -F3INC1 -COMP :COMP =0:PROC FEED:IF F3INC -INC >3 THEN GOTO 884
886  IF INC =F3INC THEN GOTO 896
888  INC =INC +1:FEEDEP =FP -F3INC2 : PROC FEED:IF INC =F3INC THEN GOTO 896
890  INC =INC +1:FEEDEP =FP -F3INC3 : PROC FEED:IF INC =F3INC THEN GOTO 896
892  FEEDEP =FP -F3INC4 : PROC FEED:GOTO 896
894  FEEDVEL =F3FR *F3WS /60:FEEDEP =FP -F3TF -COMP :COMP =0:PROC FEED
896  DELAY F3DWELL :ENDPROC 
900 DEFPROC F4CFEED
901  INC =0:IF F4INC =0 THEN GOTO 914
902  FEEDVEL =F4INCFR 
904  INC =INC +1:FEEDEP =FP -F4INC1 -COMP :COMP =0:PROC FEED:IF F4INC -INC >3 THEN GOTO 904
906  IF INC =F4INC THEN GOTO 916
908  INC =INC +1:FEEDEP =FP -F4INC2 : PROC FEED:IF INC =F4INC THEN GOTO 916
910  INC =INC +1:FEEDEP =FP -F4INC3 : PROC FEED:IF INC =F4INC THEN GOTO 916
912  FEEDEP =FP -F4INC4 : PROC FEED:GOTO 916
914  FEEDVEL =F4FR *F4WS /60:FEEDEP =FP -F4TF -COMP :COMP =0:PROC FEED
916  DELAY F4DWELL :ENDPROC 
920 DEFPROC INFEED:SETB 3807
921  IF BIT 4059>.1 THEN IF GCST <2 THEN GOTO 921
922  XST =6:SA =FFSA :SV =GSV :SST =SSTMEM 
924  ENDPROC 
930 DEFPROC ZPMAXSET
931  IF BIT 4062=0 THEN ENDPROC 
932  IF BIT 991=1 THEN ZPMAX =ZPMAX1 
934  IF BIT 992=1 THEN ZPMAX =ZPMAX2 
936  ENDPROC 
950 DEFPROC INIFD:DSTATE =2:SETB 975:RESB 4037
951  IF SPD *DWLCK >0.1 THEN SETB 3796:DELAY 3 ELSE RESB 3796
952  IF BTASKST >2000 THEN MSG 712:GOTO 952
954  IF DFLAG =-1 THEN PROC INISD
955  IF DFLAG =0 THEN PROC INIPD
956  IF DFLAG =1 THEN PROC INITD
960  IF DSTATE >0 THEN DSTATE =2
965  ENDPROC 
990 DEFPROC INIRD:DSTATE =1:RESB 975:RESB 4037
991  IF DFLAG =1 THEN IF BIT 4047=1 THEN SETB 4039
992  IF BTASKST >2000 THEN MSG 712:GOTO 992
994  IF DFLAG =-1 THEN PROC INISD
995  IF DFLAG =0 THEN PROC INIPD
996  IF DFLAG =1 THEN PROC INITD
1000  IF DSTATE >0 THEN DSTATE =1
1005  ENDPROC 
1010 DEFPROC INISD:SETB 958
1013  DV =DVMAX /2
1014  IF BIT 856=0 THEN GOTO 1014
1015  IF DSTATE =1 THEN DRA =RDFD /DRAT ELSE DRA =DFD /DRAT 
1017  DP =DP -DRA 
1020  ENDPROC 
1022 DEFPROC F9CFEED
1024  INC =0:IF F9INC =0 THEN GOTO 1038
1026  FEEDVEL =F9INCFR 
1028  INC =INC +1:FEEDEP =FP -F9INC1 -COMP :COMP =0:PROC FEED:IF F9INC -INC >3 THEN GOTO 1028
1030  IF INC =F9INC THEN GOTO 1040
1032  INC =INC +1:FEEDEP =FP -F9INC2 : PROC FEED:IF INC =F9INC THEN GOTO 1040
1034  INC =INC +1:FEEDEP =FP -F9INC3 : PROC FEED:IF INC =F9INC THEN GOTO 1040
1036  FEEDEP =FP -F9INC4 : PROC FEED:GOTO 1040
1038  FEEDVEL =F9FR *F9WS /60:FEEDEP =FP -F9TF -COMP :COMP =0:PROC FEED
1040  DELAY F9DWELL :ENDPROC 
1042 DEFPROC F10CFEED
1044  INC =0:IF F10INC =0 THEN GOTO 1058
1046  FEEDVEL =F10INCFR 
1048  INC =INC +1:FEEDEP =FP -F10INC1 -COMP :COMP =0:PROC FEED:IF F10INC -INC >3 THEN GOTO 1048
1050  IF INC =F10INC THEN GOTO 1060
1052  INC =INC +1:FEEDEP =FP -F10INC2 : PROC FEED:IF INC =F10INC THEN GOTO 1060
1054  INC =INC +1:FEEDEP =FP -F10INC3 : PROC FEED:IF INC =F10INC THEN GOTO 1060
1056  FEEDEP =FP -F10INC4 : PROC FEED:GOTO 1060
1058  FEEDVEL =F10FR *F10WS /60:FEEDEP =FP -F10TF -COMP :COMP =0:PROC FEED
1060  DELAY F10DWELL :ENDPROC 
1062 DEFPROC F11CFEED
1064  INC =0:IF F11INC =0 THEN GOTO 1078
1066  FEEDVEL =F11INCFR 
1068  INC =INC +1:FEEDEP =FP -F11INC1 -COMP :COMP =0:PROC FEED:IF F11INC -INC >3 THEN GOTO 1068
1070  IF INC =F11INC THEN GOTO 1080
1072  INC =INC +1:FEEDEP =FP -F11INC2 : PROC FEED:IF INC =F11INC THEN GOTO 1080
1074  INC =INC +1:FEEDEP =FP -F11INC3 : PROC FEED:IF INC =F11INC THEN GOTO 1080
1076  FEEDEP =FP -F11INC4 : PROC FEED:GOTO 1080
1078  FEEDVEL =F11FR *F11WS /60:FEEDEP =FP -F11TF -COMP :COMP =0:PROC FEED
1080  DELAY F11DWELL :ENDPROC 
1082 DEFPROC F12CFEED
1084  INC =0:IF F12INC =0 THEN GOTO 1098
1086  FEEDVEL =F12INCFR 
1088  INC =INC +1:FEEDEP =FP -F12INC1 -COMP :COMP =0:PROC FEED:IF F12INC -INC >3 THEN GOTO 1088
1090  IF INC =F12INC THEN GOTO 1100
1092  INC =INC +1:FEEDEP =FP -F12INC2 : PROC FEED:IF INC =F12INC THEN GOTO 1100
1094  INC =INC +1:FEEDEP =FP -F12INC3 : PROC FEED:IF INC =F12INC THEN GOTO 1100
1096  FEEDEP =FP -F12INC4 : PROC FEED:GOTO 1100
1098  FEEDVEL =F12FR *F12WS /60:FEEDEP =FP -F12TF -COMP :COMP =0:PROC FEED
1100  DELAY F12DWELL :ENDPROC 
1108 DEFPROC INIPD:DSTATE =0:XVARI =0
1110  IF WPR <10 THEN PRINT '* FAULT: WHEEL STOPPED-NO DRESS *': ENDPROC 
1112  IF DST >2 THEN GOTO 1112
1114  IF BIT 1023=1 THEN XVARN =DMP -DP ELSE GOTO 1122
1116  IF XVARN *XVARN <.0001 THEN GOTO 1122
1118  PRINT '* FAULT: DIAMOND POSITION MONITOR ERROR:';XVARN 
1119  PROC GCAN1:PROC CLEAR
1120  UKEY 1 'RESET''DIAMOND''BAR''RSETDB':END 
1122  SETB 958:DV =DVMAX /2:DRA =0
1125  IF BIT 856=0 THEN GOTO 1125
1128  DRA =DFCLR -DSOFF /DRAT 
1130  DP =DP -DRA :RESB 4025:DSTATE =10
1135  ENDPROC 
1140 DEFPROC RSETDB
1142  IF DST >2 THEN GOTO 1142 ELSE DP =DFCLR /DRAT +DP 
1146  IF DST >2 THEN GOTO 1146 ELSE XVARN =DMP -DP 
1150  IF XVARN *XVARN <.0001 THEN PRINT 'DIAMOND RESET OK';XVARN :ENDPROC 
1152  PRINT '* FAULT: DIAMOND RESET ERROR *';XVARN 
1154  ENDPROC 
1155 DEFPROC TDCAN
1156  IF BIT 964=1 THEN PROC GCAN1
1157  END 
1160 DEFPROC INITD
1162  IF BIT 869=0 THEN DSTATE =0:PRINT '* FAULT: WHEEL STOPPED-NO DRESS':ENDPROC 
1163  IF BIT 3781=1 THEN GOTO 1166
1164  IF SPD +BIT 3782<2 THEN DSTATE =0:PRINT 'DRESSER OFF START POSITION':PROC TDCAN
1166  SETB 958:DV =DVMAX /2:DRA =0
1167  IF DSTATE =1 THEN DRA =RADFD /DRAT ELSE DRA =FADFD /DRAT 
1168  RESB 3795:DELAY 0.2:DP =DP -DRA 
1169  IF DST >2 THEN GOTO 1169 ELSE SETB 3795:ENDPROC 
1180 DEFPROC WHSPDUP
1181  IF BIT 4047+BIT 4077<1 THEN ENDPROC 
1182  IF BIT 4077=1 THEN GOTO 1184
1183  IF DSTATE =2 THEN ENDPROC 
1184  IF BTASKST >2000 THEN GOTO 1184
1185  IF BIT 4077=1 THEN PROC MWSPEED:DELAY 0.5:GOTO 1187
1186  RESB 4039:DELAY 0.5
1187  IF BIT 3799=0 THEN GOTO 1187
1188  ENDPROC 
1200 DEFPROC DRESS:SETB 4036:PROC DMWSPEED
1201  IF QRS +RS >2 THEN RSMEM =3 ELSE RSMEM =DSTATE 
1203  IF DFLAG =4 THEN SETB 956:GOTO 1210
1204  IF BIT 972=0 THEN IF BIT 347=0 THEN XVARI =XVARI +1:IF XVARI <500 THEN GOTO 1204
1205  IF BIT 856 *DSTATE <1 THEN PRINT 'DRESSER NOT READY-DRESS ABORTED': DP =DP + DRA :GOTO 1246
1207  IF RFLAG *RFLAG >1 THEN PROC TSEL
1208  IF BIT 964=0 THEN GOTO 1210
1209  IF DQRS <1 THEN PROC QSTOP
1210  IF DRS <1 THEN RST =2
1211  IF DST >2 THEN GOTO 1211
1212  IF DFLAG =4 THEN PROC CDRESS:GOTO 1245
1213  IF DFLAG =1 THEN GOTO 1215 
1214  IF XST <>7 THEN GOTO 1217 ELSE FV =10:FP =FP +DBOFF +FPOFF :SVMEM =SV :SV =DWS *6:GOTO 1216
1215  IF XST <>7 THEN GOTO 1217 ELSE PROC FEEDOUT:GOTO 1217
1216  IF FST >2 THEN GOTO 1216 ELSE SST =SST 
1217  IF DFLAG =1 THEN PROC TDRESS:GOTO 1240
1218  IF DRS *BIT 964*BIT 869>0 THEN RV =RECIPS *360:RST =5
1220  IF DQRS * BIT 964* BIT 869> 0 THEN PROC QSTART
1221  IF DFLAG =-1 THEN SETB 1008 ELSE GOTO 1223
1222  IF BIT 1008>0 THEN GOTO 1220 ELSE COMP =DRA *COMPCOR /100+DRA *DRAT :GOTO 1242
1223  DV =DVMAX :DP =-DSOFF +0.01/DRAT +DP :ESCENB =0
1224  IF DST >2 THEN GOTO 1224
1225  DRA =DFCLR /DRAT :IF DSTATE =2 THEN GOTO 1227
1226  DV =RDFR *WPR /PPR :XVARN =RDFD :XVARN1 =RDTURN :GOTO 1229
1227  DV =DFR *WPR /PPR :XVARN =DFD :XVARN1 =DTURN 
1229  BTASKST =1001:DST =1002:DP =-XVARN -.01/DRAT +DP :DST =1002
1230  DELAY XVARN1 *PPR /WPR 
1232  DV =DVMAX :DP =-XVARN -.01/DRAT +DP +DRA :DST =1002:RESB 958:SETB 4025
1234  BTASKST =1:BTASKST =2001
1236  COMP =-XVARN *COMPCOR /100+XVARN :WRAC =WRAC -XVARN 
1238  RESB 4024:ESCENB =1:IF BIT 964=0 THEN GOTO 1242 ELSE GOTO 1241
1240  IF BIT 964=0 THEN GOTO 1245 ELSE PROC WHSPDUP
1241  IF DSTATE *DRINFD =1 THEN GOTO 1243 
1242  IF BTASKST >2000 THEN GOTO 1242 ELSE SETB 4024:DRA =0
1243  IF XST <>7 THEN GOTO 1245 ELSE SV =SVMEM :SST =SST :PROC DELFDIN:COMP =COMP +FPOFF 
1244  IF FST >2 THEN GOTO 1244
1245  TOTDRCT =TOTDRCT +1:IF BIT 4038*DTINT <1 THEN GOTO 1246 ELSE DTCTR =DTCTR +1
1246  DSTATE =0:IF BIT 4024=1 THEN RESB 958
1247  IF RS >0 THEN IF RFLAG *BIT 4024>1 THEN PROC RSEL
1248  IF RS *BIT 964*BIT 869*BIT 4024= RSMEM THEN RV =RECIPS *360:RST =5
1249  IF QRS * BIT 964* BIT 869= RSMEM THEN PROC QSTART
1250  IF BIT 967=1 THEN RESB 967:PROC IFCDRET
1251  RESB 4036:ENDPROC 
1252 DEFPROC DELFDIN
1253  IF DBOFF >0 THEN DELAY 1
1254  FP =FP -DBOFF 
1255  ENDPROC 
1256 DEFPROC FEEDOUT:XST =2
1257  IF XST >2 THEN GOTO 1257 ELSE SA =SAMAX :SST =2
1258  IF STAJ >0 THEN XP =-WDAT +WRAC +GICRB +STAJ ELSE XP =-WDAT +WRAC +GICRB 
1259  IF XST +SST >4 THEN GOTO 1259 ELSE SP =360-TOANG -BCWA :ENDPROC 
1260 DEFPROC TDRESSVEL
1261  IF BIT 3799=0 THEN GOTO 1261
1262  IF DSTATE =1 THEN RV =RADFR *DTCAL *0.9*WRMAX /WRAC ELSE PROC SELFADFR
1263  ESCENB =0:IF BIT 3781=1 THEN RST =5 ELSE RST =4
1264  COMP =100+COMPCOR /100*DRA *DRAT :WRAC =WRAC -COMP :DRA =0
1265  IF SPD =0 THEN GOTO 1276 ELSE BTASKST =1001:BITWAIT1 3889
1267  IF BIT 4030=0 THEN GOTO 1272 ELSE BITWAIT1 3891
1269  IF DSTATE =1 THEN RV =RADFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFADFR2
1271  RST =RST 
1272  BITWAIT1 3890:RST =2:RST =1002
1273  IF BIT 4045=1 THEN GOTO 1275
1274  IF DTCTR >=DTINT THEN SETB 4037:DTCTR =0
1275  RESB 958:BTASKST =1:BTASKST =2001:RESB 4024:ESCENB =1:ENDPROC 
1276  BTASKST =1001:BITWAIT1 3889:IF BIT 4030=0 THEN GOTO 1279 ELSE BITWAIT1 3891
1277  IF DSTATE =1 THEN RV =RADFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFADFR2
1278  RST =5
1279  IF DSTATE =1 THEN XVARN =RRDFD ELSE XVARN =FRDFD 
1280  PROC WAITBIT
1281  IF DSTATE =1 THEN RV =RRDFR *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFRDFR
1282  RST =4:BITWAIT1 3889:IF BIT 4030=0 THEN GOTO 1285 ELSE BITWAIT1 3891
1283  IF DSTATE =1 THEN RV =RRDFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFRDFR2
1284  RST =4
1285  BITWAIT1 3890:RST =2:RESB 958:SETB 4025
1286  IF BIT 4045=1 THEN GOTO 1288
1287  IF DTCTR >DTINT THEN SETB 4037:DTCTR =0
1288  BTASKST =1:BTASKST =2001
1289  XVARN =100+COMPCOR /100*XVARN :WRAC =WRAC -XVARN :COMP =COMP +XVARN 
1290  RESB 4024:ESCENB =1:ENDPROC 
1292 DEFPROC WAITBIT
1293  BITWAIT1 3890:RST =2:RESB 3795:DELAY 0.2
1294  RST =1002:DELAY 0.2:DP =-XVARN /DRAT +DP :DST =1002:SETB 3795
1295  ENDPROC 
1300 DEFPROC FEEDLCR:IF MANFEED =1 THEN GOTO 1307
1305  PROC HFEED:IF FST *BIT 855>2 THEN GOTO 1305 ELSE FST =2:ENDPROC 
1307  SETB 952:PROC FEED
1310  IF FST *BIT 855<3 THEN FST =2:RESB 952:ENDPROC 
1313  IF BIT 1+BIT 2+BIT 865=0 THEN FST =2
1315  GOTO 1307
1317 DEFPROC FEEDGC2:IF MANFEED =1 THEN GOTO 1333
1323  PROC HFEED:IF FST *BIT 852>2 THEN GOTO 1323 ELSE FST =2
1325  IF FP >FOFF -ORUN THEN ENDPROC 
1327  PRINT '* CHECK SIZE, FEED OVER-RUN LIMIT REACHED DURING MEDIUM FEED *'
1328  PRINT '   CHECK GC N0.2'
1330  PROC GCAN1:END 
1333  SETB 952:PROC FEED
1335  IF FST *BIT 852<3 THEN FST =2:RESB 952:ENDPROC 
1337  IF BIT 1+BIT 2+BIT 865=0 THEN FST =2
1340  GOTO 1333
1343 DEFPROC FEEDGC3:IF MANFEED =1 THEN GOTO 1360
1347  PROC HFEED:IF FST *BIT 853>2 THEN GOTO 1347 ELSE FST =2
1350  IF FP >FOFF -ORUN THEN ENDPROC 
1353  PRINT '* CHECK SIZE, FEED OVER-RUN LIMIT REACHED DURING SLOW FEED *'
1355  PRINT '   CHECK GC N0.3'
1357  PROC GCAN1:END 
1360  SETB 952:PROC FEED
1363  IF FST *BIT 853<3 THEN FST =2:RESB 952:ENDPROC 
1365  IF BIT 1+BIT 2+BIT 865=0 THEN FST =2
1367  GOTO 1360
1368  ENDPROC 
1370 DEFPROC ADVGAFD
1373  IF MANFEED =1 THEN PROC FEED:SETB 1009:PRINT 'GAUGE ADVANCE':ENDPROC 
1375  PROC HFEED:IF FP >FOFF +BGA +.001 THEN GOTO 1375
1376  SETB 1009:PRINT 'GAUGE ADVANCE'
1377  PROC HFEED:IF FST >2 THEN GOTO 1377 ELSE ENDPROC 
1380 DEFPROC QSTART:SETB 3813:XVARI =0
1382  IF BIT 3815=0 THEN XVARI =XVARI +1:IF XVARI <99 THEN GOTO 1382 
1383  IF XVARI >98 THEN MSG 707:PROC GCAN1:END 
1384  QV =QRECIPS *360/QRAT :QST =5
1386  ENDPROC 
1400 DEFPROC BFEED:INC =0:FEEDEP =FP -BTF +BFEP 
1403  IF LCRFLAG =1 THEN FEEDVEL =BAFR *BWS /60:PROC FEEDLCR
1405  FEEDVEL =BFFR *BWS /60
1406  IF PSET *GSTATE >6 THEN PROC BGFEED:GOTO 1420 ELSE PROC FEED
1407  DELAY BFDWELL 
1410  IF PSET =6 THEN PROC BACKOFF:FEEDEP =FP -BRAEP +BMEP ELSE FEEDEP =FP -BFEP +BMEP 
1413  FEEDVEL =BMFR *BWS /60:PROC FEED:DELAY BMDWELL 
1415  IF DSTATE >0 THEN PROC DRESS:FLPDCO =0:FEEDEP =FP -COMP :COMP =0:PROC FEED
1417  FEEDEP =FP -BMEP :FEEDVEL =BSFR *BWS /60:PROC FEED:DELAY BSDWELL 
1420  FEEDVEL =BRFR *BWS /60:FEEDEP =FP +BREP :PROC FEED
1423  ENDPROC 
1425 DEFPROC BGFEED
1427  PROC ADVGAFD:DELAY BFDWELL 
1430  IF PSET =8 THEN PROC BACKOFF
1431  XVARI =0
1432  IF BIT 851=1 THEN XVARI =XVARI +1 ELSE GOTO 1435
1433  IF XVARI <100 THEN GOTO 1432 
1434  PRINT '**FAULT GAUGE FAILED, CHECK GC NO.1**':PROC GCAN1:END 
1435  FEEDEP =FOFF -ORUN :FEEDVEL =BMFR *BWS /60:PROC FEEDGC2:DELAY BMDWELL 
1437  IF DSTATE >0 THEN PROC DRESS:FLPDCO =0:PROC CYHOLD ELSE GOTO 1440
1438  FEEDEP =FP -COMP :FOFF =FOFF -COMP :COMP =0:PROC FEEDGC3
1439  IF BIT 853=0 THEN GOTO 1443
1440  FEEDEP =FOFF -ORUN :FEEDVEL =BSFR *BWS /60:PROC FEEDGC3
1443  XVARN =TIME 
1445  IF BSDWELL *10+XVARN -TIME *BIT 854>0 THEN GOTO 1445 ELSE FST =2
1447  IF FST >2 THEN GOTO 1447 ELSE GASAJ =FP -FOFF :STAJ =STAJ +GASAJ 
1450  ENDPROC 
1460 DEFPROC BACKOFF
1463  FEEDVEL =RAPIDFR :FEEDEP =FP -BFEP +BBEP :PROC FEED
1465  SETB 955:DELAY BBDWELL :RESB 955
1467  FEEDEP =FP -BBEP +BRAEP :PROC FEED
1470  ENDPROC 
1480 DEFPROC CALC:GLOBE =SLOBE :PROC CALC1:ENDPROC 
1482 DEFPROC CALC1:GLDATA 
1483  IF LBSET =1 THEN GSAJ =-SWSTATE *4.405*LFT1 +STAJ +S1AJ :GPAJ =PTAJ +P1AJ :GOTO 1494
1484  IF LBSET =2 THEN GSAJ =SWSTATE *4.405*LFT2 +STAJ +S2AJ :GPAJ =PTAJ +P2AJ :GOTO 1494
1485  IF LBSET =3 THEN GSAJ =STAJ +S3AJ :GPAJ =PTAJ +P3AJ :GOTO 1494
1486  IF LBSET =4 THEN GSAJ =STAJ +S4AJ :GPAJ =PTAJ +P4AJ :GOTO 1494
1487  IF LBSET =5 THEN GSAJ =STAJ +S5AJ :GOTO 1494
1488  IF LBSET =6 THEN GSAJ =STAJ +S6AJ :GOTO 1494
1489  IF LBSET =9 THEN GSAJ =STAJ +S9AJ :GPAJ =PTAJ +P9AJ :GOTO 1494
1490  IF LBSET =10 THEN GSAJ =STAJ +S10AJ :GPAJ =PTAJ +P10AJ :GOTO 1494
1491  IF LBSET =11 THEN GSAJ =STAJ +S11AJ :GPAJ =PTAJ +P11AJ :GOTO 1494
1492  IF LBSET =12 THEN GSAJ =STAJ +S12AJ :GPAJ =PTAJ +P12AJ :GOTO 1494
1493  GSAJ =STAJ 
1494  GCALC :WRAT =WRAC :GASAJ =0:IF LBSET <13 THEN ENDPROC 
1495  PRINT 'PARAMETER SET SPECIFIED IS TOO HIGH':PROC GCAN1:END 
1500 DEFPROC GRIND:IF BIT 958=1 THEN ENDPROC 
1501  IF WRAC <WRMIN THEN PROC WCHANGE:PROC AXSTOP:SETB 873:END 
1502  IF BIT 1022=1 THEN PROC SERVON
1503  TIME =0:IF DXXP =6 THEN DVAR 'CYCLE IN PROGRESS'TIME 
1505  IF BIT 1006=1 THEN PROC LOCWORK
1506  IF BIT 4051>0 THEN PROC LOADCHK2
1507  IF BIT 864=0 THEN GOTO 1507
1508  PRINT 'SHAFT';GSTYP 
1510  RESB 954:RESB 957:SETB 964:SETB 951:XV =RAPIDFR :SETB 966:RESB 873:RESB 1020
1511  SETB 4024:RESB 4034
1513  IF BIT 950=0 THEN GOTO 1517
1515  IF GLOBE =SLOBE THEN GOTO 1520
1517  PROC CALC
1520  IF BIT 987=1 THEN PROC WAIT
1521  IF BIT 874=0 THEN PROC HOLDZP
1523  ZP =GLPOS +CAJ :SV =0.3*SVMAX :SP =360-TOANG -FCWA :WRMEM =WRAC :ZPFIRST =GLPOS 
1525  IF SWSTATE >0 THEN PROC SWIVEL
1527  PROC CLEAR:UKEY 14'''''''GCAN1':UKEY 13''''''''
1530  IF BIT 3776=0 THEN RESB 968 ELSE UKEY 9 'COOLANT''ON/OFF''''':SETB 968
1533  IF BIT 400 + BIT 877>0 THEN UKEY 7'STOP NEXT''MC/LOADER''CYCLE'''
1535  IF BIT 400=1 THEN UKEY 8'INDEX''FINISH''CONVEYOR'''
1537  IF MANFEED =0 THEN GOTO 1549 ELSE PROC BLANK
1540  PRINT 'REMOTE STATION RATE SWITCHES ENABLED FOR MANUAL FEED CONTROL'
1543  PRINT 'MEDIUM RATE SELECTS NORMAL FEED RATE'
1549  FPOFF =0
1550  IF SINGCY =1 THEN PROC SICYGR:GOTO 1560
1553  IF DUALCY =1 THEN FPOFF =FPCLR :PROC DUCYGR:GOTO 1560 
1555  IF FICY =1 THEN PROC FICYGR:GOTO 1560
1557  IF ROCY =1 THEN PROC ROCYGR
1560  PARTCT =PARTCT +1:PRINT 'PARTS FINISHED';PARTCT :PROC INSPECT
1563  TOPARTCT =TOPARTCT +1:WBALCTR =WBALCTR +1
1564  IF WBALCTR >WBALINT -1 THEN SETB 980:DELAY 0.5:RESB 980:WBALCTR =0
1565  PRINT 'LAST CYCLE TIME (SECONDS)';CTIME /10
1567  XVARN =WRMEM -WRAC :IF XVARN =0 THEN GOTO 1579
1570  WLEFT =WRAC -WRMIN /XVARN 
1573  PRINT :PRINT 'AT CURRENT SETTINGS THE NUMBER OF SHAFTS BEFORE'
1575  PRINT 'WHEEL CHANGE=',WLEFT 
1576  IF ERLYWRNG >WLEFT THEN SETB 4028
1577  IF WLEFT <1 THEN PROC WCHANGE:PROC AXSTOP
1579  IF DDATC <DDATMIN THEN PROC DDATSET
1580  IF BIT 4045*BIT 4038*DTINT >0 THEN PROC DIATURN
1581  IF BIT 3798=1 THEN RESB 3798:PROC BLANK:MSG 218
1582  IF BIT 3806=1 THEN RESB 3806:PROC BLANK:MSG 270
1583  IF BIT 4068*BIT 280>0.1 THEN MSG 722
1584  ENDPROC 
1600 DEFPROC DIATURN
1602  IF DTCTR >=DTINT THEN GOTO 1604 ELSE ENDPROC 
1604  PRINT :PRINT 'DIAMOND TURNING IN PROGRESS'
1606  IF DST +RST >4 THEN GOTO 1606
1608  DV =DVMAX :DP =DP +0.1:DRA =-0.1
1610  RV =RVMAX :RST =5
1612  IF BIT 3892=0 THEN GOTO 1612 ELSE RST =2:DELAY 0.5:RST =4
1614  IF BIT 3781=0 THEN GOTO 1614 ELSE RST =2:DTCTR =0
1616  DP =DP -0.1:DRA =0
1618  IF DST >2 THEN GOTO 1618
1620  ENDPROC 
1630 DEFPROC INSPECT
1632  IF PARTCT >INSPFREQ THEN SETB 4071
1634  IF PARTCT =INSPFREQ THEN SETB 4070
1636  IF PARTCT +2= INSPFREQ THEN SETB 4069
1638  ENDPROC 
1650 DEFPROC SICYGR
1651  RESB 4039:PROC MWSPEED
1653  PROC SICYGR1:IF GLOBE >SLOBE THEN GOTO 1653 ELSE PROC GCAN:ENDPROC 
1655 DEFPROC SICYGR1 
1657  IF DSTATE *DFLAG >3 THEN PROC DRESS:RLPDCO =0:COMP =0
1660  IF BIT 987=0 THEN GOTO 1667
1663  IF ZST >2 THEN GOTO 1663 ELSE XVARN =GLPOS +CAJ -ZP 
1665  IF XVARN *XVARN <.01 THEN GOTO 1671 ELSE PROC WAIT
1667  IF BIT 874=0 THEN PROC HOLDZP
1670  IF GLPOS +CAJ <ZPMAX THEN ZP =GLPOS +CAJ ELSE MSG 704:PROC GCAN1:END 
1671  FV =XVMAX :PSET =LBSET :CLOBE =GLOBE :IF SWSTATE >0 THEN PROC SWIVEL
1672  IF PSET <>9 THEN GOTO 1674 ELSE FP =R9TF +F9TF :GSV =R9WS *6
1673  WTANG =R9INCFA :CRS =CRS9 :CRL =CRL9 :RS =RS9 :QRS =QRS9 :GOTO 1695
1674  IF PSET <>10 THEN GOTO 1676 ELSE FP =R10TF +F10TF :GSV =R10WS *6
1675  WTANG =R10INCFA :CRS =CRS10 :CRL =CRL10 :RS =RS10 :QRS =QRS10 :GOTO 1695
1676  IF PSET <>11 THEN GOTO 1678 ELSE FP =R11TF +F11TF :GSV =R11WS *6
1677  WTANG =R11INCFA :CRS =CRS11 :CRL =CRL11 :RS =RS11 :QRS =QRS11 :GOTO 1695
1678  IF PSET <>12 THEN GOTO 1680 ELSE FP =R12TF +F12TF :GSV =R12WS *6
1679  WTANG =R12INCFA :CRS =CRS12 :CRL =CRL12 :RS =RS12 :QRS =QRS12 :GOTO 1695
1680  IF PSET <>1 THEN GOTO 1683 ELSE FP =R1TF +F1TF :GSV =R1WS *6
1681  WTANG =R1INCFA :CRS =CRS1 :CRL =CRL1 :RS =RS1 :QRS =QRS1 :GOTO 1695
1683  IF PSET <>2 THEN GOTO 1685 ELSE FP =R2TF +F2TF :GSV =R2WS *6
1684  WTANG =R2INCFA :CRS =CRS2 :CRL =CRL2 :RS =RS2 :QRS =QRS2 :GOTO 1695
1685  IF PSET <>3 THEN GOTO 1687 ELSE FP =R3TF +F3TF :GSV =R3WS *6
1686  WTANG =R3INCFA :CRS =CRS3 :CRL =CRL3 :RS =RS3 :QRS =QRS3 :GOTO 1695
1687  IF PSET <>4 THEN GOTO 1689 ELSE FP =R4TF +F4TF :GSV =R4WS *6
1688  WTANG =R4INCFA :CRS =CRS4 :CRL =CRL4 :RS =RS4 :QRS =QRS4 :GOTO 1695
1689  FP =BTF :GSV =BWS *6
1690  IF PSET =5 THEN CRS =CRS5 :CRL =CRL5 :RS =RS5 :QRS =QRS5 :GOTO 1694
1691  IF PSET =6 THEN CRS =CRS6 :CRL =CRL6 :RS =RS6 :QRS =QRS6 :GOTO 1694
1692  IF PSET =7 THEN CRS =0:CRL =0:RS =RS7 :QRS =QRS7 :GOTO 1694
1693  IF PSET =8 THEN CRS =0:CRL =0:RS =RS8 :QRS =QRS8 
1694  IF BWS >100 THEN SVRNGE =2
1695  IF DSTATE >0 THEN PROC DRESS:RLPDCO =0:COMP =0
1696  FOFF =GLPOS -ZPFIRST *TAPER -WRAT +WRAC +GASAJ :FV =RAPIDFR 
1697  IF FST >2 THEN GOTO 1697 ELSE FP =FP +FOFF 
1698  IF FST +ZST +SST >6 THEN GOTO 1698
1699  IF GCST <2 THEN GOTO 1699
1700  IF -WDAT +GICRB +WRAC +GSAJ <XNOSE THEN MSG 705:PROC GCAN1:END 
1701  IF BIT 987=1 THEN PROC WAIT
1702  IF RFLAG *BIT 4024>1 THEN PROC RSEL
1703  IF RS *BIT 869*BIT 4024>0 THEN IF RS <> 2 THEN RV =RECIPS *360:RST =5:GOTO 1706 
1704  IF QRS * BIT 869> 0 THEN IF QRS <> 2 THEN PROC QSTART:GOTO 1706
1705  IF BIT 4029=1 THEN PROC LOCRECIP
1706  IF BIT 987=1 THEN PROC WAIT
1707  SV =24:SST =5:IF PSET <5 THEN SSTMEM =9 ELSE SSTMEM =5
1708  IF PSET >8 THEN SSTMEM =9
1710  IF BIT 987=1 THEN PROC WAIT
1713  IF SWSTATE *BIT 878>0 THEN GOTO 1713 ELSE PROC INFEED
1715  PRINT 'GRINDING LOBE ';GLOBE ;GPTYP 
1717  GLOBE =GLOBE +1:IF GLOBE =NLOBES +1 THEN GLOBE =SLOBE :SETB 1020
1718  FLPDCO =FLPDCO +1:IF FLPDCO <>FLPD THEN GOTO 1720
1719  IF DFLAG =4 THEN GOTO 1723
1720  PROC CALC1
1723  IF BIT 987=1 THEN PROC WAIT
1725  IF CRS =0 THEN SETB 3787 ELSE ZA =100:ZV =2*CRS *CRL :ZP =ZP -CRL :ZST =10
1727  IF BIT 4024=0 THEN GOTO 1733
1730  IF FLPDCO =FLPD THEN PROC INIFD
1733  IF XST <>7 THEN GOTO 1733
1735  IF PSET =1 THEN PROC R1CFEED:SV =F1WS *6:SST =F1VS :WTANG =F1INCFA :GOTO 1747
1736  IF PSET =2 THEN PROC R2CFEED:SV =F2WS *6:SST =F2VS :WTANG =F2INCFA :GOTO 1747
1738  IF PSET =3 THEN PROC R3CFEED:SV =F3WS *6:SST =F3VS :WTANG =F3INCFA :GOTO 1747
1739  IF PSET =4 THEN PROC R4CFEED:SV =F4WS *6:SST =F4VS :WTANG =F4INCFA :GOTO 1747
1740  IF PSET =9 THEN PROC R9CFEED:SV =F9WS *6:SST =F9VS :WTANG =F9INCFA :GOTO 1747
1741  IF PSET =10 THEN PROC R10CFEED:SV =F10WS *6:SST =F10VS :WTANG =F10INCFA :GOTO 1747
1742  IF PSET =11 THEN PROC R11CFEED:SV =F11WS *6:SST =F11VS :WTANG =F11INCFA :GOTO 1747
1743  IF PSET =12 THEN PROC R12CFEED:SV =F12WS *6:SST =F12VS :WTANG =F12INCFA :GOTO 1747
1745  IF PSET >4 THEN PROC BFEED:GOTO 1763
1747  BIT 960=LOWP 
1748  IF BIT 4024=0 THEN SETB 4024 ELSE GOTO 1751
1749  IF BTASKST >2000 THEN MSG 712:GOTO 1749 ELSE DRA =0
1750  IF FLPDCO =FLPD THEN PROC INIFD
1751  IF DSTATE >0 THEN PROC DRESS:FLPDCO =0
1752  IF RS * BIT 869>0 THEN IF RS <>1 THEN RV = RECIPS * 360:RST =5:GOTO 1754 ELSE RST =2
1753  IF QRS * BIT 869>0 THEN IF QRS <>1 THEN PROC QSTART ELSE PROC QSTOP
1754  IF PSET =1 THEN PROC F1CFEED:WTANG =R1ANG :WST =4:GOTO 1763
1755  IF PSET =2 THEN PROC F2CFEED:WTANG =R2ANG :WST =4:GOTO 1763
1756  IF PSET =3 THEN PROC F3CFEED:WTANG =R3ANG :WST =4:GOTO 1763
1757  IF PSET =4 THEN PROC F4CFEED:WTANG =R4ANG :WST =4:GOTO 1763
1758  IF PSET =9 THEN PROC F9CFEED:WTANG =R9ANG :WST =4:GOTO 1763
1759  IF PSET =10 THEN PROC F10CFEED:WTANG =R10ANG :WST =4:GOTO 1763
1760  IF PSET =11 THEN PROC F11CFEED:WTANG =R11ANG :WST =4:GOTO 1763
1761  IF PSET =12 THEN PROC F12CFEED:WTANG =R12ANG :WST =4 
1763  XST =2:SV =540
1765  IF XST >2 THEN GOTO 1765 ELSE SVRNGE =1:RST =2:SA =SAMAX 
1766  SST =2:PROC QSTOP
1767  IF STAJ >0 THEN XP =-WDAT +WRAC +GICRB +STAJ ELSE XP =-WDAT +WRAC +GICRB 
1768  IF SST >2 THEN GOTO 1768
1770  RESB 3787:ZST =2:ZA =ZAMAX :ZV =ZVMAX 
1773  SP =360-TOANG -BCWA 
1775  IF GLOBE >SLOBE THEN RLPDCO =RLPDCO +1 ELSE GOTO 1783
1777  IF RLPDCO =RLPD THEN PROC INIRD
1780  GOTO 1785
1783  IF RLPD >0 THEN PROC INIRD
1785  IF XST >2 THEN GOTO 1785 ELSE RESB 960
1787  ENDPROC 
1800 DEFPROC CPOS
1801  IF DFLAG <> 1 THEN ENDPROC 
1802  IF PSET >2 THEN ENDPROC 
1804  IF GCST <2 THEN GOTO 1804
1806  IF ZST >2 THEN GOTO 1806
1808  IF PSET =1 THEN COSET =COSET1 ELSE COSET =COSET2 
1810  IF GLPOS +CAJ +COSET <ZPMAX THEN ZP =GLPOS +CAJ +COSET ELSE MSG 704:PROC GCAN1:END 
1828  IF ZST >2 THEN GOTO 1828
1830  ENDPROC 
1870 DEFPROC DUCYGR
1871  IF DUALPWS *DFLAG >.1 THEN PROC SELROSHFT
1875  RESB 4039:RESB 965:PROC ROCYGR
1876  IF PSET =1 THEN GSV =F1WS *6:SSTMEM =F1VS :WTANG =F1INCFA :GOTO 1884
1877  IF PSET =2 THEN GSV =F2WS *6:SSTMEM =F2VS :WTANG =F2INCFA :GOTO 1884
1878  IF PSET =3 THEN GSV =F3WS *6:SSTMEM =F3VS :WTANG =F3INCFA :GOTO 1884
1879  IF PSET =4 THEN GSV =F4WS *6:SSTMEM =F4VS :WTANG =F4INCFA :GOTO 1884
1880  IF PSET =9 THEN GSV =F9WS *6:SSTMEM =F9VS :WTANG =F9INCFA :GOTO 1884
1881  IF PSET =10 THEN GSV =F10WS *6:SSTMEM =F10VS :WTANG =F10INCFA :GOTO 1884
1882  IF PSET =11 THEN GSV =F11WS *6:SSTMEM =F11VS :WTANG =F11INCFA :GOTO 1884
1883  IF PSET =12 THEN GSV =F12WS *6:SSTMEM =F12VS :WTANG =F12INCFA 
1884  IF XST =7 THEN SV =GSV :SST =SSTMEM 
1885  BIT 960=LOWP :SETB 4039:PROC MWSPEED:DELAY 0.5
1886  IF BIT 4024=0 THEN SETB 4024 ELSE GOTO 1890
1887  IF BTASKST >2000 THEN MSG 712:GOTO 1887 ELSE DRA =0
1888  IF FLPD >0 THEN SETB 958:PROC INIFD
1890  IF DUALPWS *DFLAG >.1 THEN PROC SELFINSHFT
1891  IF DSTATE >0 THEN PROC DRESS:FLPDCO =0:GOTO 1895 ELSE RESB 958
1892  IF DUALPWS *DFLAG >.1 THEN PROC FEEDOUT:GOTO 1896
1894  IF BIT 4072=1 THEN PROC FEEDOUT
1895  IF BIT 4072=1 THEN PROC CPOS
1896  PROC FICYGR
1897  IF DUALPWS *DFLAG >.1 THEN PROC SELROSHFT
1898  ENDPROC 
1899 DEFPROC ROCYGR:RESB 4039:PROC MWSPEED
1900  PROC ROCYGR1:IF GLOBE *BIT 966>SLOBE THEN GOTO 1900
1901  IF BIT 966>0 THEN PROC GCAN
1902  ENDPROC 
1905 DEFPROC ROCYGR1
1907  IF DSTATE *DFLAG >3 THEN PROC DRESS:RLPDCO =0:COMP =0
1910  IF BIT 987=0 THEN GOTO 1917
1913  IF ZST >2 THEN GOTO 1913 ELSE XVARN =GLPOS +CAJ -ZP 
1915  IF XVARN *XVARN <.01 THEN GOTO 1921 ELSE PROC WAIT
1917  IF BIT 874=0 THEN PROC HOLDZP
1918  IF GLPOS +CAJ <ZPMAX THEN ZP =GLPOS +CAJ ELSE MSG 704:PROC GCAN1:END 
1921  FV =XVMAX :PSET =LBSET :CLOBE =GLOBE :IF SWSTATE >0 THEN PROC SWIVEL
1922  IF PSET <>9 THEN GOTO 1924 ELSE FP =R9TF +F9TF :GSV =R9WS *6
1923  WTANG =R9INCFA :CRS =CRS9 :CRL =CRL9 :RS =RS9 :QRS =QRS9 :GOTO 1945
1924  IF PSET <>10 THEN GOTO 1926 ELSE FP =R10TF +F10TF :GSV =R10WS *6
1925  WTANG =R10INCFA :CRS =CRS10 :CRL =CRL10 :RS =RS10 :QRS =QRS10 :GOTO 1945
1926  IF PSET <>11 THEN GOTO 1928 ELSE FP =R11TF +F11TF :GSV =R11WS *6
1927  WTANG =R11INCFA :CRS =CRS11 :CRL =CRL11 :RS =RS11 :QRS =QRS11 :GOTO 1945
1928  IF PSET <>12 THEN GOTO 1930 ELSE FP =R12TF +F12TF :GSV =R12WS *6
1929  WTANG =R12INCFA :CRS =CRS12 :CRL =CRL12 :RS =RS12 :QRS =QRS12 :GOTO 1945
1930  IF PSET <>1 THEN GOTO 1933 ELSE FP =R1TF +F1TF :GSV =R1WS *6
1931  WTANG =R1INCFA :CRS =CRS1 :CRL =CRL1 :RS =RS1 :QRS =QRS1 :GOTO 1945
1933  IF PSET <>2 THEN GOTO 1935 ELSE FP =R2TF +F2TF :GSV =R2WS *6
1934  WTANG =R2INCFA :CRS =CRS2 :CRL =CRL2 :RS =RS2 :QRS =QRS2 :GOTO 1945
1935  IF PSET <>3 THEN GOTO 1937 ELSE FP =R3TF +F3TF :GSV =R3WS *6
1936  WTANG =R3INCFA :CRS =CRS3 :CRL =CRL3 :RS =RS3 :QRS =QRS3 :GOTO 1945
1937  IF PSET <>4 THEN GOTO 1939 ELSE FP =R4TF +F4TF :GSV =R4WS *6
1938  WTANG =R4INCFA :CRS =CRS4 :CRL =CRL4 :RS =RS4 :QRS =QRS4 :GOTO 1945
1939  FP =BTF :GSV =BWS *6
1940  IF PSET =5 THEN CRS =CRS5 :CRL =CRL5 :RS =RS5 :QRS =QRS5 :GOTO 1944
1941  IF PSET =6 THEN CRS =CRS6 :CRL =CRL6 :RS =RS6 :QRS =QRS6 :GOTO 1944
1942  IF PSET =7 THEN RS =RS7 :QRS =QRS7 :GOTO 1944
1943  IF PSET =8 THEN RS =RS8 :QRS =QRS8 
1944  IF BWS >100 THEN SVRNGE =2
1945  IF DSTATE >0 THEN PROC DRESS:RLPDCO =0:COMP =0
1946  FOFF =GLPOS -ZPFIRST *TAPER -WRAT +WRAC +GASAJ 
1947  IF FST >2 THEN GOTO 1947 ELSE FP =FP +FOFF :FV =RAPIDFR 
1948  IF FST +ZST +SST >6 THEN GOTO 1948
1949  IF GCST <2 THEN GOTO 1949
1950  IF -WDAT +GICRB +WRAC +GSAJ <XNOSE THEN MSG 705:PROC GCAN1:END 
1954  IF BIT 987=1 THEN PROC WAIT
1955  IF RS > 0 THEN IF RFLAG *BIT 4024>1 THEN PROC RSEL
1956  IF RS *BIT 869*BIT 4024>0 THEN IF RS <>2 THEN RV =RECIPS *360:RST =5:GOTO 1959 
1957  IF QRS *BIT 869>0 THEN IF QRS <>2 THEN PROC QSTART:GOTO 1959
1958  IF BIT 4029=1 THEN PROC LOCRECIP
1959  IF BIT 987=1 THEN PROC WAIT
1960  SV =20:SST =5:IF PSET <5 THEN SSTMEM =9 ELSE SSTMEM =5
1961  IF PSET >8 THEN SSTMEM =9
1962  IF BIT 987=1 THEN PROC WAIT
1963  IF SWSTATE *BIT 878>0 THEN GOTO 1963 ELSE PROC INFEED
1965  PRINT 'GRINDING LOBE';GLOBE ;GPTYP 
1967  GLOBE =GLOBE +1
1970  IF GLOBE <NLOBES +1 THEN GOTO 1975 ELSE BIT 965=DUALCY 
1973  IF BIT 965=0 THEN GLOBE =SLOBE :SETB 1020 ELSE GLOBE =NLOBES -1 :RESB 966
1974  IF DFLAG <>4 THEN IF DFLAG <>1 THEN GOTO 1976
1975  IF BIT 965*FLPD >0 THEN GOTO 1977 ELSE IF BIT 965* BIT 4072>0 THEN GOTO 1977
1976  PROC CALC1
1977  IF BIT 987=1 THEN PROC WAIT
1980  IF CRS =0 THEN SETB 3787 ELSE ZA =100:ZV =2*CRS *CRL :ZP =ZP -CRL :ZST =10
1983  IF BIT 4024*BIT 965*FLPD >0 THEN PROC INIFD
1985  IF XST <>7 THEN GOTO 1985
1987  IF PSET =1 THEN PROC R1CFEED:WTANG =R1ANG :WST =4:GOTO 2000
1990  IF PSET =2 THEN PROC R2CFEED:WTANG =R2ANG :WST =4:GOTO 2000
1991  IF PSET =3 THEN PROC R3CFEED:WTANG =R3ANG :WST =4:GOTO 2000
1992  IF PSET =4 THEN PROC R4CFEED:WTANG =R4ANG :WST =4:GOTO 2000
1993  IF PSET =9 THEN PROC R9CFEED:WTANG =R9ANG :WST =4:GOTO 2000
1994  IF PSET =10 THEN PROC R10CFEED:WTANG =R10ANG :WST =4:GOTO 2000
1995  IF PSET =11 THEN PROC R11CFEED:WTANG =R11ANG :WST =4:GOTO 2000
1996  IF PSET =12 THEN PROC R12CFEED:WTANG =R12ANG :WST =4:GOTO 2000
1997  IF PSET >4 THEN PROC BFEED
2000  IF BIT 965>0 THEN WST =0:ENDPROC 
2003  XST =2:SV =540
2005  IF XST >2 THEN GOTO 2005 ELSE SVRNGE =1:SA =SAMAX 
2006  SST =2
2007  IF STAJ >0 THEN XP =-WDAT +WRAC +GICRB +STAJ ELSE XP =-WDAT +WRAC +GICRB 
2008  IF SST >2 THEN GOTO 2008
2010  RESB 3787:ZST =2:ZA =ZAMAX :ZV =ZVMAX 
2013  SP =360-TOANG -BCWA 
2014  IF BIT 4024=0 THEN SETB 4024 ELSE GOTO 2016
2015  IF BTASKST >2000 THEN MSG 712:GOTO 2015 ELSE DRA =0
2016  RST =2:PROC QSTOP:IF GLOBE >SLOBE THEN RLPDCO =RLPDCO +1 ELSE GOTO 2023
2017  IF RLPDCO =RLPD THEN PROC INIRD
2020  GOTO 2025
2023  IF RLPD >0 THEN PROC INIRD
2025  IF XST >2 THEN GOTO 2025
2027  ENDPROC 
2028 DEFPROC SELFINSHFT
2029  IF BIT 961=0 THEN GSTYP =FGSTYP :GOTO 2036
2031  IF GSTYP =S1 THEN GSTYP =S2 
2032  IF GSTYP =S3 THEN GSTYP =S4 
2033  IF GSTYP =S5 THEN GSTYP =S6 
2034  IF GSTYP =S7 THEN GSTYP =S8 
2036  GLOBE =NLOBES :PROC CALC1
2037  PRINT 'GRINDING LOBE';GLOBE ;GPTYP 
2038  GLOBE =NLOBES -1:ENDPROC 
2039 DEFPROC SELROSHFT
2040  IF BIT 961=1 THEN GOTO 2043
2041  IF GSTYP =FGSTYP THEN GSTYP =RGSTYP :GOTO 2048
2042  GOTO 2049
2043  IF GSTYP =S2 THEN GSTYP =S1 :GOTO 2048
2044  IF GSTYP =S4 THEN GSTYP =S3 :GOTO 2048
2045  IF GSTYP =S6 THEN GSTYP =S5 :GOTO 2048
2046  IF GSTYP =S8 THEN GSTYP =S7 :GOTO 2048
2047  GOTO 2049
2048  PROC CALC1
2049  ENDPROC 
2050 DEFPROC FICYGR:BIT 960=LOWP 
2052  PROC FICYGR1:IF GLOBE >SLOBE -BIT 965 THEN GOTO 2052 ELSE PROC GCAN:ENDPROC 
2053 DEFPROC FICYGR1
2054  IF DSTATE *DFLAG >3 THEN PROC DRESS:FLPDCO =0:COMP =0
2055  IF BIT 966=1 THEN GOTO 2070 ELSE SETB 966
2056  IF BIT 4072=1 THEN GOTO 2063
2057  IF DUALPWS *DFLAG >.1 THEN GOTO 2063
2058  IF DFLAG <1 THEN GOTO 2145 ELSE IF DFLAG =4 THEN GOTO 2061
2059  IF DFLAG =1 THEN IF FLPD <1 THEN GOTO 2145 ELSE SV =24:SST =5:PROC INFEED:PROC CALC1 
2060  IF XST <>7 THEN GOTO 2060 ELSE GOTO 2145
2061  IF CRS =0 THEN SETB 3787 ELSE ZA =100:ZV =2*CRS *CRL :ZP =ZP -CRL :ZST =10
2062  GOTO 2145
2063  IF DFLAG <>4 THEN GOTO 2066
2064  IF CRS =0 THEN SETB 3787 ELSE ZA =100:ZV =2*CRS *CRL :ZP =ZP -CRL :ZST =10
2065  IF FLPD >1 THEN GOTO 2067
2066  SV =24:SST =5:PROC INFEED:PROC CALC1
2067  IF XST <>7 THEN GOTO 2067
2069  GOTO 2145
2070  PSET =LBSET :IF PSET * BIT 4072=1 THEN COSET =COSET1 :GOTO 2074
2071  IF PSET * BIT 4072=2 THEN COSET =COSET2 ELSE COSET =0
2074  IF BIT 987=0 THEN GOTO 2077
2075  IF ZST >2 THEN GOTO 2075 ELSE XVARN =GLPOS +CAJ +COSET -ZP 
2076  IF XVARN *XVARN <.01 THEN GOTO 2079 ELSE PROC WAIT
2077  IF BIT 874=0 THEN PROC HOLDZP
2078  IF GLPOS +CAJ +COSET <ZPMAX THEN ZP =GLPOS +CAJ +COSET ELSE MSG 704:PROC GCAN1:END 
2079  FV =XVMAX :PSET =LBSET :IF SWSTATE >0 THEN PROC SWIVEL
2080  IF PSET <>1 THEN GOTO 2082 ELSE FP =F1TF :GSV =F1WS *6
2081  WTANG =F1INCFA :SSTMEM =F1VS :CRS =CRS1 :CRL =CRL1 :RS =RS1 :QRS =QRS1 :GOTO 2107
2082  IF PSET <>2 THEN GOTO 2084 ELSE FP =F2TF :GSV =F2WS *6
2083  WTANG =F2INCFA :SSTMEM =F2VS :CRS =CRS2 :CRL =CRL2 :RS =RS2 :QRS =QRS2 :GOTO 2107
2084  IF PSET <>3 THEN GOTO 2086 ELSE FP =F3TF :GSV =F3WS *6
2085  WTANG =F3INCFA :SSTMEM =F3VS :CRS =CRS3 :CRL =CRL3 :RS =RS3 :QRS =QRS3 :GOTO 2107
2086  IF PSET <>4 THEN GOTO 2088 ELSE FP =F4TF :GSV =F4WS *6
2087  WTANG =F4INCFA :SSTMEM =F4VS :CRS =CRS4 :CRL =CRL4 :RS =RS4 :QRS =QRS4 :GOTO 2107
2088  IF PSET <>9 THEN GOTO 2090 ELSE FP =F9TF :GSV =F9WS *6
2089  WTANG =F9INCFA :SSTMEM =F9VS :CRS =CRS9 :CRL =CRL9 :RS =RS9 :QRS =QRS9 :GOTO 2107
2090  IF PSET <>10 THEN GOTO 2092 ELSE FP =F10TF :GSV =F10WS *6
2091  WTANG =F10INCFA :SSTMEM =F10VS :CRS =CRS10 :CRL =CRL10 :RS =RS10 :QRS =QRS10 :GOTO 2107
2092  IF PSET <>11 THEN GOTO 2094 ELSE FP =F11TF :GSV =F11WS *6
2093  WTANG =F11INCFA :SSTMEM =F11VS :CRS =CRS11 :CRL =CRL11 :RS =RS11 :QRS =QRS11 :GOTO 2107
2094  IF PSET <>12 THEN GOTO 2099 ELSE FP =F12TF :GSV =F12WS *6
2095  WTANG =F12INCFA :SSTMEM =F12VS :CRS =CRS12 :CRL =CRL12 :RS =RS12 :QRS =QRS12 :GOTO 2107
2099  FP =BTF :GSV =BWS *6:SSTMEM =5
2100  IF PSET =5 THEN CRS =CRS5 :CRL =CRL5 :RS =RS5 :QRS =QRS5 :GOTO 2104
2101  IF PSET =6 THEN CRS =CRS6 :CRL =CRL6 :RS =RS6 :QRS =QRS6 :GOTO 2104
2102  IF PSET =7 THEN RS =RS7 :QRS =QRS7 :GOTO 2104
2103  IF PSET =8 THEN RS =RS8 :QRS =QRS8 
2104  IF BWS >100 THEN SVRNGE =2
2107  IF DSTATE >0 THEN PROC DRESS:FLPDCO =0:COMP =0
2108  FOFF =GLPOS -ZPFIRST *TAPER -WRAT +WRAC +GASAJ +FPOFF 
2109  IF FST >2 THEN GOTO 2109 ELSE FP =FP +FOFF :FV =RAPIDFR 
2110  IF FST +ZST +SST >6 THEN GOTO 2110
2111  IF GCST <2 THEN GOTO 2111
2113  IF -WDAT +GICRB +WRAC +GSAJ <XNOSE THEN MSG 705:PROC GCAN1:END 
2115  IF BIT 987=1 THEN PROC WAIT
2116  IF RS >0 THEN IF RFLAG >1 THEN PROC RSEL
2117  IF RS *BIT 869>0 THEN IF RS <>1 THEN RV =RECIPS *360:RST =5:GOTO 2120 
2118  IF QRS *BIT 869>0 THEN IF QRS <>1 THEN PROC QSTART:GOTO 2120
2119  IF BIT 4029=1 THEN PROC LOCRECIP 
2120  IF BIT 987=1 THEN PROC WAIT
2121  SV =20:SST =5
2123  IF BIT 987=1 THEN PROC WAIT
2125  IF SWSTATE *BIT 878>0 THEN GOTO 2125 ELSE PROC INFEED
2127  PRINT 'GRINDING LOBE';GLOBE ;GPTYP 
2130  GLOBE =-BIT 965*2+GLOBE +1:IF GLOBE =NLOBES +1 THEN GLOBE =SLOBE :SETB 1020
2133  IF GLOBE =SLOBE -1 THEN GLOBE =SLOBE :RESB 965:SETB 1020
2135  PROC CALC1
2137  IF BIT 987=1 THEN PROC WAIT
2140  IF CRS =0 THEN SETB 3787 ELSE ZA =100:ZV =2*CRS *CRL :ZP =ZP -CRL :ZST =10
2143  IF XST <>7 THEN GOTO 2143
2144  COMP =COMP +FPOFF 
2145  IF PSET =1 THEN PROC F1CFEED:WTANG =R1ANG :WST =4:GOTO 2157
2147  IF PSET =2 THEN PROC F2CFEED:WTANG =R2ANG :WST =4:GOTO 2157
2148  IF PSET =3 THEN PROC F3CFEED:WTANG =R3ANG :WST =4:GOTO 2157
2149  IF PSET =4 THEN PROC F4CFEED:WTANG =R4ANG :WST =4:GOTO 2157
2150  IF PSET =9 THEN PROC F9CFEED:WTANG =R9ANG :WST =4:GOTO 2157
2151  IF PSET =10 THEN PROC F10CFEED:WTANG =R10ANG :WST =4:GOTO 2157
2152  IF PSET =11 THEN PROC F11CFEED:WTANG =R11ANG :WST =4:GOTO 2157
2153  IF PSET =12 THEN PROC F12CFEED:WTANG =R12ANG :WST =4:GOTO 2157
2155  IF PSET >4 THEN PROC BFEED
2157  XST =2:SV =540
2160  IF XST >2 THEN GOTO 2160 ELSE SVRNGE =1:SA =SAMAX 
2161  SST =2
2163  IF STAJ >0 THEN XP =-WDAT +WRAC +GICRB +STAJ ELSE XP =-WDAT +WRAC +GICRB 
2164  IF SST >2 THEN GOTO 2164
2165  RESB 3787:ZST =2:ZA =ZAMAX :ZV =ZVMAX 
2167  SP =360-TOANG -BCWA 
2170  RST =2:PROC QSTOP:IF GLOBE >SLOBE -BIT 965 THEN FLPDCO =FLPDCO +1 ELSE GOTO 2177
2173  IF FLPDCO =FLPD THEN PROC INIFD
2175  GOTO 2183
2177  IF DUALCY *RLPD >0 THEN PROC INIRD:GOTO 2183
2180  IF FLPD >0 THEN PROC INIFD
2183  IF XST >2 THEN GOTO 2183
2185  ENDPROC 
2220 DEFPROC LOCWORK1
2223  IF BIT 1022=1 THEN PROC SERVON
2225  PROC LOCWORK
2227  IF BIT 1022=1 THEN PROC SERVOFF
2228  ENDPROC 
2230 DEFPROC LOCWORK:UKEY 14 '''''''GCAN1'
2231  PROC SPHOLD
2232  IF BIT 876=1 THEN ENDPROC 
2233  PRINT 'LOCATING WORK':PRINT 
2234  IF BIT 870=0 THEN GOTO 2234
2236  SV =0:SST =5:SST =2:SV =LOCSV 
2238  SP =SP -360:SETB 1004
2240  IF SST >2 THEN GOTO 2240 ELSE DELAY 0.2:RESB 1004
2241  IF MCFLAG <>2 THEN GOTO 2249
2242  SV =0:SST =5:SST =2:SV =0.3*SVMAX 
2243  DELAY 0.2
2244  IF BIT 875=1 THEN SP =SP -360:SETB 1004 ELSE GOTO 2249
2246  IF SST >2 THEN GOTO 2246 ELSE RESB 1004
2247  IF BIT 21=0 THEN PROC CLAMPKEY
2249  UKEY 14'''''''AXSTOP':SV =0.3*SVMAX :ENDPROC 
2250 DEFPROC PLGAGE1
2251  IF BIT 873=1 THEN XVARI =0 ELSE XVARI =1
2252  IF GSTATE *BIT 951*XVARI >0 THEN SV =SVPLG :SST =5:SETB 1009
2253  ENDPROC 
2255 DEFPROC PLGAGE 
2256  IF BIT 1009=0 THEN GOTO 2267
2257  IF BIT 851>0 THEN PRINT 'WAITING FOR SIZING GAUGE'
2260  IF BIT 851>0 THEN GOTO 2260
2262  IF BIT 852=0 THEN STAJ =STAJ -PGSAJ 
2265  IF BIT 853=0 THEN STAJ =STAJ +PGSAJ 
2267  SV =0.3*SVMAX :SP =SLOAD -ADAT 
2269  ENDPROC 
2270 DEFPROC TSEL
2271  IF BIT 872=0 THEN RST =2 ELSE ENDPROC 
2273  IF RST >2 THEN GOTO 2273 ELSE DELAY 1:SETB 989
2275  IF BIT 872=0 THEN GOTO 2275 ELSE ENDPROC 
2280 DEFPROC RSEL
2281  IF BIT 872=1 THEN RST =2 ELSE ENDPROC 
2283  IF RST >2 THEN GOTO 2283 ELSE DELAY 1:RESB 989
2285  IF BIT 872=1 THEN GOTO 2285 ELSE ENDPROC 
2290 DEFPROC SWIVEL :IF LBSET >2 THEN ENDPROC 
2293  IF LBSET =2 THEN SETB 1014 ELSE RESB 1014
2297  ENDPROC 
2300 DEFPROC E49GAGE:RESB 3802
2302  IF BIT 873=1 THEN XVARI =0 ELSE XVARI =1
2304  IF GSTATE *BIT 951*XVARI >0 THEN PROC POSSHAFT:SETB 1009 ELSE ENDPROC 
2306  PRINT :PRINT 'GAUGE CYCLE IN PROGRESS'
2307  DELAY 0.5:SETB 2661:DELAY 1
2308  IF BIT 3802<1 THEN GOTO 2308 ELSE DELAY 0.2:RESB 1009
2310  IF BIT 852=0 THEN STAJ =STAJ -PGSAJ 
2312  IF BIT 853=0 THEN STAJ =STAJ +PGSAJ 
2315  RESB 3802
2316  ENDPROC 
2350 DEFPROC DCAN:IF DFLAG <>0 THEN ENDPROC ELSE BTASKST =0
2353  IF BTASKST >2000 THEN GOTO 2353
2354  IF BIT 4025=1 THEN DRA =0
2355  DST =2:DV =DVMAX 
2360  IF DST >2 THEN GOTO 2360 ELSE RESB 3795:DELAY 0.2:DP =DP +DRA :DRA =0:DSTATE =0
2370  IF DST >2 THEN GOTO 2370 ELSE RESB 958
2375  ENDPROC 
2395 DEFPROC GCAN1:SETB 873:PROC GCAN:ENDPROC 
2400 DEFPROC GCAN
2401  RESB 1004:RESB 4036
2402  RESB 4044:IF WLEFT <2 THEN SETB 4044
2405  IF BIT 52=0 THEN PROC INI:ENDPROC 
2408  XST =2:FST =2:RESB 3787:RESB 952:RESB 955
2409  RESB 956:RESB 967:SV =0.3*SVMAX :ZA =ZAMAX 
2410  IF XST >2 THEN GOTO 2410 ELSE SVRNGE =1:WST =0:SA =SAMAX 
2420  XP =-WDAT +WRAC +XLOAD :RESB 964
2425  IF BIT 954=0 THEN SST =5
2430  IF XST >2 THEN GOTO 2430
2435  SST =2:ZST =2:RESB 960
2465  IF ZST +SST >4 THEN GOTO 2465
2470  PROC LOAD1
2490  UKEY 14 '''''''AXSTOP'
2495  ENDPROC 
2498 DEFPROC LOAD:XV =25:ZV =ZVMAX :XVARN =-WDAT +WRAC +XLOAD 
2500  IF BIT 4095=1 THEN DVAR ''NULL :RESB 4095
2501  IF BIT 1022=1 THEN PROC SERVON
2502  IF BIT 879=0 THEN MSG 703:ENDPROC 
2503  IF BIT 874=0 THEN PROC HOLDZP
2504  IF XP >XVARN THEN ZP =ZLOAD ELSE XP =XVARN 
2506  IF XST +ZST >4 THEN GOTO 2506 ELSE XP =XVARN 
2507  PROC IDSHAFT:RESB 4044:RESB 4049:RESB 4028
2510  IF XST >2 THEN GOTO 2510 ELSE PROC LOAD1:ENDPROC 
2513 DEFPROC LOAD1
2514  IF BIT 951=1 THEN SVLOAD =SVMAX ELSE SVLOAD =300 
2515  IF XP <-WDAT +WRAC +XLOAD -.01 THEN GOTO 2515
2517  IF DSTATE *DFLAG >3 THEN PROC DRESS
2520  IF BIT 987*BIT 951>0 THEN PROC WAIT
2521  IF BIT 874=0 THEN PROC HOLDZP
2523  ZV =ZVMAX :ZP =ZLOAD :RESB 1014
2524  IF GFLAG *GSTATE =4 THEN PROC PLGAGE2
2525  IF GFLAG *GSTATE =5 THEN PROC E49GAGE
2526  IF GFLAG =3 THEN PROC PLGAGE1 ELSE PROC SPHOLD:SV =0.3*SVLOAD :SP =SLOAD -ADAT 
2527  IF BIT 866>0 THEN PROC DCAN
2530  IF BTASKST >2000 THEN DSTATE =0:GOTO 2530 ELSE SETB 4024:RST =2:PROC QSTOP
2533  IF DSTATE +BIT 958>0 THEN PROC DRESS
2534  DRA =0
2535  IF GFLAG =3 THEN PROC PLGAGE
2537  PROC CALC:COMP =0
2540  IF SST >2 THEN GOTO 2540
2543  IF ZP >ZLOAD +10 THEN GOTO 2543 ELSE SETB 957:SETB 954:DELAY 1
2545  FLPDCO =0:RLPDCO =0:RESB 965:RESB 1001
2547  IF ZST >2 THEN GOTO 2547
2548  IF BIT 1022=1 THEN PROC SERVOFF
2550  IF BIT 951=1 THEN CTIME =TIME ELSE CTIME =0
2553  IF DXXP =6 THEN DVAR 'CYCLE COMPLETE'CTIME 
2555  PRINT :PRINT 'AXES AT LOAD POSITION'
2557  IF WRAC <WRMIN THEN PROC WCHANGE
2560  IF BIT 985=1 THEN PROC WSPEED
2561  IF SPIN *CVSET >0 THEN PROC AWSPEED
2563  PROC PAGE1
2565  ENDPROC 
2570 DEFPROC PAGE1
2573  RESB 951:ODCTRL =1:IDCTRL =2:RESB 957:RESB 956:RESB 1009
2575  RESB 950:RESB 1000:RESB 1003:UKEY 14'''''''AXSTOP'
2577  IF BIT 1001>0 THEN PROC AXSTOP:ENDPROC 
2580  UKEY 1'ADJUST''AXES''''ADJUST'
2583  UKEY 2'PART OR''PARAMETER''CHANGE''CHANGEPAR'
2585  PROC AUTOKEY
2587  UKEY 4'MANUAL''DRESS''START'''
2589  IF BIT 4058=1 THEN PROC PEGKEY:GOTO 2593
2590  IF BIT 4033=1 THEN PROC WRSKEY ELSE UKEY 5''''''''
2593  PROC FSKEY
2594  IF MCFLAG =11 THEN PROC BKEYA:PROC WRKEYA:GOTO 2605
2595  IF BIT 984=1 THEN PROC WRKEY ELSE UKEY 7''''''''
2597  IF BIT 962=0 THEN PROC BKEY:GOTO 2605 
2600  IF BIT 1010=1 THEN PROC DOORKEY:GOTO 2605
2603  UKEY 8'''''''' 
2605  IF BIT 3776=0 THEN RESB 968 ELSE PROC COOLKEY:SETB 968
2606  IF BIT 3776=0 THEN UKEY 9''''''''
2609  IF MCFLAG =4 THEN PROC WRSLIDKEY:GOTO 2613
2610  IF BIT 1006=1 THEN UKEY 10'LOCATE''WORK''DRIVER''LOCWORK1' ELSE UKEY 10''''''''
2611  IF BIT 3776=1 THEN PROC FSKEY2 ELSE UKEY 10 ''''''''
2613  IF BIT 1002=1 THEN PROC CLAMPKEY ELSE UKEY 11''''''''
2615  IF MCFLAG =1 THEN PROC AUTOENKEY:GOTO 2620
2616  IF MCFLAG =5 THEN PROC AUTOENKEY:GOTO 2620
2617  IF BIT 1007=1 THEN PROC AULOADKEY ELSE UKEY 12''''''''
2620  IF BIT 1011=1 THEN UKEY 13'ACCESS''SPECIAL''FEATURES''SPECIAL':GOTO 2625
2623  UKEY 13'ACCESS''SWITCH''PAGE 2''PAGE2'
2625  SETB 950
2630  PROC STATUS 
2633  IF SLOBE <NLOBES +1 THEN ENDPROC 
2635  PRINT 'SPECIFIED STARTING LOBE NUMBER TOO HIGH':PROC STARTPAR
2637  ENDPROC 
2678 DEFPROC PEGKEY1:DELAY 0.5:PROC PEGKEY:ENDPROC 
2680 DEFPROC PEGKEY
2682  IF BIT 3809=1 THEN GOTO 2686
2684  UKEY 5'LOCATION''PEG''ADVANCE''PEGKEY1':ENDPROC 
2686  UKEY 5'LOCATION''PEG''RETRACT''PEGKEY1':ENDPROC 
2699 DEFPROC FSKEY1:DELAY 0.5:PROC FSKEY:ENDPROC 
2700 DEFPROC FSKEY:IF BIT 951=1 THEN ENDPROC 
2701  IF BIT 3783=0 THEN GOTO 2705
2703  UKEY 6'FOOTSTOCK''ADVANCE''''FSKEY1':ENDPROC 
2705  UKEY 6'FOOTSTOCK''RETRACT''''FSKEY1':ENDPROC 
2706 DEFPROC WRKEY1:DELAY 1:PROC WRKEY:ENDPROC 
2707 DEFPROC WRKEY:IF BIT 868=1 THEN GOTO 2713
2710  UKEY 7'WORKREST''ADVANCE''''WRKEY1':ENDPROC 
2713  UKEY 7'WORKREST''RETRACT''''WRKEY1':ENDPROC 
2714 DEFPROC BKEY1:DELAY 0.5:PROC BKEY:ENDPROC 
2715 DEFPROC BKEY:IF BIT 3785=0 THEN GOTO 2720
2717  UKEY 8'SHOTBOLT''ADVANCE''''BKEY1':ENDPROC 
2720  UKEY 8'SHOTBOLT''RETRACT''''BKEY1':ENDPROC 
2730 DEFPROC SHOW:PRINT :ENDPROC 
2732 DEFPROC AULOADKEY:IF BIT 342=1 THEN GOTO 2736
2734  UKEY 12'ENABLE''MC/LOADER''CYCLE''AULOADKEY':ENDPROC 
2736  UKEY 12'DISABLE''MC/LOADER''CYCLE''AULOADKEY':ENDPROC 
2740 DEFPROC AUTOENKEY:IF BIT 342=1 THEN GOTO 2747
2743  UKEY 12'ENABLE''AUTOMATIC''CYCLE''AUTOENKEY':ENDPROC 
2747  UKEY 12'DISABLE''AUTOMATIC''CYCLE''AUTOENKEY':ENDPROC 
2750 DEFPROC COOLKEY:DELAY 0.5:IF BIT 358=1 THEN GOTO 2760
2755  UKEY 9 'COOLANT''OFF''''COOLKEY':ENDPROC 
2760  UKEY 9 'COOLANT''ON''''COOLKEY':ENDPROC 
2761 DEFPROC FSKEY2:DELAY 0.5:PROC FSKEY3:ENDPROC 
2762 DEFPROC FSKEY3:IF BIT 333=1 THEN GOTO 2766
2765  UKEY 10 'AUTO''F/STOCK''RET OFF''FSKEY2':ENDPROC 
2766  UKEY 10 'AUTO''F/STOCK''RET ON''FSKEY2':ENDPROC 
2769 DEFPROC CLAMPKEY1:DELAY 0.5:PROC CLAMPKEY:ENDPROC 
2770 DEFPROC CLAMPKEY:IF BIT 3788=0 THEN GOTO 2780
2775  UKEY 11'UNCLAMP''CHUCK''''CLAMPKEY1':ENDPROC 
2780  UKEY 11'CLAMP''CHUCK''''CLAMPKEY1':ENDPROC 
2783 DEFPROC DOORKEY1:IF BIT 3797=0 THEN DELAY 0.3:IF BIT 3797=0 THEN MSG 718
2784  DELAY 0.2:PROC DOORKEY:ENDPROC 
2785 DEFPROC DOORKEY:IF BIT 3784=1 THEN GOTO 2795
2790  UKEY 8'CLOSE''WORKTABLE''DOOR''DOORKEY1':ENDPROC 
2795  UKEY 8'OPEN''WORKTABLE''DOOR''DOORKEY1':ENDPROC 
2800 DEFPROC WRSLIDKEY:IF BIT 3786=1 THEN GOTO 2810
2805  UKEY 10'WORKREST''SLIDE''LEFT''WRSLIDKEY1':ENDPROC 
2810  UKEY 10'WORKREST''SLIDE''RIGHT''WRSLIDKEY1':ENDPROC 
2815 DEFPROC WRSLIDKEY1:DELAY 0.5:PROC WRSLIDKEY:ENDPROC 
2820 DEFPROC WRSKEY:IF BIT 3786=1 THEN GOTO 2830
2825  UKEY 5'WORKREST''SLIDE''LEFT''WRSKEY1':ENDPROC 
2830  UKEY 5'WORKREST''SLIDE''RIGHT''WRSKEY1':ENDPROC 
2840 DEFPROC WRSKEY1:DELAY 0.5:PROC WRSKEY:ENDPROC 
2845 DEFPROC WRKEY1A:DELAY 1:PROC WRKEYA:ENDPROC 
2848 DEFPROC WRKEYA:IF BIT 984=0 THEN UKEY 8'''''''':ENDPROC 
2849  IF BIT 868=1 THEN GOTO 2852
2850  UKEY 8'WORKREST''ADVANCE''''WRKEY1A':ENDPROC 
2852  UKEY 8'WORKREST''RETRACT''''WRKEY1A':ENDPROC 
2854 DEFPROC BKEY1A:DELAY 0.5:PROC BKEYA:ENDPROC 
2856 DEFPROC BKEYA:IF BIT 3785=0 THEN GOTO 2860
2858  UKEY 7'SHOTBOLT''ADVANCE''''BKEY1A':ENDPROC 
2860  UKEY 7'SHOTBOLT''RETRACT''''BKEY1A':ENDPROC 
2880 DEFPROC PLGAGE2:RESB 4053
2881  IF BIT 873=1 THEN XVARI =0 ELSE XVARI =1
2882  IF BIT 951*XVARI <1 THEN ENDPROC 
2883  PROC POSSHAFT:SETB 1009
2885  PRINT :PRINT 'GAUGE CYCLE IN PROGRESS'
2888  IF BIT 3802<1 THEN GOTO 2888 ELSE DELAY 0.2
2890  STAJ =0.001*WORD 3920/2+STAJ :RESB 1009
2892  IF BIT 3804=0 THEN GOTO 2892
2894  ENDPROC 
2900 DEFPROC POSSHAFT
2901  PROC SPHOLD
2902  SV =0.3*SVMAX 
2903  IF BIT 961<1 THEN SP =GAGEPOS1 -ADAT :GOTO 2912
2904  IF BIT 991>0 THEN SP =GAGEPOS1 -ADAT :GOTO 2912
2906  IF BIT 992>0 THEN SP =GAGEPOS2 -ADAT :GOTO 2912
2908  IF BIT 993>0 THEN SP =GAGEPOS3 -ADAT :GOTO 2912
2909  IF BIT 994>0 THEN SP =GAGEPOS4 -ADAT :GOTO 2912
2910  IF BIT 995>0 THEN SP =GAGEPOS5 -ADAT :GOTO 2912
2911  IF BIT 996>0 THEN SP =GAGEPOS6 -ADAT :GOTO 2912
2912  IF SST >2 THEN GOTO 2912
2914  ENDPROC 
2950 DEFPROC AXSTOP
2951  RESB 4034:RESB 4036
2952  IF BIT 1022=0 THEN GOTO 2955
2953  IF BIT 880=0 THEN GOTO 2956
2955  XST =2:ZST =2:SST =2:PROC QSTOP
2956  IF DFLAG >2 THEN DST =2:RST =2
2957  IF BTASKST >2000 THEN BTASKST =0:MSG 714
2958  IF BTASKST >2000 THEN GOTO 2958 ELSE DST =2:RST =2
2959  PROC CLEAR
2960  UKEY 2'PART OR''PARAMETER''CHANGE''CHANGEPAR'
2963  IF SPIN >-1 THEN PROC SPINSEL
2965  IF BIT 52=1 THEN UKEY 1'MOVE AXES''TO LOAD''POSITION''LOAD' ELSE ENDPROC 
2966  IF BIT 4025=1 THEN DRA =0
2967  IF DST >2 THEN GOTO 2967 ELSE RESB 3795:DELAY 0.2:DP =DP +DRA :DRA =0:DSTATE =0:RESB 958
2968  IF BIT 1022=1 THEN PROC SERVOFF
2969  SETB 969:IF BIT 1010+ BIT 1022>1 THEN PROC DOORKEY
2970  ENDPROC 
2995 DEFPROC TDRESS
2996  IF BIT 4056=1 THEN PROC TDRESSVEL ELSE PROC TDRESSPOS
2997  ENDPROC 
3000 DEFPROC TDRESSPOS
3003  IF BIT 3799=0 THEN GOTO 3003
3006  COMP =100+COMPCOR /100*DRA *DRAT :WRAC =WRAC -COMP :DRA =0
3009  ESCENB =0:BTASKST =1001
3012  IF BIT 3781=1 THEN SENSE =-1 ELSE SENSE =1
3015  IF SPD >0 THEN IF BIT 4030+TWD <1 THEN GOTO 3024
3018  RV =1000
3021  IF BIT 3781=1 THEN RST =5 ELSE RST =4
3022  BITWAIT1 3889:RST =2:DELAY 0.2:RST =1002
3024  IF SPD >0 THEN RPMEM1 =100000*SENSE :GOTO 3034
3026  IF TWD *BIT 4030>0 THEN RPMEM1 =NO5POS *DTCAL *.9*SENSE :GOTO 3034
3028  IF TWD >0 THEN RPMEM1 =NO4POS *DTCAL *.9*SENSE :GOTO 3034
3030  IF BIT 4030>0 THEN RPMEM1 =NO2POS *DTCAL *.9*SENSE :GOTO 3034
3032  RPMEM1 =NO1POS *DTCAL *.9*SENSE 
3034  IF BIT 4052=0 THEN GOTO 3047
3038  IF DSTATE =1 THEN RV =RADFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFADFR2
3039  RPMEM =NO6POS *DTCAL *.9*SENSE +RP :RP =RP +RPMEM1 
3040  WAXPOS 5,SENSE ,RPMEM 
3047  IF DSTATE =1 THEN RV =RADFR *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFADFR
3048  RPMEM =NO1POS *DTCAL *.9*SENSE +RP :RP =RP +RPMEM1 
3051  IF BIT 4030=0 THEN GOTO 3062
3054  WAXPOS 5,SENSE ,RPMEM 
3057  IF DSTATE =1 THEN RV =RADFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFADFR2
3060  RPMEM =NO2POS *DTCAL *.9*SENSE +RP :RP =RP +RPMEM1 
3062  WAXPOS 5,SENSE ,RPMEM 
3063  IF TWD <1 THEN GOTO 3100
3069  RV =BWTR *DTCAL *.9
3072  RPMEM =NO3POS *DTCAL *.9*SENSE +RP :RP =RP +RPMEM1 
3073  WAXPOS 5,SENSE ,RPMEM 
3074  IF BIT 4052=0 THEN GOTO 3078
3075  IF DSTATE =1 THEN RV =RADFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFADFR2
3076  RPMEM =NO7POS *DTCAL *.9*SENSE +RP :RP =RP +RPMEM1 
3077  WAXPOS 5,SENSE ,RPMEM 
3078  IF DSTATE =1 THEN RV =RADFR *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFADFR
3081  RPMEM =NO4POS *DTCAL *.9*SENSE +RP :RP =RP +RPMEM1 
3084  WAXPOS 5,SENSE ,RPMEM 
3087  IF BIT 4030=0 THEN GOTO 3100
3090  IF DSTATE =1 THEN RV =RADFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFADFR2
3093  RPMEM =NO5POS *DTCAL *.9*SENSE +RP :RP =RP +RPMEM1 
3096  WAXPOS 5,SENSE ,RPMEM 
3100  IF SPD >0 THEN GOTO 3200 
3101  RPMEM2 =RPMEM :RPMEM1 =100000
3102  IF DSTATE =1 THEN XVARN =RRDFD ELSE XVARN =FRDFD 
3103  RESB 3795:DELAY .2:DP =-XVARN /DRAT +DP :RST =1002:DST =1002:SETB 3795
3104  IF BIT 4052=0 THEN GOTO 3108
3105  IF DSTATE =1 THEN RV =RRDFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFRDFR2
3106  RPMEM =NO6POS -TOFFSET *DTCAL *.9+RPMEM2 :RP =RP +RPMEM1 
3107  WAXPOS 5,1,RPMEM 
3108  IF DSTATE =1 THEN RV =RRDFR *DTCAL *0.9*WRMAX /WRAC ELSE PROC SELFRDFR
3109  RPMEM =+NO1POS -TOFFSET *DTCAL *0.9+RPMEM2 
3110  RP =RP +RPMEM1 
3111  IF BIT 4030=0 THEN GOTO 3123
3114  IF DSTATE =1 THEN RV =RRDFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFRDFR2
3117  WAXPOS 5,1,RPMEM 
3120  RPMEM =NO2POS -TOFFSET *DTCAL *.9+RPMEM2 :RP =RP +RPMEM1 
3123  WAXPOS 5,1,RPMEM 
3126  IF TWD <1 THEN GOTO 3200
3129  RV =BWTR *DTCAL *.9
3132  RPMEM =NO3POS -TOFFSET *DTCAL *.9+RPMEM2 :RP =RP +RPMEM1 
3133  WAXPOS 5,1,RPMEM 
3134  IF BIT 4052=0 THEN GOTO 3138
3135  IF DSTATE =1 THEN RV =RRDFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFRDFR2
3136  RPMEM =NO7POS -TOFFSET *DTCAL *.9+RPMEM2 :RP =RP +RPMEM1 
3137  WAXPOS 5,1,RPMEM 
3138  IF DSTATE =1 THEN RV =RRDFR *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFRDFR
3141  RPMEM =NO4POS -TOFFSET *DTCAL *.9+RPMEM2 :RP =RP +RPMEM1 
3144  WAXPOS 5,1,RPMEM 
3147  IF BIT 4030=0 THEN GOTO 3200
3150  IF DSTATE =1 THEN RV =RRDFR2 *DTCAL *.9*WRMAX /WRAC ELSE PROC SELFRDFR2
3153  RPMEM =NO5POS -TOFFSET *DTCAL *.9+RPMEM2 :RP =RP +RPMEM1 
3158  WAXPOS 5,1,RPMEM 
3200  RV =1000
3203  RP =RP +RPMEM1 
3206  BITWAIT1 3890:RST =2:DELAY 0.5:RST =1002
3207  IF BIT 4045=1 THEN GOTO 3209
3208  IF BIT 4038*DTCTR >=DTINT THEN SETB 4037:DTCTR =0
3209  RESB 958:SETB 4025:BTASKST =1:BTASKST =2001
3210  IF SPD >0 THEN GOTO 3220
3212  XVARN =100+COMPCOR /100*XVARN :WRAC =WRAC -XVARN :COMP =COMP +XVARN 
3220  RESB 4024:ESCENB =1
3230  ENDPROC 
3500 DEFPROC ADJUST
3501  IF MCFLAG =8 THEN IF BIT 3776=0 THEN MSG 715:ENDPROC 
3510  UKEY 14'''''''ADJCAN'
3520  GPVAR 'SIZE ADJUST WHOLE PART ON RADIUS',STAJ ,50,-5
3525  IF MCFLAG =10 THEN IF BIT 3776=0 THEN GOTO 3561
3538  IF MCFLAG =9 THEN IF BIT 3776=0 THEN GOTO 3560
3540  GPVAR 'PHASE ADJUST WHOLE PART          ',PTAJ ,359.99,-359.99
3560  GPVAR 'CARRIAGE ADJUST WHOLE PART        ',CAJ ,25,-25
3561  PRINT :PRINT 'TAPER ADJUST WHOLE PART'
3562  PRINT 'IF LOBES GET SMALLER AS GRIND PROCEEDS'
3564  PRINT 'CORRECT BY INSERTING "+TOTAL TAPER BETWEEN FIRST & LAST LOBE"'
3566  PRINT 'IF LOBES GET BIGGER  AS GRIND PROCEEDS'
3567  PRINT 'CORRECT BY INSERTING "-TOTAL TAPER BETWEEN FIRST & LAST LOBE"'
3568  PRINT :PROC GETTAJ:GPVAR 'TOTAL TAPER                        ',TAJ ,.5,-.5
3580  PROC TCALC:PROC CALC
3582  IF BIT 4077<1 THEN GOTO 3590
3584  GPVAR 'MAIN WHEEL SPEED ADJUST (MINUS PERCENT) ',PDROP ,0,-15
3586  PROC MWSPEED
3590  ENDPROC 
3600 DEFPROC ADJCAN
3610  PROC GETTAJ:PROC TCALC:PROC CALC
3620  UKEY 14 '''''''AXSTOP'
3630  ENDPROC 
3650 DEFPROC LOCRECIP:XVARI =0:IF RFLAG =2 THEN PROC RSEL
3651  IF BIT 4065=1 THEN PROC QSTOP:ENDPROC 
3652  IF BIT 3780=1 THEN ENDPROC 
3653  RV =150:RST =5
3654  IF BIT 3780=1 THEN GOTO 3654 ELSE DELAY 0.1
3656  IF BIT 3780=1 THEN RST =2 ELSE XVARI =XVARI +1:IF XVARI <400 THEN GOTO 3656
3657  IF XVARI >399 THEN RST =2
3658  IF RST >2 THEN GOTO 3658
3660  IF BIT 3780=0 THEN MSG 707:PROC GCAN1:END 
3662  ENDPROC 
3670 DEFPROC QSTOP:QST =2
3671  IF BIT 52+ BIT 4065 <2 THEN ENDPROC 
3672  QV =QVMAX /QRAT :QP =RDAT 
3674  IF QST >2 THEN GOTO 3674 ELSE DELAY 0.5
3676  RESB 3813
3677  DELAY 0.5
3678  IF BIT 3814+ BIT 964>1 THEN MSG 707:PROC GCAN1:END 
3680  IF BIT 3814>0 THEN MSG 707
3682  ENDPROC 
3700 DEFPROC MANDRESS
3702  PRINT 'MANUAL DRESS IN PROGRESS'
3705  IF FICY =1 THEN PROC INIFD ELSE PROC INIRD
3710  IF DSTATE >0 THEN PROC DRESS
3711  IF BIT 987+DFLAG >4.1 THEN PROC WAIT
3712  IF DFLAG =4 THEN PROC LOAD ELSE PROC CALC:COMP =0
3715  ENDPROC 
3750 DEFPROC AUTOKEY
3760  IF BIT 987=1 THEN GOTO 3780 ELSE MANFEED =0
3770  UKEY 3'SINGLE''STEP''CYCLE''STEPCY':ENDPROC 
3780  UKEY 3'AUTO FEED''& CYCLE''SELECT''AUTOCY':ENDPROC 
3790 DEFPROC STEPCY:SETB 987:PROC AUTOKEY
3800  GPVAR 'MANUAL INFEED REQUIRED 1=YES;0=NO',MANFEED ,1,0
3805  ENDPROC 
3810 DEFPROC AUTOCY:RESB 987
3820  PROC AUTOKEY:ENDPROC 
3830 DEFPROC WAIT
3833  IF BIT 950=1 THEN PROC CLEAR:UKEY 14'''''''GCAN1':UKEY 13''''''''
3835  UKEY 3 'GRIND''CYCLE''PROCEED'''
3837  PRINT 'CYCLE WAITING FOR GRIND CYCLE PROCEED PUSHBUTTON'
3840  IF BIT 3=1 THEN GOTO 3840
3843  IF BIT 3=0 THEN GOTO 3843 ELSE PRINT 'CYCLE CONTINUING'
3845  ENDPROC 
3980 DEFPROC GETTAJ
3983  IF TAPER =0 THEN TAJ =0 :ENDPROC 
3985  ESCENB =0
3988  GLOBE =SLOBE :GLDATA :XVARN =GLPOS 
3990  GLOBE =NLOBES :GLDATA :XVARN =GLPOS -XVARN 
3993  IF XVARN *XVARN <1 THEN GLOBE =SLOBE :ESCENB =1 :ENDPROC ELSE TAJ =TAPER *XVARN 
3995  GLOBE =SLOBE :ESCENB =1
3999  ENDPROC 
4000 DEFPROC TCALC:IF TAJ =0 THEN TAPER =0:ENDPROC 
4003  ESCENB =0
4005  GLOBE =SLOBE :GLDATA :XVARN =GLPOS 
4007  GLOBE =NLOBES :GLDATA :XVARN =GLPOS -XVARN 
4010  IF XVARN *XVARN <1 THEN GOTO 4015
4013  TAPER =TAJ /XVARN 
4015  GLOBE =SLOBE :ESCENB =1:ENDPROC 
4400 DEFPROC START1:PROC SETUP
4401  IF DDATC <DDATMIN THEN DDATC =DDAT 
4402  IF DDATC >DDAT THEN DDATC =DDAT 
4403  IF WRAC <WRMIN THEN WRAC =WRMAX 
4404  IF XLOAD <XLMIN THEN XLOAD =WDAT -WRAC 
4406  IF SLOBE <1 THEN SLOBE =1
4408  IF PSET <1 THEN PSET =1
4410  IF RANG <5 THEN RANG =5
4411  IF CV >CVMAX THEN CV =CVMAX 
4412  PROC BLANK:PRINT '**** WARNING  ****'
4414  IF UNITS =0 THEN PRINT '* METRIC DISPLAY *' ELSE PRINT '*  INCH DISPLAY  *'
4415  IF SPIN < 1 THEN GOTO 4420
4416  IF WDAT <>290 THEN GOTO 4424
4418  PRINT 'WHEEL DATUM NOT SET   (EDIT LINE 561 WDAT=?)':GOTO 4426
4420  IF WDAT <>475 THEN GOTO 4424
4422  PRINT 'WHEEL DATUM NOT SET   (EDIT LINE 500 WDAT=?)':GOTO 4426
4424  PRINT 'WHEEL DATUM SET TO         ';WDAT 
4426  IF ADAT <>0 THEN PRINT 'ANGULAR DATUM SET TO (DEG) ';ADAT :GOTO 4430 
4428  PRINT 'ANGULAR DATUM NOT SET (EDIT LINE 501 ADAT=?)'
4430  IF DFLAG <4 THEN GOTO 4434
4432  PRINT 'DIAMOND DATUM SET TO       ';DDATC 
4434  PRINT 'WHEEL RADIUS SET TO        ';WRAC 
4436  PROC PWRUP
4438  ENDPROC 
4440 DEFPROC MCON
4441  IF FICY =1 THEN SETB 4039 ELSE RESB 4039:PROC MWSPEED
4442  IF BIT 1022=1 THEN PROC SERVOFF
4445  PROC INI
4448  DP =DP 
4450  PRINT 'AXES DATUMED AND READY TO MOVE TO LOAD POSITION'
4452  UKEY 1'MOVE AXES''TO LOAD''POSITION''LOAD'
4454  IF BIT 4025=0 THEN RESB 3795:DELAY 0.2:DV =DVMAX :DP =DP +DRA 
4455  DRA =0
4456  SETB 959:DELAY 0.5:RESB 959:ENDPROC 
4460 DEFPROC PWRUP
4461  IF WRMEM1 *WRMEM1 >0.01 THEN WRAC =WRMEM1 :PROC WSMSG:WRMEM1 =0
4463  RESB 863
4465  PROC INI:PROC ID
4467  ESCENB =1:ENDPROC 
4470 DEFPROC ID:PRINT 
4473  PRINT 'LANDIS SERIAL NO.';SERIAL 
4475  PRINT 'PART PROGRAMME';PRTID 
4477  PRINT 'PLC  PROGRAMME';PLCID ,PLCDATE 
4479  ENDPROC 
4480 DEFPROC CLEAR
4482  RESB 950:RESB 1000:RESB 1003:RESB 969:RESB 4054
4484  UKEY 1'''''''' :UKEY 2'''''''' :UKEY 3'''''''' :UKEY 4''''''''
4486  UKEY 5'''''''' :UKEY 6'''''''' :UKEY 7'''''''' :UKEY 8''''''''
4488  UKEY 9'''''''' :UKEY 10'''''''' :UKEY 11'''''''' :UKEY 12''''''''
4489  UKEY 14'''''''AXSTOP'
4490  IF BIT 52=0 THEN GOTO 4492
4491  IF BIT 1011=0 THEN UKEY 13 'ACCESS''SWITCH''PAGE 2''PAGE2':ENDPROC 
4492  UKEY 13'ACCESS''SPECIAL''FEATURES''SPECIAL'
4493  ENDPROC 
4496 DEFPROC BLANK:PRINT :PRINT :PRINT :PRINT :PRINT :PRINT 
4498  PRINT :PRINT :PRINT :PRINT :PRINT :PRINT :PRINT :PRINT :PRINT :ENDPROC 
4500 DEFPROC INI
4501  IF GSTATE =1 THEN SETB 4046 ELSE RESB 4046
4502  WST =0:DSTATE =0:SETB 865:SETB 874:SETB 879:RESB 1021:SETB 979:RESB 4028
4503  WBALCTR =0:SETB 4024
4505  BTASKST =0
4510  ODCTRL =1:IDCTRL =2:RESB 951:RESB 964:RESB 954:RESB 960:RESB 958:RESB 3787
4512  PROC CLEAR
4517  PROC SETUP
4520  XKEY 16 'INI'
4521  XKEY 17 'LOADCHK'
4532  XKEY 18 'MANDRESS'
4535  XKEY 19 'PLCSELS'
4540  XKEY 20 'MCON'
4541  XKEY 21 'GRIND'
4542  XKEY 22 'DEBUG'
4543  XKEY 23 'CANCEL'
4544  XKEY 24 'CANCELPAR'
4545  XKEY 25 'DOORKEY'
4546  XKEY 26 'MWSPEED'
4553  IF BIT 1010+ BIT 1022+ BIT 512>2 THEN IF BIT 314=0 THEN SETB 969:PROC DOORKEY 
4554  IF BIT 52=1 THEN UKEY 1'MOVE AXES''TO LOAD''POSITION''LOAD':GOTO 4560
4556  IF SPIN >-1 THEN PROC SPINSEL
4560  UKEY 2'PART OR''PARAMETER''CHANGE''CHANGEPAR'
4561  IF RFLAG =0 THEN PROC INIRS
4562  IF DFLAG =0 THEN SETB 970 ELSE RESB 970
4563  IF DFLAG =1 THEN SETB 971 ELSE RESB 971
4564  IF BIT 4065=0 THEN PROC INIQRS
4565  IF BIT 4050=0 THEN LOWP =1
4570  ENDPROC 
4574 DEFPROC INIQRS
4576  QRS =0:QRS1 =0:QRS2 =0:QRS3 =0:QRS4 =0:QRS5 =0:QRS6 =0:QRS7 =0:QRS8 =0
4578  ENDPROC 
4580 DEFPROC INIRS
4582  RS =0:RS1 =0:RS2 =0:RS3 =0:RS4 =0:RS5 =0:RS6 =0:RS7 =0:RS8 =0
4584  ENDPROC 
4600 DEFPROC LOADCHK:RESB 4034
4601  XVARN =SLOAD -ADAT 
4602  IF XVARN <0 THEN XVARN1 =360+XVARN ELSE XVARN1 =XVARN 
4603  IF SP -2>XVARN1 THEN GOTO 4608
4604  IF SP +2<XVARN1 THEN GOTO 4608
4606  SETB 4034
4607  IF BIT 17=1 THEN GOTO 4607 ELSE ENDPROC 
4608  SETB 4035:DELAY 0.5:RESB 4035:MSG 717:PROC AXSTOP:ENDPROC 
4620 DEFPROC LOADCHK2:PROC SPHOLD
4621  IF BIT 3800<1 THEN ENDPROC 
4622  IF BIT 3788=0 THEN GOTO 4621 ELSE DELAY .5
4624  SV =SVMAX 
4626  IF BIT 991>.1 THEN SP =LOBEANG1 -ADAT :GOTO 4634
4628  IF BIT 992>.1 THEN SP =LOBEANG2 -ADAT :GOTO 4634
4629  IF BIT 993>.1 THEN SP =LOBEANG3 -ADAT :GOTO 4634
4630  IF BIT 994>.1 THEN SP =LOBEANG4 -ADAT :GOTO 4634
4631  IF BIT 995>.1 THEN SP =LOBEANG5 -ADAT :GOTO 4634
4632  IF BIT 996>.1 THEN SP =LOBEANG6 -ADAT 
4634  IF SST >2 THEN GOTO 4634 ELSE DELAY .2
4636  IF BIT 3801<1 THEN MSG 720:PROC GCAN1:END 
4638  ENDPROC 
4950 DEFPROC RINCPAR:ODCTRL =1:UKEY 14 '''''''RINCPAR':PROC PRINTER
5006  GPVAR 'ROUGH TOTAL FEED                 ',RTF ,50,0
5007  GPVAR 'ROUGH INCREMENTS                     ',RINC ,100,0
5008  IF RINC =0 THEN GOTO 5099
5009  INC =1 : IF INC =RINC THEN GOTO 5010 ELSE GOTO 5015
5010  RINC1 =RTF : PRINT 'ROUGH INCREMENT 1                     :';RINC1 : GOTO 5070
5015  GPVAR 'ROUGH INCREMENT 1                ',RINC1 ,RTF ,0
5020  INC =INC +1:IF INC =RINC THEN GOTO 5024 ELSE GOTO 5030
5024  RINC2 =RTF -RINC1 :PRINT 'ROUGH INCREMENT 2                     :';RINC2 
5026  GOTO 5070
5030  GPVAR 'ROUGH INCREMENT 2                ',RINC2 ,RTF -RINC1 ,0
5035  INC =INC +1:IF INC =RINC THEN GOTO 5040 ELSE GOTO 5045
5040  RINC3 =RTF -RINC1 -RINC2 :PRINT 'ROUGH INCREMENT 3                     :';RINC3 
5042  GOTO 5070
5045  GPVAR 'ROUGH INCREMENT 3                ',RINC3 ,RTF -RINC1 -RINC2 ,0
5048  INC =INC +1:IF INC =RINC THEN GOTO 5050 ELSE GOTO 5054
5050  RINC4 =RTF -RINC1 -RINC2 -RINC3 
5052  PRINT 'ROUGH INCREMENT 4                     :';RINC4 :GOTO 5070
5054  GPVAR 'ROUGH INCREMENT 4                ',RINC4 ,RTF -RINC1 -RINC2 -RINC3 ,0
5056  INC =INC +1:IF INC =RINC THEN GOTO 5058 ELSE GOTO 5061
5058  RINC5 =RTF -RINC1 -RINC2 -RINC3 -RINC4 
5060  PRINT 'ROUGH INCREMENT 5                     :';RINC5 :GOTO 5070
5061  XVARN =RTF -RINC1 -RINC2 -RINC3 -RINC4 
5062  GPVAR 'ROUGH INCREMENT 5                ',RINC5 ,XVARN ,0
5063  IF RINC >6 THEN XVARN =-RINC +6 ELSE XVARN =0
5064  RINC6 =XVARN *RINC1 +RTF -RINC1 -RINC2 -RINC3 -RINC4 -RINC5 
5065  PRINT 'ROUGH INCREMENT 6                     :';RINC6 
5066  IF RINC6 <-.001 THEN PRINT 'FAULT: FINAL INCREMENT NEGATIVE':PROC RINCPAR
5070  GPVAR 'ROUGH INCREMENT RATE         ',RINCFR ,50,0
5088  GPVAR 'ROUGH INCREMENT ANGLE           ',RINCFA ,359.99,0
5099  ODCTRL =1:UKEY 14 '''''''EXFDPAR':PROC EXFDPAR1:ENDPROC 
5100 DEFPROC FINCPAR:ODCTRL =1:UKEY 14 '''''''FINCPAR':PROC PRINTER
5110  GPVAR 'FINISH TOTAL FEED                ',FTF ,50,0
5111  GPVAR 'FINISH INCREMENTS                    ',FINC ,100,0
5112  IF FINC =0 THEN GOTO 5180
5113  INC =1 : IF INC =FINC THEN GOTO 5114 ELSE GOTO 5115
5114  FINC1 =FTF :PRINT 'FINISH INCREMENT 1                    :';FINC1 :GOTO 5155
5115  GPVAR 'FINISH INCREMENT 1               ',FINC1 ,FTF ,0
5120  INC =INC +1:IF INC =FINC THEN GOTO 5125 ELSE GOTO 5130
5125  FINC2 =FTF -FINC1 :PRINT 'FINISH INCREMENT 2                    :';FINC2 
5127  GOTO 5155
5130  GPVAR 'FINISH INCREMENT 2               ', FINC2 ,FTF -FINC1 ,0
5135  INC =INC +1:IF INC =FINC THEN GOTO 5140 ELSE GOTO 5145
5140  FINC3 =FTF -FINC1 -FINC2 :PRINT 'FINISH INCREMENT 3                    :';FINC3 
5142  GOTO 5155
5145  GPVAR 'FINISH INCREMENT 3               ',FINC3 ,FTF -FINC1 -FINC2 ,0
5147  IF FINC >4 THEN XVARN =-FINC +4 ELSE XVARN =0
5150  FINC4 =XVARN *FINC1 +FTF -FINC1 -FINC2 -FINC3 
5151  PRINT 'FINISH INCREMENT 4                    :';FINC4 
5153  IF FINC4 <-.0001 THEN PRINT 'FAULT: FINAL INCREMENT NEGATIVE':PROC FINCPAR
5155  GPVAR 'FINISH INCREMENT RATE        ',FINCFR ,50,0
5156  GPVAR 'FINISH INCREMENT ANGLE          ',FINCFA ,359.99,0
5180  ODCTRL =1:UKEY 14 '''''''EXFDPAR':PROC EXFDPAR1:ENDPROC 
5200 DEFPROC TST:GLOBE =0:WRMEM1 =WRAC :XVARI =1
5201  UKEY 14 '''''''CANCELTST'
5203  GPVAR 'WHAT WHEEL RADIUS FOR TEST   ',WRAC ,500,1
5205  PRINT 'TESTING SHAFT';GSTYP 
5210  GLOBE =GLOBE +XVARI 
5215  PROC CALC1:PRINT 'TESTING LOBE';GLOBE ;GPTYP 
5216  IF GLOBE =SLOBE THEN ZPFIRST =GLPOS 
5217  PRINT 'TAPER CORRECTION=';GLPOS -ZPFIRST *TAPER 
5218  IF LBSET >12 THEN PRINT 'PARAMETER SET TOO HIGH (1 TO 12 ONLY)';GLOBE 
5220  IF GLPOS <ZPMAX THEN GOTO 5222
5221  PRINT 'CARRIAGE POSITION OUT OF RANGE LOBE';GLOBE 
5222  IF GCST <2 THEN GOTO 5222
5223  IF -WDAT +GICRB +WRAC +GSAJ >XNOSE THEN GOTO 5225
5224  PRINT 'PART CLEARANCE RADIUS TOO SMALL LOBE';GLOBE 
5225  IF XVARI =-1 THEN GOTO 5227
5226  IF GLOBE <NLOBES THEN GOTO 5210 ELSE GLOBE =GLOBE +1
5227  IF DUALPWS >.1 THEN XVARI =-1:GSTYP =FGSTYP ELSE GOTO 5232
5228  IF GLOBE >SLOBE THEN GOTO 5210 
5229  IF DUALPWS >.1 THEN GSTYP =RGSTYP 
5232  PRINT 'DONE'
5234  WRAC =WRMEM1 :UKEY 14'''''''CANCELPAR':WRMEM1 =0
5236  ENDPROC 
5240 DEFPROC CANCELTST
5242  ESCENB =0:WRAC =WRMEM1 :WRMEM1 =0:PROC CHANGEPAR:ESCENB =1:ENDPROC 
5500 DEFPROC CAL
5501  IF BIT 1022=1 THEN PROC SERVON
5503  WRAC =WRMAX :PROC CLEAR:FV =XVMAX :XV =XVMAX :ZV =ZVMAX :XP =0:FP =0
5505  IF XST +FST >4 THEN GOTO 5505
5506  IF BIT 874=0 THEN PROC HOLDZP
5507  ZP =DPOS 
5510  IF ZST >2 THEN GOTO 5510 
5511  IF DPTYP =0 THEN ZV =CALZV :ZP =ZP +DTRAV :ZST =10 ELSE FV =CALZV :PROC DRPA
5513  DXXP =0:PROC JOG1:UKEY 2 'CALIBRATE''AND''RESET'''
5514  PRINT 'USE JOG CONTROLS TO DRESS WHEEL THEN PRESS "CALIBRATE AND RESET"'
5515  IF DPTYP >0 THEN PROC CALPRD:GOTO 5518
5516  PROC XJOG1:IF BIT 2=0 THEN GOTO 5516 ELSE XST =2:ZST =2
5517  IF XST >2 THEN GOTO 5517 ELSE WRAC =WDAT +XP -DDATC 
5518  IF WRAC >WRMAX THEN WRAC =WRMAX 
5520  PROC LOAD
5525  ENDPROC 
5530 DEFPROC CALPRD
5533  PROC CALPRJ:IF BIT 2=0 THEN PROC CALRTST:GOTO 5533
5535  IF ZST +XST >4 THEN GOTO 5535
5537  XVARN =ZP -DPOS 
5540  IF XVARN *XVARN >.1 THEN PROC DRPR:GOTO 5535
5543  WRAC =WDAT +XP -DDATC -WROFF 
5545  ENDPROC 
5550 DEFPROC CALPRJ
5553  IF BIT 859=1 THEN FV =.001:GOTO 5565
5555  IF BIT 860=1 THEN FV =.01:GOTO 5565
5557  IF BIT 861=1 THEN FV =1:GOTO 5565
5560  IF BIT 862=1 THEN FV =10:GOTO 5565
5563  FST =2:ENDPROC 
5565  IF BIT 858=1 THEN FP =0:ENDPROC 
5567  IF BIT 857=1 THEN FP =XPMAX 
5570  ENDPROC 
5580 DEFPROC CALRTST
5583  IF ZST +XST =4 THEN FST =2 ELSE ENDPROC 
5584  IF FST >2 THEN GOTO 5584 ELSE FV =CALZV 
5585  XVARN =ZP -DPOS 
5587  IF XVARN *XVARN <.1 THEN PROC DRPA ELSE PROC DRPR
5590  ENDPROC 
5600 DEFPROC CHANGEDAT
5603  UKEY 1 'LIST''COMPONENT''DATA'' L'
5605  UKEY 2 'CHECK''COMPONENT''DATA'' V'
5607  UKEY 3 'PROFILES''CREATE''OR EDIT'' PROFCRED'
5610  UKEY 4 'SHAFT''CREATE''OR EDIT'' S'
5613  UKEY 5 'VARIABLE''WORKSPEED''GENERATE''VSGEN'
5615  IF MCFLAG <100 THEN UKEY 6 '''''''':GOTO 5617
5616  UKEY 6 'MASTERCAM''PROFILE''GENERATE'' M'
5617  UKEY 7 'DELETE''COMPONENT''DATA'' K'
5620  UKEY 8 'PROCESS''PROFILE''DATA''PROFEDIT'
5623  UKEY 9 'PROCESS''WORKSPEED''DATA''WSEDIT'
5625  UKEY 10 'OUTPUT''COMPONENT''DATA''O1'
5627  UKEY 11 'INPUT''COMPONENT''DATA''I1'
5630  UKEY 12 'GRIND''PARAMETER''SAVE''SAVEPAR'
5633  UKEY 13 'GRIND''PARAMETER''LOAD''RESTOREPAR'
5635  UKEY 14 '''''''EXDATCH'
5640  ENDPROC 
5641 DEFPROC PROFCRED:PROC IOCLEAR
5642  UKEY 3 'REGULAR''PROFILE'''' P'
5643  UKEY 4 'ECCENTRIC''PROFILE''''ECCGEN'
5644  ENDPROC 
5645 DEFPROC EXDATCH
5650  UKEY 14 '''''''CHANGEPAR'
5653  PRINT 'TO EXIT COMPONENT DATA CHANGE PRESS CANCEL KEY TWICE':DELAY 2
5655  UKEY 14 '''''''EXDATCH':ENDPROC 
5660 DEFPROC I1:PROC IOCLEAR
5663  UKEY 11 'INPUT''COMPONENT''DATA'' I'
5665  PRINT 'PRESS INPUT SOFT KEY A SECOND TIME'
5666  PRINT 'THEN START TAPE READ OPERATION'
5667  PRINT 'DATA READ FROM TAPE WILL BE DISPLAYED AS IT IS READ'
5670  ENDPROC 
5673 DEFPROC O1:PROC IOCLEAR
5680  UKEY 10 'OUTPUT''COMPONENT''DATA'' O'
5683  PRINT 'START TAPE WRITE OPERATION'
5684  PRINT 'THEN PRESS OUTPUT SOFT KEY A SECOND TIME'
5685  PRINT 'ENTER FILE NAMES TO BE STORED TO TAPE AS PROMPTED'
5687  PRINT 'WHEN ALL OF THE REQUIRED FILES HAVE BEEN TRANSFERRED'
5690  PRINT 'PRESS ENTER KEY UNTIL  *  IS RETURNED ON THE SCREEN'
5693  PRINT 'THIS PUTS AN END OF DATA MARK ON TO THE TAPE'
5695  ENDPROC 
5696 DEFPROC SETBIT:SETB 4067:ENDPROC 
5697 DEFPROC IOCLEAR : PROC CLEAR
5698  UKEY 13 '''''''':UKEY 14 '''''''CHANGEDAT'
5699  ENDPROC 
5700 DEFPROC PAGE2
5705  ODCTRL =1:PROC CLEAR
5710  PROC SPECIAL1
5711  IF BIT 4068=1 THEN UKEY 1'START''DRESS''LUBE CY.''SETBIT'
5712  IF MCFLAG =3 THEN PROC REARBKEY
5713  IF MCFLAG =8 THEN GOTO 5727
5715  IF BIT 4057<1 THEN GOTO 5729 ELSE PROC REARBKEY
5716  IF MCFLAG <>1 THEN GOTO 5729
5720  UKEY 6 'MAINTEN-''-ANCE''REQUIRED'''
5725  UKEY 7 'MAINTEN-''-ANCE IN''PROGRESS'''
5726  GOTO 5729
5727  UKEY 6'OPERATOR''ALERTED'''''
5728  UKEY 7'LAMP''TEST'''''
5729  IF GFLAG >3 THEN GOTO 5735
5730  IF GFLAG >1 THEN PROC GKEY
5735  IF BIT 4032=1 THEN UKEY 9'ACCESS''LOADER''CONTROL''LOADER'
5736  IF BIT 4060=1 THEN UKEY 7'LAMP''TEST'''''
5737  IF BIT 1012=1 THEN PROC SKEY
5738  IF GFLAG >3 THEN UKEY 11'GAUGE''SETUP'''' GASETUP'
5739  IF BIT 986=1 THEN UKEY 12'WHEEL''BALANCE''START/STP'''
5740  UKEY 13 'ACCESS''SPECIAL''FEATURES''SPECIAL'
5747  UKEY 14 '''''''CANCEL'
5749  SETB 1000:ENDPROC 
5750 DEFPROC GKEY1:RESB 1009:DELAY 0.5:PROC GKEY:ENDPROC 
5751 DEFPROC GKEY2:DELAY 0.5:PROC GKEY:PROC GAGECY:ENDPROC 
5753 DEFPROC GKEY :IF BIT 3803=0 THEN GOTO 5757
5755  UKEY 8 'GAUGE''ADVANCE''''GKEY2':ENDPROC 
5757  UKEY 8 'GAUGE''RETRACT''''GKEY1':ENDPROC 
5760 DEFPROC SKEY1
5761  IF SWSTATE =0 THEN PRINT 'WHEELHEAD SWIVEL DISABLED':ENDPROC 
5762  DELAY 0.5:PROC SKEY:ENDPROC 
5763 DEFPROC SKEY:IF BIT 999=0 THEN GOTO 5767
5765  UKEY 10 'WHEELHEAD''SWIVEL''RIGHT''SKEY1':ENDPROC 
5767  UKEY 10 'WHEELHEAD''SWIVEL''LEFT''SKEY1':ENDPROC 
5770 DEFPROC BALKEY:IF BIT 979=1 THEN GOTO 5774
5772  UKEY 8'WHEEL''BALANCE''ON''BALKEY1':ENDPROC 
5774  UKEY 8'WHEEL''BALANCE''OFF''BALKEY2':ENDPROC 
5776 DEFPROC BALKEY1:SETB 979
5780  PROC BALPAR
5782  PROC BALKEY:ENDPROC 
5784 DEFPROC BALKEY2:RESB 979:PROC BALKEY:ENDPROC 
5786 DEFPROC BALPAR
5788  GPVAR 'WHEEL BALANCE INTERVAL       (SHAFTS)',WBALINT ,50,0
5790  ENDPROC 
5800 DEFPROC LOADER:RESB 950:RESB 1000
5805  UKEY 1'LOADER''ARM TO''MACHINE'''
5810  UKEY 2'LOADER''ARM TO''PICKUP'''
5815  UKEY 3'LOADER''ARM TO''PARK POS.'''
5820  UKEY 4'CLOSE''GRIPPER''FINGERS'''
5825  UKEY 5'OPEN''GRIPPER''FINGERS'''
5830  UKEY 6''''''''
5835  UKEY 7'INDEX''ROUGH''CONVEYOR'''
5840  UKEY 8'INDEX''FINISH''CONVEYOR''' 
5845  UKEY 9''''''''
5846  UKEY 10''''''''
5848  UKEY 11''''''''
5850  UKEY 12''''''''
5852  UKEY 13''''''''
5855  UKEY 14'''''''CANCEL'
5860  SETB 1003:ENDPROC 
5870 DEFPROC REARBKEY:IF BIT 3789=0 THEN GOTO 5880
5875  UKEY 5 'LOCK''REAR''GUARD''REARBKEY':ENDPROC 
5880  UKEY 5 'UNLOCK''REAR''GUARD''REARBKEY':ENDPROC 
5890 DEFPROC GASETUP:PROC CLEAR:SETB 4054:RESB 954
5892  UKEY 6'POSITION''SHAFT''''POSSHAFT1'
5893  IF GFLAG =5 THEN GOTO 5896
5894  PROC ZEROKEY
5896  PROC GKEY
5897  IF GFLAG *BIT 1010=5 THEN PROC DOORCONT1
5898  ENDPROC 
5900 DEFPROC ZEROKEY:IF BIT 4053=1 THEN GOTO 5904
5902  UKEY 7'GAUGE ''ZERO''MODE''GAGEMODE':ENDPROC 
5904  UKEY 7'GAUGE ''MEASURE''MODE''GAGEMODE':ENDPROC 
5906 DEFPROC GAGEMODE
5908  IF BIT 4053=0 THEN SETB 4053 ELSE RESB 4053
5910  PROC ZEROKEY:ENDPROC 
5912 DEFPROC POSSHAFT1:PROC SERVON:PROC POSSHAFT
5913  IF BIT 4054=1 THEN PROC SERVOFF
5914  ENDPROC 
5920 DEFPROC GAGECY
5921  IF GFLAG <4 THEN ENDPROC 
5922  PROC POSSHAFT1:SETB 1009:DELAY 0.5:PROC GKEY
5923  IF GFLAG =5 THEN GOTO 5932
5924  IF BIT 4053=1 THEN PRINT 'GAUGE ZEROING':GOTO 5929
5925  PRINT 'GAUGE MEASURING'
5926  IF BIT 3802<1 THEN GOTO 5926 ELSE DELAY 0.3
5928  PRINT 'GAUGE READING=';-0.001*WORD 3920
5929  IF BIT 3802<.2 THEN GOTO 5929
5932  ENDPROC 
5940 DEFPROC DOORCONT:IF BIT 3797=0 THEN DELAY 0.3:IF BIT 3797=0 THEN MSG 718
5942  DELAY 0.2:PROC DOORCONT1:ENDPROC 
5950 DEFPROC DOORCONT1:IF BIT 3784=1 THEN GOTO 5954
5952  UKEY 9'CLOSE''WORKTABLE''DOOR''DOORCONT':ENDPROC 
5954  UKEY 9'OPEN''WORKTABLE''DOOR''DOORCONT':ENDPROC 
6000 DEFPROC STATUS
6003  IF ROCY +FICY +DUALCY +SINGCY =1 THEN GOTO 6007
6005  PRINT 'MACHINE CYCLE MUST BE SELECTED':PROC MCCYPAR
6007  PRINT 'SETUP ON SHAFT';GSTYP :PRINT 
6010  IF SINGCY =1 THEN PRINT 'SINGLE CYCLE SELECTED':PROC DSTATUS
6013  IF DUALCY =1 THEN PRINT 'DUAL CYCLE SELECTED':PROC DSTATUS
6015  IF FICY =1 THEN PRINT 'FINISH CYCLE SELECTED':PROC FDSTATUS
6017  IF ROCY =1 THEN PRINT 'ROUGH CYCLE SELECTED':PROC RDSTATUS
6019  IF DEQUIP =0 THEN GOTO 6030
6020  IF DFLAG <4 THEN PRINT 'REAR DRESS SELECTED' 
6021  IF DFLAG =4 THEN PRINT 'FRONT DRESS SELECTED'
6030  IF VSPEED =0 THEN PRINT 'HEADSTOCK VARIABLE SPEED OFF'
6033  IF VSPEED =1 THEN PRINT 'HEADSTOCK VARIABLE SPEED ON'
6035  IF GFLAG =0 THEN GOTO 6040
6037  IF GSTATE =0 THEN PRINT 'GAUGE CYCLE OFF' ELSE PRINT 'GAUGE CYCLE ON'
6040  IF BIT 1012=0 THEN GOTO 6050
6043  IF SWSTATE =1 THEN PRINT 'WHEELHEAD SWIVEL ENABLED':GOTO 6050
6045  PRINT 'WHEELHEAD SWIVEL DISABLED'
6050  ENDPROC 
6100 DEFPROC DSTATUS:PROC RDSTATUS:PROC FDSTATUS:ENDPROC 
6110 DEFPROC RDSTATUS
6113  IF RLPD =0 THEN PRINT 'ROUGH DRESS OFF' ELSE PRINT 'ROUGH DRESS ON'
6115  ENDPROC 
6120 DEFPROC FDSTATUS
6123  IF FLPD =0 THEN PRINT 'FINISH DRESS OFF' ELSE PRINT 'FINISH DRESS ON'
6125  ENDPROC 
6500 DEFPROC CDRESS
6501  IF BIT 869=0 THEN PRINT 'FAULT: WHEEL STOPPED, DRESS ABORTED':ENDPROC 
6502  XVARI =DSTATE :DSTATE =0
6503  IF XST =7 THEN SETB 967:XST =2 ELSE GOTO 6508
6505  IF XST >2 THEN GOTO 6505 ELSE FV =XVMAX :FP =FP +FPOFF :SA =SAMAX 
6506  IF FST >2 THEN GOTO 6506 ELSE GOTO 6509
6508  IF BIT 1022=1 THEN PROC SERVON
6509  XP =-WDAT +WRAC +XLOAD 
6510  IF XST >2 THEN GOTO 6510
6512  IF XP <-WDAT +WRAC +XLOAD -.01 THEN GOTO 6512
6513  IF BIT 987=1 THEN PROC WAIT
6514  IF BIT 874=0 THEN PROC HOLDZP
6515  RESB 3787:ZV =ZVMAX :ZA =ZAMAX :ZP =DPOS 
6520  IF ZST >2 THEN GOTO 6520
6525  IF XVARI =1 THEN COMP =RADFD :ZV =RADFR :FV =RADFR :GOTO 6527
6526  COMP =FADFD :ZV =FADFR :FV =FADFR 
6527  IF BIT 987=1 THEN PROC WAIT
6530  XP =-WDAT +WRAC +DDATC -COMP +WROFF 
6533  IF XST >2 THEN GOTO 6533
6535  IF BIT 987=1 THEN PROC WAIT
6536  IF DPTYP >0 THEN PROC DRPA ELSE ZP =ZP +DTRAV 
6537  IF SPD =1 THEN GOTO 6560
6540  IF ZST >2 THEN GOTO 6540
6550  IF XVARI =1 THEN XP =XP -RRDFD :COMP =COMP +RRDFD :ZV =RRDFR :FV =RRDFR :GOTO 6555
6552  XP =XP -FRDFD :COMP =COMP +FRDFD :ZV =FRDFR :FV =FRDFR 
6555  IF XST >2 THEN GOTO 6555
6557  IF BIT 987=1 THEN PROC WAIT
6558  IF DPTYP >0 THEN PROC DRPR ELSE ZP =ZP -DTRAV 
6560  XVARN =COMP *COMPCOR /100:DDATC =DDATC +XVARN :COMP =COMP +XVARN :WRAC =WRAC -COMP 
6563  IF DFLAG +BIT 1013=4 THEN DV =DVMAX :DP =-COMP /DRAT +DP 
6565  IF ZST >2 THEN GOTO 6565 ELSE XP =-WDAT +WRAC +XLOAD 
6576  IF XP <-WDAT +WRAC +XLOAD -.01 THEN GOTO 6576 ELSE ZV =ZVMAX :RESB 956
6577  IF PSET * BIT 4072=1 THEN COSET =COSET1 ELSE IF PSET * BIT 4072=2 THEN COSET =COSET2 
6578  IF PSET >2 THEN COSET =0
6580  ENDPROC 
6581 DEFPROC IFCDRET
6582  IF BIT 987=1 THEN PROC WAIT
6583  IF BIT 874=0 THEN PROC HOLDZP
6584  IF GLPOS +CAJ +COSET < ZPMAX THEN ZP =GLPOS +CAJ +COSET ELSE MSG 704:PROC GCAN1:END 
6585  IF ZST >2 THEN GOTO 6585 ELSE SST =SST :XST =6:SA =FFSA :PROC CALC1
6588  COMP =COMP +FPOFF 
6590  IF XST <>7 THEN GOTO 6590
6592  ENDPROC 
6600 DEFPROC HOLDZP:MSG 702
6605  IF BIT 874=0 THEN GOTO 6605
6607  ENDPROC 
6610 DEFPROC CYHOLD
6612  IF BIT 851=1 THEN MSG 711 ELSE ENDPROC 
6614  IF BIT 851=1 THEN GOTO 6614
6616  ENDPROC 
6620 DEFPROC SPHOLD
6622  IF BIT 4055=0 THEN ENDPROC 
6624  IF BIT 3804<1 THEN SETB 3805
6626  IF BIT 3804<1 THEN GOTO 6624
6628  RESB 3805:ENDPROC 
6980 DEFPROC CANCEL:ODCTRL =1:RESB 990
6983  IF BIT 52=0 THEN PROC INI:ENDPROC 
6986  IF BIT 954=1 THEN PROC PAGE1 ELSE PROC MCON
6990  ENDPROC 
6994 DEFPROC CANCELPAR:PROC CALC:PROC CANCEL:ENDPROC 
7000 DEFPROC CHANGEPAR:ODCTRL =1:RESB 969
7005  PRINT :PRINT :PRINT :PROC IDSHAFT
7006  IF BIT 3776=1 THEN GOTO 7010
7007  MSG 715
7008  IF BIT 961=1 THEN PROC PARTPAR
7009  ENDPROC 
7010  RESB 950:PRINT '** WARNING: RADIAL PARAMETERS **'
7013  UKEY 1'DRESS''PARAMETER''CHANGE''DRESSPAR'
7015  UKEY 2'INFEED''PARAMETER''CHANGE''FEEDPAR'
7017  UKEY 3'SET''STARTING''LOBE''STARTPAR'
7020  UKEY 4'SET AXES''LOAD''POSITIONS''LOADPAR'
7023  PROC VSCDKEY
7024  UKEY 6 ''''''''
7025  IF DFLAG *BIT 52=4 THEN UKEY 6'CALIBRATE''WHEEL''RADIUS''CAL'
7027  IF DFLAG <>4 THEN UKEY 6'SET''WHEEL''RADIUS''WRPAR'
7030  UKEY 7'SELECT''MACHINE''CYCLE''MCCYPAR'
7033  IF BIT 986=1 THEN PROC BALKEY ELSE UKEY 8 ''''''''
7035  IF GFLAG >0 THEN PROC GCYKEY ELSE UKEY 9 ''''''''
7037  UKEY 10'TEST''SHAFT''DATA''TST'
7040  PROC PRINTKEY
7043  IF BIT 1012=1 THEN PROC SWIVKEY ELSE UKEY 12''''''''
7045  UKEY 13'COMPONENT''DATA''CHANGE''CHANGEDAT' 
7047  UKEY 14'''''''CANCELPAR'
7050  ENDPROC 
7052 DEFPROC STARTPAR:PROC PRINTER
7054  GPVAR 'STARTING LOBE NUMBER       ',SLOBE ,NLOBES ,1
7056  PROC CALC:ODCTRL =1
7058  ENDPROC 
7059 DEFPROC FEEDPAR
7060  UKEY 14'''''''CHANGEPAR':PROC PRINTER
7062  IF DUALPWS <1 THEN GOTO 7067
7063  GPVAR 'ROUGH PASS SHAFT NAME              ',RGSTYP ,0,0
7064  GSTYP =RGSTYP 
7065  GPVAR 'FINISH PASS SHAFT NAME               ',FGSTYP ,0,0
7066  GOTO 7068 
7067  GPVAR 'SHAFT NAME                         ',GSTYP ,0,0
7068  GPVAR 'PART CLEARANCE RADIUS            ',GICRB ,WDAT -WRAC ,25
7069  GPVAR 'FIRST CAM WAIT ANGLE            ',FCWA ,359.99,-359.99
7070  GPVAR 'BETWEEN CAM WAIT ANGLE          ',BCWA ,359.99,-359.99
7071  GPVAR 'RAPID FEED RATE              ',RAPIDFR ,XVMAX ,10
7072  IF DFLAG <4 THEN PROC DBOFFPAR
7073  GPVAR 'INFEED PARAMETER SET 1 TO 12         ',PSET ,12,1
7074  IF PSET >8 THEN GOTO 7075:IF PSET >4 THEN PROC BPAR:ENDPROC 
7075  PROC INIFDPAR:ODCTRL =1
7076  UKEY 14'''''''EXFDPAR'
7077  PROC RINCPAR:PROC PRINTER
7078  IF RINC >0 THEN GOTO 7080
7079  GPVAR 'ROUGH FEED/REV                   ',RFPR ,2,0
7080  GPVAR 'ROUGH WORK RPM                       ',RWS ,98,3
7083  GPVAR 'ROUGH SIZE DWELL            (SECONDS)',RDWELL ,20,0
7084  IF DUALCY =1 THEN GPVAR 'FINISH PASS FEED CLEARANCE       ',FPCLR ,1,0
7085  PROC FINCPAR:PROC PRINTER
7087  IF FINC >0 THEN GOTO 7090
7089  GPVAR 'FINISH FEED/REV                  ',FFR ,1,0
7090  GPVAR 'FINISH WORK RPM                      ',FWS ,98,3
7091  GPVAR 'V.S.WORK IN FINISH 1=YES,0=NO        ',FVS ,1,0
7092  IF BIT 986* BIT 979=1 THEN PROC BALPAR
7093  IF BIT 4050>0 THEN GPVAR 'FOOTSTOCK LOW PRESSURE IN FINISH 1=YES,0=NO',LOWP ,1,0
7094  GPVAR 'FINISH SIZE DWELL           (SECONDS)',FDWELL ,100,0
7095  GPVAR 'FEED RESET ANGLE                ',RANG ,359.99,5
7096  IF BIT 4065=1 THEN PROC QRECPAR:GOTO 7098
7097  PROC RECPAR
7098  IF BIT 1012=0 THEN GOTO 7103
7099  IF PSET >2 THEN GOTO 7103
7100  IF PSET =1 THEN MSG 700 ELSE MSG 701
7102  GPVAR 'LOBE FACE TAPER         ',LFT ,.5,0
7103  GPVAR 'SIZE ADJUST CURRENT SET          ',SAJ ,50,-5
7104  GPVAR 'PHASE ADJUST CURRENT SET        ',PAJ ,359.99,-359.99
7105  IF DUALCY *BIT 4072=1 THEN PROC COSETPAR
7106  IF SPIN *CVSET <1 THEN GOTO 7113 ELSE ESCENB =0
7107  IF UNITS =1 THEN XVARN =CV *196.85 ELSE GOTO 7110
7108  GPVAR 'AUXILIARY SPINDLE CUTTING SPEED (SFPM)',XVARN ,CVMAX *196.85,0
7109  CV =XVARN /196.85:GOTO 7111
7110  GPVAR 'AUXILIARY SPINDLE CUTTING SPEED (M/S)',CV ,CVMAX ,0
7111  PROC AWSPEED:ESCENB =1
7113  IF BIT 4077=0 THEN GOTO 7132 ELSE ESCENB =0
7114  IF UNITS =1 THEN XVARN =RMWCV *196.85 ELSE GOTO 7126
7116  GPVAR 'ROUGH MAIN WHEEL CUTTING SPEED (SFPM) ',XVARN ,MWCVMAX *196.85,0
7118  RMWCV =XVARN /196.85
7120  XVARN =FMWCV *196.85
7122  GPVAR 'FINISH MAIN WHEEL CUTTIN SPEED (SFPM) ',XVARN ,MWCVMAX *196.85,0
7124  FMWCV =XVARN /196.85:GOTO 7130
7126  GPVAR 'ROUGH MAIN WHEEL CUTTING SPEED (M/S) ',RMWCV ,MWCVMAX ,0
7128  GPVAR 'FINISH MAIN WHEEL CUTTING SPEED (M/S)',FMWCV ,MWCVMAX ,0
7130  PROC MWSPEED:ESCENB =1
7132  ODCTRL =1:PROC EXFDPAR1:PROC CALC:ENDPROC 
7250 DEFPROC COSETPAR
7252  IF PSET >2 THEN COSET =0:ENDPROC 
7254  GPVAR 'FINISH CYCLE CARRIAGE OFFSET     ',COSET ,10,-10
7256  ENDPROC 
7260 DEFPROC GAGEPAR
7261  IF BIT 961<1 THEN GPVAR 'GAUGE LOBE POSITION',GAGEPOS1 ,359.9,0:GOTO 7270
7262  GPVAR 'SHAFT 1, GAUGE LOBE POSITION',GAGEPOS1 ,359,0
7264  GPVAR 'SHAFT 2, GAUGE LOBE POSITION  ',GAGEPOS2 ,359,0
7266  GPVAR 'SHAFT 3, GAUGE LOBE POSITION  ',GAGEPOS3 ,359,0
7267  GPVAR 'SHAFT 4, GAUGE LOBE POSITION  ',GAGEPOS4 ,359,0
7268  GPVAR 'SHAFT 5, GAUGE LOBE POSITION  ',GAGEPOS5 ,359,0
7269  GPVAR 'SHAFT 6, GAUGE LOBE POSITION ',GAGEPOS6 ,359,0
7270  ENDPROC 
7275 DEFPROC QRECPAR:IF PSET >6 THEN IF PSET <9 THEN GOTO 7280
7277  GPVAR 'CARRIAGE RECIPROCATION SPEED    (HZ=OFF)',CRS ,30,0
7278  IF CRS >0 THEN GPVAR 'CARRIAGE RECIPROCATION LENGTH          ',CRL ,83/CRS ,0
7280  GPVAR 'COMMON WHEEL RECIPROCATION SPEED    (HZ)',QRECIPS ,QVMAX /360,0
7282  IF QRECIPS =0 THEN QRS =0:DQRS =0:ENDPROC ELSE PRINT 
7283  PRINT 'WHEEL RECIPROCATION OFF                         =0'
7284  PRINT 'WHEEL RECIP. DURING ROUGH GRIND ONLY            =1'
7285  PRINT 'WHEEL RECIP. DURING FINISH GRIND ONLY           =2'
7286  PRINT 'WHEEL RECIP. DURING ROUGH & FINISH GRIND        =3'
7287  GPVAR 'SELECT OPTION FOR CURRENT SET                   ',QRS ,3,0
7288  GPVAR 'WHEEL RECIPROCATION DURING DRESS (1=YES, 0=NO) ',DQRS ,1,0
7289  ENDPROC 
7290 DEFPROC LOADPAR:RESB 954
7291  UKEY 14'''''''CHANGEPAR':PROC PRINTER
7292  GPVAR 'WORKHEAD LOAD POSITION',SLOAD ,359.9,-359.9
7294  GPVAR 'CARRIAGE LOAD POSITION   ',ZLOAD ,ZLMAX ,0
7296  GPVAR 'WHEELHEAD LOAD POSITION  ',XLOAD ,WDAT -WRAC ,80
7298  ODCTRL =1:ENDPROC 
7378 DEFPROC CANSAVE:ODCTRL =1:PRINT 
7379  PRINT 'WARNING-PARAMETERS NOT SAVED':PROC CHANGEDAT:ENDPROC 
7380 DEFPROC RESTOREPAR
7381  UKEY 14'''''''CANREST'
7383  PROC BLANK:IDCTRL =6
7384  PRINT 'START TAPE READ OPERATION AND WAIT FOR DATA TRANSFER TO STOP.'
7385  ENDPROC 
7386 DEFPROC CANREST:IF IDCTRL =2 THEN PROC EXDATCH:ENDPROC ELSE IDCTRL =2:PRINT 
7387  PRINT 'WARNING-PARAMETERS PART LOADED':PROC CHANGEDAT
7388  ENDPROC 
7390 DEFPROC RECPAR:IF PSET >6 THEN IF PSET <9 THEN GOTO 7394
7391  GPVAR 'CARRIAGE RECIPROCATION SPEED    (HZ 0=OFF)',CRS ,30,0
7392  IF CRS >0 THEN GPVAR 'CARRIAGE RECIPROCATION LENGTH         ',CRL ,83/CRS ,0
7393  IF RFLAG =0 THEN ENDPROC 
7394  GPVAR 'COMMON WHEEL RECIPROCATION SPEED      (HZ)',RECIPS ,RVMAX /360,0
7395  IF RECIPS =0 THEN RS =0:DRS =0:ENDPROC ELSE PRINT 
7396  PRINT 'WHEEL RECIPROCATION OFF                     =0'
7397  PRINT 'WHEEL RECIP. DURING ROUGH GRIND ONLY        =1'
7398  PRINT 'WHEEL RECIP. DURING FINISH GRIND ONLY       =2'
7399  PRINT 'WHEEL RECIP. DURING ROUGH & FINISH GRIND    =3'
7400  GPVAR 'SELECT OPTION FOR CURRENT SET               ',RS ,3,0
7401  IF DFLAG =1 THEN GOTO 7405
7402  GPVAR 'WHEEL RECIP. DURING DRESS (1=YES,0=NO)      ',DRS ,1,0
7405  ENDPROC 
7408 DEFPROC VSCDKEY
7410  IF VSPEED =1 THEN GOTO 7430
7420  UKEY 5'HEADSTOCK''VARIABLE''SPEED ON''VSCDON':ENDPROC 
7430  UKEY 5'HEADSTOCK''VARIABLE''SPEED OFF''VSCDOFF':ENDPROC 
7435 DEFPROC VSCDON
7438  VSPEED =1:PROC CALC:PROC VSCDKEY:ENDPROC 
7440 DEFPROC VSCDOFF
7443  VSPEED =0:PROC CALC:PROC VSCDKEY:ENDPROC 
7450 DEFPROC GCYKEY:IF GSTATE =0 THEN GOTO 7454
7452  UKEY 9 'GAUGE''CYCLE''OFF''GOFF':ENDPROC 
7454  UKEY 9 'GAUGE''CYCLE''ON''GON':ENDPROC 
7456 DEFPROC GOFF:GSTATE =0:RESB 4046:PROC GCYKEY:ENDPROC 
7458 DEFPROC GON:GSTATE =1:SETB 4046:PROC GCYKEY:PROC PRINTER
7459  IF GFLAG >3 THEN PROC GAGEPAR
7460  IF GFLAG =5 THEN GPVAR 'POST PROCESS GAUGE SIZE ADJUST',PGSAJ ,.1,-.1
7461  IF GFLAG =3 THEN GPVAR 'POST PROCESS GAUGE SIZE ADJUST',PGSAJ ,.1,-.1
7462  ODCTRL =1:ENDPROC 
7464 DEFPROC SWIVKEY:IF SWSTATE =0 THEN GOTO 7468
7466  UKEY 12 'WHEELHEAD''SWIVEL''DISABLE''SOFF':ENDPROC 
7468  UKEY 12 'WHEELHEAD''SWIVEL''ENABLE''SON':ENDPROC 
7470 DEFPROC SOFF:SWSTATE =0:RESB 4085:PROC SWIVKEY:ENDPROC 
7472 DEFPROC SON:SWSTATE =1:SETB 4085:PROC SWIVKEY:MSG 700:MSG 701:PRINT 
7476  GPVAR 'LOBE FACE TAPER PARAMETER SET 1',LFT1 ,.5,0
7478  GPVAR 'LOBE FACE TAPER PARAMETER SET 2',LFT2 ,.5,0
7479  ENDPROC 
7480 DEFPROC PRINTKEY
7482  IF BIT 990=0 THEN GOTO 7486
7484  UKEY 11 'PRINT''OFF''''PRINTOFF':ENDPROC 
7486  UKEY 11 'PRINT''ON''''PRINTON':ENDPROC 
7488 DEFPROC PRINTON:SETB 990:PROC PRINTKEY:ENDPROC 
7490 DEFPROC PRINTOFF:RESB 990:PROC PRINTKEY:ENDPROC 
7492 DEFPROC PRINTER
7494  IF BIT 990=0 THEN ODCTRL =1 ELSE ODCTRL =5
7496  ENDPROC 
7500 DEFPROC BPAR
7503  GPVAR 'BEARING GRIND RPM                    ',BWS ,SVMAX /6,3
7505  GPVAR 'BEARING TOTAL FEED               ',BTF ,50,0
7508  IF LCRFLAG =1 THEN GPVAR 'APPROACH FEED/REV                ',BAFR ,1,0
7510  GPVAR 'FAST FEED/REV                    ',BFFR ,1,0
7513  GPVAR 'FAST FEED END POINT              ',BFEP ,BTF ,0
7514  IF PSET >6 THEN GPVAR 'GAUGE ADVANCE POINT              ',BGA ,BTF ,BFEP 
7515  GPVAR 'DWELL AT END OF FAST FEED         (S)',BFDWELL ,20,0
7516  IF PSET =5 THEN GOTO 7525
7517  IF PSET =7 THEN GOTO 7525
7518  GPVAR 'BACKOFF FEED ENDPOINT            ',BBEP ,50,0
7520  GPVAR 'DWELL AT THE END OF BACKOFF       (S)',BBDWELL ,20,0
7523  GPVAR 'READVANCE FEED END POINT         ',BRAEP ,BBEP ,0
7525  GPVAR 'MEDIUM FEED/REV                  ',BMFR ,1,0
7527  IF PSET <7 THEN GPVAR 'MEDIUM FEED END POINT            ',BMEP ,BFEP ,0
7530  GPVAR 'DWELL AT END OF MEDIUM FEED       (S)',BMDWELL ,20,0
7533  GPVAR 'SLOW FEED/REV                    ',BSFR ,1,0
7535  GPVAR 'SPARKOUT DWELL              (SECONDS)',BSDWELL ,20,0
7537  GPVAR 'BREAKAWAY FEED/REV               ',BRFR ,1,0
7540  GPVAR 'BREAKAWAY END POINT              ',BREP ,50,0
7543  IF PSET >6 THEN GPVAR 'FEED OVER-RUN LIMIT              ',ORUN ,1,0
7544  IF BIT 4065=1 THEN PROC QRECPAR ELSE PROC RECPAR
7545  IF PSET =5 THEN GPVAR 'NO WORKREST SIZE ADJUST          ',S5AJ ,50,-5
7548  IF PSET =6 THEN GPVAR 'WITH WORKREST SIZE ADJUST        ',S6AJ ,50,-5
7550  ENDPROC 
7552 DEFPROC DRSEL
7553  IF DFLAG =4 THEN XVARI =1 ELSE XVARI =2
7554  GPVAR 'DRESSER ENABLED     1=FRONT;2=REAR',XVARI ,2,1
7555  IF XVARI =1 THEN DFLAG =4:RESB 971 ELSE DFLAG =1:SETB 971
7556  PROC SETUP:ENDPROC 
7557 DEFPROC DBOFFPAR:GPVAR 'WORKSPEED DURING DRESS          (RPM)',DWS ,98,3
7558  GPVAR 'FEED BACKOFF DURING DRESS        ',DBOFF ,1,0
7559  GPVAR 'FEED WHILST ROUGH DRESSING 1=YES;0=NO',DRINFD ,1,0:ENDPROC 
7560 DEFPROC DRESSPAR:UKEY 14'''''''CHANGEPAR':PROC PRINTER
7561  IF DEQUIP >0 THEN PROC DRSEL
7562  GPVAR 'ROUGH LOBES/DRESS   (0=OFF)        ',RLPD ,50,0
7563  GPVAR 'FINISH LOBES/DRESS    (0=OFF         ',FLPD ,50,0
7564  IF DFLAG <4 THEN PROC DBOFFPAR
7565  IF DFLAG >0 THEN PROC TDPAR:GOTO 7575
7566  IF DFLAG =-1 THEN PROC SDPAR:GOTO 7577 
7568  GPVAR 'DIAMOND CLEARANCE                ',DFCLR ,DSOFF +1,DSOFF +0.05
7569  GPVAR 'ROUGH DEPTH OF CUT               ',RDFD ,0.1,0
7570  GPVAR 'ROUGH DIAMOND FEED/REV.          ',RDFR ,DFRMAX ,.0002
7571  GPVAR 'ROUGH DRESS TURNS                    ',RDTURN ,500,0
7572  GPVAR 'FINISH DEPTH OF CUT              ',DFD ,0.1,0
7573  GPVAR 'FINISH DIAMOND FEED/REV.         ',DFR ,DFRMAX ,.0002
7574  GPVAR 'FINISH DRESS TURNS                   ',DTURN ,500,0
7575  IF DFLAG +DDAT -DDATMIN =4 THEN COMPCOR =0:GOTO 7580
7577  PRINT :MSG 706
7578  PRINT :GPVAR 'COMPENSATION CORRECTION    (PERCENT)',COMPCOR ,5,-10
7579  IF BIT 4077>0 THEN PROC DCVPAR
7580  ODCTRL =1:ENDPROC 
7605 DEFPROC DDATPAR
7606  GPVAR 'CALIBRATE TRAVERSE RATE      ',CALZV ,6000/DTCAL ,0
7607  IF DDAT =DDATMIN THEN ENDPROC 
7608  GPVAR 'DIAMOND TIP TO WORK CENTER       ',DDATC ,DDAT ,DDATC 
7610  ENDPROC 
7612 DEFPROC WRPAR
7613  UKEY 14'''''''CHANGEPAR'
7614  PRINT :PRINT 'WARNING-BE SURE YOU ARE RIGHT':PROC PRINTER
7615  GPVAR 'CURRENT WHEEL RADIUS     ',WRAC ,WRMAX ,WRMINSET 
7617  PROC CALC:ODCTRL =1
7618  PROC MWSPEED
7619  ENDPROC 
7623 DEFPROC MCCYPAR
7624  UKEY 14'''''''CHANGEPAR':PROC PRINTER
7625  GPVAR 'SINGLE CYCLE 1=YES; 0=NO   ',SINGCY ,1,0
7630  IF SINGCY =1 THEN DUALCY =0:FICY =0:ROCY =0:ODCTRL =1:GOTO 7666
7635  GPVAR '  DUAL CYCLE   1=YES; 0=NO   ',DUALCY ,1,0
7640  IF DUALCY =1 THEN SINGCY =0:FICY =0:ROCY =0:ODCTRL =1:GOTO 7666
7645  GPVAR 'FINISH CYCLE 1=YES; 0=NO     ',FICY ,1,0
7650  IF FICY =1 THEN SINGCY =0:DUALCY =0:ROCY =0:ODCTRL =1:GOTO 7666
7655  GPVAR 'ROUGH CYCLE  1=YES; 0=NO     ',ROCY ,1,0
7660  IF ROCY =1 THEN SINGCY =0:DUALCY =0:FICY =0:ODCTRL =1:GOTO 7666
7665  PRINT 'A MACHINE CYCLE MUST BE SELECTED':GOTO 7625
7666  IF FICY =1 THEN SETB 4039:PROC MWSPEED ELSE RESB 4039:PROC MWSPEED
7667  IF DUALCY *BIT 4059*DFLAG <1 THEN DUALPWS =0:GOTO 7669
7668  PRINT :GPVAR 'DUAL PASS SHAFT SELECTION REQUIRED 1=YES, 0=NO',DUALPWS ,1,0
7669  ENDPROC 
7671 DEFPROC DCVPAR:ESCENB =0
7672  IF UNITS =1 THEN XVARN =RDMWCV *196.85:XVARN1 =FDMWCV *196.85 ELSE GOTO 7677
7673  GPVAR 'ROUGH DRESS MAIN WHEEL CUTTING VEL. (SFPM) ',XVARN ,MWCVMAX *196.85,0
7674  GPVAR 'FINISH DRESS MAIN WHEEL CUTTING VEL. (SFPM)',XVARN1 ,MWCVMAX *196.85,0
7676  RDMWCV =XVARN /196.85:FDMWCV =XVARN1 /196.85:GOTO 7679
7677  GPVAR 'ROUGH DRESS MAIN WHEEL CUTTING VEL. (M/S)  ',RDMWCV ,MWCVMAX ,0
7678  GPVAR 'FINISH DRESS MAIN WHEEL CUTTING VEL. (M/S) ',FDMWCV ,MWCVMAX ,0
7679  ESCENB =1:ENDPROC 
7680 DEFPROC TDPAR
7681  IF BIT 4038=1 THEN GPVAR 'DIAMOND TURN/DRESS           (0=OFF)',DTINT ,200,0
7682  IF BIT 4042=1 THEN GPVAR 'DIAMOND WHEEL LOCK IN FINISH 1=YES,0=NO',DWLCK ,1,0
7683  GPVAR 'SINGLE PASS DRESS          1=YES;0=NO',SPD ,1,0
7685  IF DFLAG <4 THEN XVARI =BIT 4030:GOTO 7693 ELSE PROC DDATPAR:XVARI =0
7687  GPVAR 'CARRIAGE DRESS START POSITION    ',DPOS ,ZPMAX ,0
7690  IF DPTYP =0 THEN GPVAR 'DRESS TRAVERSE LENGTH            ',DTRAV ,75,-75
7693  IF SPD =1 THEN GOTO 7717
7695  GPVAR 'ROUGH  ADVANCE CUT               ',RADFD ,.1,0
7696  GPVAR 'ROUGH  RETRACT CUT               ',RRDFD ,.1,0
7697  GPVAR 'ROUGH  ADVANCE RATE          ',RADFR ,6000/DTCAL ,0
7698  IF XVARI =1 THEN GPVAR 'ROUGH  ADVANCE RADIUS RATE   ',RADFR2 ,6000/DTCAL ,0
7703  GPVAR 'ROUGH  RETRACT RATE          ',RRDFR ,6000/DTCAL ,0
7704  IF XVARI =1 THEN GPVAR 'ROUGH  RETRACT RADIUS RATE   ',RRDFR2 ,6000/DTCAL ,0
7705  GPVAR 'FINISH ADVANCE CUT               ',FADFD ,.1,0
7706  GPVAR 'FINISH RETRACT CUT               ',FRDFD ,.1,0
7707  IF BIT 4041=1 THEN PROC SETFDFR : GOTO 7715
7709  GPVAR 'FINISH ADVANCE RATE          ',FADFR ,6000/DTCAL ,0
7710  IF XVARI =1 THEN GPVAR 'FINISH ADVANCE RADIUS RATE   ',FADFR2 ,6000/DTCAL ,0
7713  GPVAR 'FINISH RETRACT RATE          ',FRDFR ,6000/DTCAL ,0 
7714  IF XVARI =1 THEN GPVAR 'FINISH RETRACT RADIUS RATE   ',FRDFR2 ,6000/DTCAL ,0 
7715  IF BIT 4056=0 THEN PROC TDPOS 
7716  ENDPROC 
7717  GPVAR 'ROUGH  DEPTH OF CUT              ',RADFD ,.1,0
7718  GPVAR 'FINISH DEPTH OF CUT              ',FADFD ,.1,0
7720  GPVAR 'ROUGH  TRAVERSE RATE         ',RADFR ,6000/DTCAL ,0
7722  IF XVARI =1 THEN GPVAR 'ROUGH RADIUS TRAVERSE RATE   ',RADFR2 ,6000/DTCAL ,0 
7724  IF BIT 4041=1 THEN PROC SETFDTR : GOTO 7728
7725  GPVAR 'FINISH TRAVERSE RATE         ',FADFR ,6000/DTCAL ,0
7726  IF XVARI =1 THEN GPVAR 'FINISH RADIUS TRAVERSE RATE  ',FADFR2 ,6000/DTCAL ,0
7728  IF BIT 4056=0 THEN PROC TDPOS
7730  ENDPROC 
7740 DEFPROC TDPOS 
7741  IF BIT 4048>0 THEN GPVAR 'TWO WHEEL DRESS            1=YES,0=NO',TWD ,1,0
7742  IF TWD >0 THEN GPVAR 'BETWEEN WHEEL TRAVERSE RATE  ',BWTR ,6000/DTCAL ,0 
7744  IF BIT 4052+XVARI <2 THEN GOTO 7750
7745  GPVAR 'RADIUS TRAVERSE STOP POSITION 1  ',NO6POS ,100,0
7747  GPVAR 'TRAVERSE STOP POSITION 1         ',NO1POS ,100,0
7748  GPVAR 'RADIUS TRAVERSE STOP POSITION 2  ',NO2POS ,100,0
7749  GOTO 7753 
7750  GPVAR 'TRAVERSE STOP POSITION 1         ',NO1POS ,100,0 
7752  IF XVARI =1 THEN GPVAR 'RADIUS TRAVERSE STOP POSITION 1  ',NO2POS ,100,0
7753  IF TWD >0 THEN GPVAR 'BETWEEN WHEEL STOP POSITION      ',NO3POS ,100,0 ELSE ENDPROC 
7754  IF BIT 4052+XVARI <2 THEN GOTO 7759
7755  GPVAR 'RADIUS TRAVERSE STOP POSITION 3  ',NO7POS ,100,0
7756  GPVAR 'TRAVERSE STOP POSITION 2         ',NO4POS ,100,0
7757  GPVAR 'RADIUS TRAVERSE STOP POSITION 4  ',NO5POS ,100,0
7758  GOTO 7763
7759  GPVAR 'TRAVERSE STOP POSITION 2         ',NO4POS ,100,0
7762  IF XVARI =1 THEN GPVAR 'RADIUS STOP POSITION 2           ',NO5POS ,100,0 
7763  IF SPD <1 THEN GPVAR 'RETRACT PASS POSITION OFFSET     ',TOFFSET ,20,-20 
7764  ENDPROC 
7782 DEFPROC SPECIAL1
7785  UKEY 2 'JOG''AXES''''JOG'
7787  UKEY 3 'MOVE X&Z''AXES TO''DATUM''DATUM'
7790  UKEY 4 'WHEEL''CHANGE''''WCHANGE'
7793  ENDPROC 
7795 DEFPROC SPECIAL
7797  RESB 950:ODCTRL =1:PROC BLANK:PROC CLEAR
7799  UKEY 1 'CHANGE''TOP''DISPLAY''DXX'
7801  IF BIT 52*BIT 1011>0 THEN PROC SPECIAL1
7803  IF BIT 512*BIT 4032=1 THEN UKEY 9'ACCESS''LOADER''CONTROL''LOADER'
7805  UKEY 10 'VIEW''MACHINE''DATA''VIEWDATA'
7807  IF INCH >1 THEN PROC UNITKEY
7809  UKEY 12 'EDIT''''''EDIT'
7811  UKEY 13 'MONITOR''''''MONITOR'
7813  UKEY 14 '''''''CANCEL'
7815  ENDPROC 
7820 DEFPROC UNITKEY:IF UNITS =0 THEN GOTO 7825
7823  UKEY 11 'METRIC''DISPLAY''''METRIC':ENDPROC 
7825  UKEY 11 'INCH''DISPLAY''''IMPERIAL':ENDPROC 
7827 DEFPROC METRIC
7830  UNITS =0:PROC UNITKEY:ENDPROC 
7833 DEFPROC IMPERIAL
7835  UNITS =1:PROC UNITKEY:ENDPROC 
7840 DEFPROC JOG2
7842  PROC CLEAR:UKEY 13'''''''':PRINT 'REAR REMOTE JOG STATION ENABLED'
7844  IF RFLAG *RFLAG >1 THEN PROC TSEL
7846  ENDPROC 
7848 DEFPROC REARJOG:RESB 3795:SETB 4064:RESB 954
7850  PROC JOG2:UKEY 8'REAR PB''STATION''DISABLE'''
7852  PROC REARJOG1:IF BIT 8=0 THEN GOTO 7852 ELSE DST =2:RST =2:PROC JOG:ENDPROC 
7854 DEFPROC REARJOG1:XVARN =1
7856  IF BIT 3812=1 THEN DST =2:GOTO 7876
7858  IF BIT 3811=1 THEN RST =2
7860  IF BIT 3779=1 THEN XVARN =0.9*XVARN +0.1 *DVMAX :GOTO 7866
7862  IF BIT 3778=1 THEN WRAC =WRMAX :PRINT 'DRESSER FULLY RETRACTED':GOTO 7870
7864  XVARN =DVMAX 
7866  IF BIT 859=1 THEN DV =XVARN /500:GOTO 7872
7867  IF BIT 860=1 THEN DV =XVARN /100:GOTO 7872
7868  IF BIT 861=1 THEN DV =XVARN /2:GOTO 7872
7869  IF BIT 862=1 THEN DV =XVARN :GOTO 7872
7870  DST =2:ENDPROC 
7872  IF BIT 857=1 THEN DP =-1+DP :ENDPROC 
7873  IF BIT 858=1 THEN DP =1+DP 
7874  IF WRAC <>WRMAX THEN PROC WSMSG
7875  ENDPROC 
7876  IF BIT 859=1 THEN RV =RVMAX /7200:GOTO 7882
7877  IF BIT 860=1 THEN RV =RVMAX /360:GOTO 7882
7878  IF BIT 861=1 THEN RV =RVMAX /15:GOTO 7882
7879  IF BIT 862=1 THEN RV =RVMAX /4*BIT 3782 +3600/4:GOTO 7882
7880  RST =2:ENDPROC 
7882  IF BIT 858=0 THEN GOTO 7886
7884  IF BIT 3781=1 THEN RST =2:PRINT 'DRESSER ON START POSITION' ELSE RST =4
7886  IF BIT 857=0 THEN ENDPROC 
7888  IF BIT 3892=1 THEN RST =2:PRINT 'DRESSER FULLY ADVANCED' ELSE RST =5
7890  ENDPROC 
7900 DEFPROC DXX
7902  IF DXXP =-1 THEN DVAR 'R-AXIS VELOCITY'RV :DXXP =0:ENDPROC 
7905  IF DXXP >7 THEN DXXP =0 ELSE DXXP =DXXP +1
7906  IF DFLAG =0 THEN GOTO 7910
7907  IF DXXP =4 THEN DXXP =5
7910  IF DXXP =0 THEN DVAR 'WHEELFEED POSITION'FP 
7915  IF DXXP =1 THEN DVAR 'WHEELHEAD POSITION'XP 
7920  IF DXXP =2 THEN DVAR 'CARRIAGE POSITION'ZP 
7925  IF DXXP =3 THEN DVAR 'DIAMOND POSITION'DP 
7927  IF DXXP =4 THEN DVAR 'DIAMOND MONITOR'DMP 
7930  IF DXXP =5 THEN DVAR 'HEADSTOCK POSITION'SP 
7932  IF DXXP =6 THEN DVAR '0.1S CYCLE TIMER'TIME 
7934  IF DXXP =7 THEN DVAR 'SETUP ON SHAFT'GSTYP 
7935  IF DXXP =8 THEN DVAR ''NULL 
7936  ENDPROC 
8000 DEFPROC JOG:RESB 4064
8001  IF MCFLAG =8 THEN IF BIT 3776=0 THEN MSG 715:ENDPROC 
8005  PROC CLEAR:PROC BLANK 
8007  IF BIT 1022=1 THEN PROC SERVOFF
8010  UKEY 1 'WHEELHEAD''JOG''ENABLE''XJOG'
8015  UKEY 3 'WORKHEAD''JOG''ENABLE''SJOG'
8020  UKEY 7 'CARRIAGE''JOG''ENABLE''ZJOG'
8021  IF BIT 4063=1 THEN UKEY 9'REAR PB''STATION''ENABLE''REARJOG':GOTO 8030
8022  UKEY 9 'DIAMOND''BAR JOG''ENABLE''DJOG'
8024  IF DFLAG =1 THEN UKEY 11'DRESSER''TRAVERSE''ENABLE''RJOG'
8030  ENDPROC 
8032 DEFPROC JOG1
8034  PROC DXX:PROC CLEAR:UKEY 13'''''''':PRINT 'REMOTE JOG STATION ENABLED'
8036  ENDPROC 
8050 DEFPROC XJOG
8051  IF BIT 1022=1 THEN PROC SERVON
8052  DXXP =0:PROC JOG1:RESB 954:UKEY 2'WHEEL''JOG''DISABLE''' 
8054  PROC XJOG1:IF BIT 2=0 THEN GOTO 8054 ELSE XST =2:PROC JOG:ENDPROC 
8057 DEFPROC XJOG1
8058  IF BIT 879=0 THEN MSG 703:GOTO 8080
8070  IF BIT 859=1 THEN XV =.001:GOTO 8081
8072  IF BIT 860=1 THEN XV =.01:GOTO 8085
8074  IF BIT 861=1 THEN XV =1:GOTO 8085
8075  IF BIT 862=1 THEN XV =10:GOTO 8085
8080  XST =2:ENDPROC 
8081  IF BIT 858=0 THEN GOTO 8083
8082  IF XP <0 THEN XP =XP +.0002:DELAY .5:ENDPROC 
8083  IF XP >XPMAX THEN XP =XP -.0002:DELAY .5
8084  ENDPROC 
8085  IF BIT 858=1 THEN XP =0:ENDPROC 
8090  IF BIT 857=1 THEN XP =XPMAX 
8095  ENDPROC 
8100 DEFPROC ZJOG
8102  IF BIT 1022=1 THEN PROC SERVON
8105  DXXP =1:PROC JOG1:RESB 954:UKEY 6'CARRIAGE''JOG''DISABLE'''
8110  PROC ZJOG1:IF BIT 6=0 THEN GOTO 8110 ELSE ZST =2: PROC JOG:ENDPROC 
8112 DEFPROC ZJOG1
8113  IF BIT 874=0 THEN MSG 702:PRINT :GOTO 8130
8114  IF BIT 859=1 THEN ZV =.1:GOTO 8135
8115  IF BIT 860=1 THEN ZV =.5:GOTO 8135
8120  IF BIT 861=1 THEN ZV =5:GOTO 8135
8125  IF BIT 862=1 THEN ZV =25:GOTO 8135
8130  ZST =2:ENDPROC 
8135  IF BIT 858=1 THEN ZP =ZPMAX :ENDPROC 
8140  IF BIT 857=1 THEN ZP =0
8145  ENDPROC 
8150 DEFPROC SJOG
8152  IF BIT 1022=1 THEN PROC SERVON
8155  DXXP =4:PROC JOG1:RESB 954:UKEY 4'WORKHEAD''JOG''DISABLE'''
8156  IF BIT 802=1 THEN XVARI =0 ELSE XVARI =1
8157  IF GFLAG *XVARI =3 THEN XVARI =0:XVARN =SVPLG ELSE XVARI =1:XVARN =0:GOTO 8160
8159  PRINT 'WARNING-ALL BUTTONS RUN WORK AT GAUGING SPEED FOR GAUGE SETUP'
8160  PROC SJOG1:IF BIT 4=0 THEN GOTO 8160 ELSE SST =2: PROC JOG:ENDPROC 
8161 DEFPROC SJOG1:PROC SPHOLD
8162  IF BIT 859*XVARI =1 THEN SV =.1:SP =-1*BIT 857+BIT 858*.02+SP :ENDPROC 
8164  IF BIT 859=1 THEN SV =XVARN :GOTO 8185
8165  IF BIT 860=1 THEN SV =5*XVARI +XVARN :GOTO 8185
8170  IF BIT 861=1 THEN SV =120*XVARI +XVARN :GOTO 8185
8175  IF BIT 862=1 THEN SV =600*XVARI +XVARN :GOTO 8185
8180  SST =2:ENDPROC 
8185  IF BIT 858=1 THEN SST =4:ENDPROC 
8190  IF BIT 857=1 THEN SST =5
8195  ENDPROC 
8200 DEFPROC DJOG:RESB 3795
8205  DXXP =2:PROC JOG1:UKEY 8'DIAMOND''BAR JOG''DISABLE'''
8210  PROC DJOG1:IF BIT 8=0 THEN GOTO 8210 ELSE DST =2:PROC JOG:ENDPROC 
8212 DEFPROC DJOG1:XVARN =DFLAG *DFLAG 
8213  IF DFLAG =4 THEN XVARN =DVMAX 
8215  IF BIT 3779=1 THEN XVARN =0.9*XVARN +0.1*DVMAX :GOTO 8220
8217  IF BIT 3778=1 THEN WRAC =WRMAX :PRINT 'DRESSER FULLY RETRACTED':GOTO 8240
8218  XVARN =DVMAX 
8220  IF BIT 859=1 THEN DV =XVARN /500:GOTO 8243
8225  IF BIT 860=1 THEN DV =XVARN /100:GOTO 8243
8230  IF BIT 861=1 THEN DV =XVARN /2:GOTO 8243
8235  IF BIT 862=1 THEN DV =XVARN :GOTO 8243
8240  DST =2:ENDPROC 
8243  IF BIT 857=1 THEN DP =-1+DP :ENDPROC 
8244  IF BIT 858=1 THEN DP =1+DP 
8245  IF WRAC <>WRMAX THEN PROC WSMSG
8246  ENDPROC 
8260 DEFPROC RJOG
8262  DXXP =-1:PROC JOG1:RESB 954:UKEY 10'DRESSER''TRAVERSE''DISABLE'''
8263  IF RFLAG *RFLAG >1 THEN PROC TSEL
8264  PROC RJOG1:IF BIT 10=0 THEN GOTO 8264 ELSE RST =2:PROC JOG:ENDPROC 
8265 DEFPROC RJOG1
8266  IF BIT 859=1 THEN RV =RVMAX /7200:GOTO 8276
8268  IF BIT 860=1 THEN RV =RVMAX /360:GOTO 8276
8270  IF BIT 861=1 THEN RV =RVMAX /15:GOTO 8276
8272  IF BIT 862=1 THEN RV =RVMAX /4*BIT 3782+3600/4:GOTO 8276
8274  RST =2:ENDPROC 
8276  IF BIT 858=0 THEN GOTO 8280
8278  IF BIT 3781=1 THEN RST =2:PRINT 'DRESSER ON START POSITION' ELSE RST =4
8280  IF BIT 857=0 THEN ENDPROC 
8282  IF BIT 3892=1 THEN RST =2:PRINT 'DRESSER FULLY ADVANCED' ELSE RST =5
8284  ENDPROC 
8300 DEFPROC WV
8302  PRINT 'CURRENT WHEELSPEED                  (RPM ):';WPR *60/PPR 
8303  PRINT 'CURRENT WHEELSPEED                  (SFPM):';1.2368*WRAC *WPR /PPR 
8305  PRINT 'CURRENT WHEELSPEED                  (M/S ):';.00628*WRAC *WPR /PPR 
8307  ENDPROC 
8310 DEFPROC WSMSG
8312  PRINT 'WARNING: WHEEL RADIUS HAS BEEN SET TO ITS'
8313  PRINT '         MAXIMUM VALUE      ';WRMAX 
8314  IF UNITS =0 THEN PRINT '        WAS PREVIOUSLY  (MM)';WRAC :GOTO 8318
8316  PRINT '        WAS PREVIUOSLY  (INCH)';WRAC 
8318  WRAC =WRMAX :ENDPROC 
8320  ENDPROC 
8330 DEFPROC WSPEED:ESCENB =0:XVARN =WRMAX -WRMIN /4
8332  IF WRAC <XVARN +WRMIN THEN RESB 3790:RESB 3791:RESB 3792:SETB 3793:GOTO 8340
8334  IF WRAC <XVARN *2+WRMIN THEN RESB 3790:RESB 3793:RESB 3791:SETB 3792:GOTO 8340
8336  IF WRAC <XVARN *3+WRMIN THEN RESB 3792:RESB 3793:RESB 3790:SETB 3791:GOTO 8340
8338  RESB 3792:RESB 3791:RESB 3793:SETB 3790
8340  IF BIT 3793=1 THEN STEPRAD =XVARN +WRMIN 
8342  IF BIT 3792=1 THEN STEPRAD =XVARN *2+WRMIN 
8344  IF BIT 3791=1 THEN STEPRAD =XVARN *3+WRMIN 
8346  IF BIT 3790=1 THEN STEPRAD =XVARN *4+WRMIN 
8347  ESCENB =1:ENDPROC 
8350 DEFPROC WCHANGE:RESB 4049 
8351  IF BIT 1022=1 THEN PROC SERVON
8352  SETB 1001:RESB 954:RESB 4028:RESB 4044
8353  IF MCFLAG =1 THEN STAJ =STAJ +WCSAJ 
8355  PRINT 'WHEEL CHANGE REQUIRE'
8356  PRINT 'WAIT FOR AXES TO GET TO WHEEL CHANGE POSITION'
8360  PROC WSMSG:PROC CALC:XV =50:XP =0:DV =DVMAX 
8362  IF BIT 985=1 THEN PROC WSPEED
8363  IF BTASKST >2000 THEN MSG 712:GOTO 8363
8365  IF DFLAG =1 THEN MSG 719:GOTO 8375
8368  IF DFLAG *BIT 1013<>4 THEN DP =WRMAX -WRMIN +10/DRAT +DP 
8370  IF BIT 3778=1 THEN DST =2
8375  IF XST +DST >4 THEN GOTO 8370
8390  PRINT :PRINT 'DRESSER AND WHEELFEED AT WHEELCHANGE POSITION.'
8391  PRINT 'CHANGE WHEEL AND RECALIBRATE THE WHEELFEED AXIS'
8392  IF MCFLAG <>1 THEN PRINT 'BY SETTING THE CORRECT WHEEL RADIUS':GOTO 8395
8393  IF UNITS =0 THEN PRINT 'WHEELHEAD SIZE ADJUSTED BY';WCSAJ ;CHR 109,CHR 109
8394  IF UNITS =1 THEN PRINT 'WHEELHEAD SIZE ADJUSTED BY';WCSAJ ;CHR 105,CHR 110
8395  IF BIT 1022=1 THEN PROC SERVOFF
8396  TOWCHCT =TOWCHCT +1:ENDPROC 
8400 DEFPROC SERVON
8403  IF BIT 880=0 THEN MSG 708:END 
8404  IF BIT 3794=1 THEN MSG 716
8405  ESCENB =0:ZST =2:SST =2:XST =2:QST =2:SETB 1021:ESCENB =1:RESB 969
8407  ENDPROC 
8410 DEFPROC SERVOFF
8413  ESCENB =0
8415  ZST =11:SST =11:XST =11:QST =11:RESB 1021:ESCENB =1
8417  ENDPROC 
8510 DEFPROC DEBUG
8515  IF BIT 3777=1 THEN GOTO 8520
8516  PRINT 'SECURITY SWITCH MUST BE IN EDIT POSITION':ENDPROC 
8520  IF BIT 863=0 THEN SETB 863 ELSE RESB 863
8522  IF BIT 950=1 THEN PROC PAGE1 
8525  ENDPROC 
8550 DEFPROC DATUM
8551  IF BIT 1022=1 THEN PROC SERVON
8552  IF BIT 879=0 THEN MSG 703:ENDPROC 
8553  XV =50:XP =0:RESB 954
8554  IF BIT 874=0 THEN MSG 702:ENDPROC 
8557  IF XST >2 THEN GOTO 8557 ELSE ZV =ZVMAX :ZP =0
8562  IF ZST >2 THEN GOTO 8562 ELSE PROC AXSTOP:ENDPROC 
8600 DEFPROC HELP
8602  PRINT 
8604  PRINT 'FUNCTION                                    KEYBOARD COMMAND'
8606  PRINT '********                                    ****************'
8608  PRINT 'PLC EDIT:INSERT/DELETE/CHANGE..................  PLCEDIT'
8610  PRINT 'OUTPUT PLC PROGRAMME TO CASSETTE...............  PLCO'
8612  PRINT 'INPUT PLC PROGRAMME FROM CASSETTE..............  PLCI'
8614  PRINT 'OUTPUT PART PROGRAMME TO CASSETTE..............  PPO'
8616  PRINT 'INPUT PART PROGRAMME FROM CASSETTE.............  PPI'
8618  ENDPROC 
8630 DEFPROC EDIT
8633  IF BIT 3777=1 THEN GOTO 8640
8636  PRINT 'EDIT SECURITY SWITCH NOT IN EDIT POSITION':ENDPROC 
8640  PROC CLEAR:PROC ID
8650  UKEY 14'''''''CANEDIT'
8652  IF BIT 52=1 THEN UKEY 1 'X-AXIS''RUN''TEST''XRUN' ELSE GOTO 8658
8654  UKEY 2 'Z-AXIS''RUN''TEST''ZRUN'
8655  IF BIT 4065 =1 THEN UKEY 4 'Q-AXIS''RUN''TEST''QRUN'
8656  UKEY 3 'S-AXIS''RUN''TEST''SRUN'
8657  IF BIT 4077>0 THEN UKEY 5'WHEEL''SPEED''SETUP''WSPDSET'
8658  UKEY 6 'KEYBOARD''COMMAND''HELP''HELP'
8660  UKEY 7'''    <''''<'
8662  UKEY 8'''    >''''>'
8664  UKEY 9'''    ;'''';'
8666  UKEY 10'''    :'''':'
8668  UKEY 12'''    *''''*'
8670  UKEY 13'''    =''''='
8672  ENDPROC 
8674 DEFPROC CANEDIT
8676  PROC AXSTOP:PROC START1:ENDPROC 
8700 DEFPROC INIFDPAR:ESCENB =0
8702  IF PSET <>1 THEN GOTO 8718
8704  RTF =R1TF :RINC =R1INC :RINC1 =R1INC1 :CRS =CRS1 :CRL =CRL1 :RS =RS1 :QRS =QRS1 
8706  RINC2 =R1INC2 :RINC3 =R1INC3 :RINC4 =R1INC4 :RINC5 =R1INC5 :RINC6 =R1INC6 
8708  RINCFR =R1INCFR :RINCFA =R1INCFA :RFPR =R1FR :RWS =R1WS :RDWELL =R1DWELL 
8710  FTF =F1TF :FINC =F1INC :FINC1 =F1INC1 :FINC2 =F1INC2 :FINC3 =F1INC3 
8712  FINC4 =F1INC4 :FINCFR =F1INCFR :FINCFA =F1INCFA :FFR =F1FR :FWS =F1WS 
8714  IF F1VS =5 THEN FVS =0 ELSE FVS =1
8716  FDWELL =F1DWELL :RANG =R1ANG :SAJ =S1AJ :PAJ =P1AJ :COSET =COSET1 :LFT =LFT1 :GOTO 8840
8718  IF PSET <>2 THEN GOTO 8734
8720  RTF =R2TF :RINC =R2INC :RINC1 =R2INC1 :CRS =CRS2 :CRL =CRL2 :RS =RS2 :QRS =QRS2 
8722  RINC2 =R2INC2 :RINC3 =R2INC3 :RINC4 =R2INC4 :RINC5 =R2INC5 :RINC6 =R2INC6 
8724  RINCFR =R2INCFR :RINCFA =R2INCFA :RFPR =R2FR :RWS =R2WS :RDWELL =R2DWELL 
8726  FTF =F2TF :FINC =F2INC :FINC1 =F2INC1 :FINC2 =F2INC2 :FINC3 =F2INC3 
8728  FINC4 =F2INC4 :FINCFR =F2INCFR :FINCFA =F2INCFA :FFR =F2FR :FWS =F2WS 
8730  IF F2VS =5 THEN FVS =0 ELSE FVS =1
8732  FDWELL =F2DWELL :RANG =R2ANG :SAJ =S2AJ :PAJ =P2AJ :COSET =COSET2 :LFT =LFT2 :GOTO 8840
8734  IF PSET <>3 THEN GOTO 8750
8736  RTF =R3TF :RINC =R3INC :RINC1 =R3INC1 :CRS =CRS3 :CRL =CRL3 :RS =RS3 :QRS =QRS3 
8738  RINC2 =R3INC2 :RINC3 =R3INC3 :RINC4 =R3INC4 :RINC5 =R3INC5 :RINC6 =R3INC6 
8740  RINCFR =R3INCFR :RINCFA =R3INCFA :RFPR =R3FR :RWS =R3WS :RDWELL =R3DWELL 
8742  FTF =F3TF :FINC =F3INC :FINC1 =F3INC1 :FINC2 =F3INC2 :FINC3 =F3INC3 
8744  FINC4 =F3INC4 :FINCFR =F3INCFR :FINCFA =F3INCFA :FFR =F3FR :FWS =F3WS 
8746  IF F3VS =5 THEN FVS =0 ELSE FVS =1
8748  FDWELL =F3DWELL :RANG =R3ANG :SAJ =S3AJ :PAJ =P3AJ :GOTO 8840
8750  IF PSET <>4 THEN GOTO 8766
8752  RTF =R4TF :RINC =R4INC :RINC1 =R4INC1 :CRS =CRS4 :CRL =CRL4 :RS =RS4 :QRS =QRS4 
8754  RINC2 =R4INC2 :RINC3 =R4INC3 :RINC4 =R4INC4 :RINC5 =R4INC5 :RINC6 =R4INC6 
8756  RINCFR =R4INCFR :RINCFA =R4INCFA :RFPR =R4FR :RWS =R4WS :RDWELL =R4DWELL 
8758  FTF =F4TF :FINC =F4INC :FINC1 =F4INC1 :FINC2 =F4INC2 :FINC3 =F4INC3 
8760  FINC4 =F4INC4 :FINCFR =F4INCFR :FINCFA =F4INCFA :FFR =F4FR :FWS =F4WS 
8762  IF F4VS =5 THEN FVS =0 ELSE FVS =1
8764  FDWELL =F4DWELL :RANG =R4ANG :SAJ =S4AJ :PAJ =P4AJ :GOTO 8840
8766  IF PSET =5 THEN CRS =CRS5 :CRL =CRL5 :RS =RS5 :QRS =QRS5 
8768  IF PSET =6 THEN CRS =CRS6 :CRL =CRL6 :RS =RS6 :QRS =QRS6 
8770  IF PSET =7 THEN RS =RS7 :QRS =QRS7 
8772  IF PSET =8 THEN RS =RS8 :QRS =QRS8 
8774  IF PSET <>9 THEN GOTO 8790
8776  RTF =R9TF :RINC =R9INC :RINC1 =R9INC1 :CRS =CRS9 :CRL =CRL9 :RS =RS9 :QRS =QRS9 
8778  RINC2 =R9INC2 :RINC3 =R9INC3 :RINC4 =R9INC4 :RINC5 =R9INC5 :RINC6 =R9INC6 
8780  RINCFR =R9INCFR :RINCFA =R9INCFA :RFPR =R9FR :RWS =R9WS :RDWELL =R9DWELL 
8782  FTF =F9TF :FINC =F9INC :FINC1 =F9INC1 :FINC2 =F9INC2 :FINC3 =F9INC3 
8784  FINC4 =F9INC4 :FINCFR =F9INCFR :FINCFA =F9INCFA :FFR =F9FR :FWS =F9WS 
8786  IF F9VS =5 THEN FVS =0 ELSE FVS =1
8788  FDWELL =F9DWELL :RANG =R9ANG :SAJ =S9AJ :PAJ =P9AJ :GOTO 8840
8790  IF PSET <>10 THEN GOTO 8806
8792  RTF =R10TF :RINC =R10INC :RINC1 =R10INC1 :CRS =CRS10 :CRL =CRL10 :RS =RS10 :QRS =QRS10 
8794  RINC2 =R10INC2 :RINC3 =R10INC3 :RINC4 =R10INC4 :RINC5 =R10INC5 :RINC6 =R10INC6 
8796  RINCFR =R10INCFR :RINCFA =R10INCFA :RFPR =R10FR :RWS =R10WS :RDWELL =R10DWELL 
8798  FTF =F10TF :FINC =F10INC :FINC1 =F10INC1 :FINC2 =F10INC2 :FINC3 =F10INC3 
8800  FINC4 =F10INC4 :FINCFR =F10INCFR :FINCFA =F10INCFA :FFR =F10FR :FWS =F10WS 
8802  IF F10VS =5 THEN FVS =0 ELSE FVS =1
8804  FDWELL =F10DWELL :RANG =R10ANG :SAJ =S10AJ :PAJ =P10AJ :GOTO 8840
8806  IF PSET <>11 THEN GOTO 8822
8808  RTF =R11TF :RINC =R11INC :RINC1 =R11INC1 :CRS =CRS11 :CRL =CRL11 :RS =RS11 :QRS =QRS11 
8810  RINC2 =R11INC2 :RINC3 =R11INC3 :RINC4 =R11INC4 :RINC5 =R11INC5 :RINC6 =R11INC6 
8812  RINCFR =R11INCFR :RINCFA =R11INCFA :RFPR =R11FR :RWS =R11WS :RDWELL =R11DWELL 
8814  FTF =F11TF :FINC =F11INC :FINC1 =F11INC1 :FINC2 =F11INC2 :FINC3 =F11INC3 
8816  FINC4 =F11INC4 :FINCFR =F11INCFR :FINCFA =F11INCFA :FFR =F11FR :FWS =F11WS 
8818  IF F11VS =5 THEN FVS =0 ELSE FVS =1
8820  FDWELL =F11DWELL :RANG =R11ANG :SAJ =S11AJ :PAJ =P11AJ :GOTO 8840
8822  IF PSET <>12 THEN GOTO 8840
8824  RTF =R12TF :RINC =R12INC :RINC1 =R12INC1 :CRS =CRS12 :CRL =CRL12 :RS =RS12 :QRS =QRS12 
8826  RINC2 =R12INC2 :RINC3 =R12INC3 :RINC4 =R12INC4 :RINC5 =R12INC5 :RINC6 =R12INC6 
8828  RINCFR =R12INCFR :RINCFA =R12INCFA :RFPR =R12FR :RWS =R12WS :RDWELL =R12DWELL 
8830  FTF =F12TF :FINC =F12INC :FINC1 =F12INC1 :FINC2 =F12INC2 :FINC3 =F12INC3 
8832  FINC4 =F12INC4 :FINCFR =F12INCFR :FINCFA =F12INCFA :FFR =F12FR :FWS =F12WS 
8834  IF F12VS =5 THEN FVS =0 ELSE FVS =1
8836  FDWELL =F12DWELL :RANG =R12ANG :SAJ =S12AJ :PAJ =P12AJ 
8840  ESCENB =1:ENDPROC 
8842 DEFPROC EXFDPAR:PROC EXFDPAR1:PROC CHANGEPAR:ENDPROC 
8844 DEFPROC EXFDPAR1:ESCENB =0
8846  IF PSET <>1 THEN GOTO 8862
8848  R1TF =RTF :R1INC =RINC :R1INC1 =RINC1 :CRS1 =CRS :CRL1 =CRL :RS1 =RS :QRS1 =QRS 
8850  R1INC2 =RINC2 :R1INC3 =RINC3 :R1INC4 =RINC4 :R1INC5 =RINC5 :R1INC6 =RINC6 
8852  R1INCFR =RINCFR :R1INCFA =RINCFA :R1FR =RFPR :R1WS =RWS :R1DWELL =RDWELL 
8854  F1TF =FTF :F1INC =FINC :F1INC1 =FINC1 :F1INC2 =FINC2 :F1INC3 =FINC3 
8856  F1INC4 =FINC4 :F1INCFR =FINCFR :F1INCFA =FINCFA :F1FR =FFR :F1WS =FWS 
8858  IF FVS >0 THEN F1VS =9 ELSE F1VS =5
8860  F1DWELL =FDWELL :R1ANG =RANG :S1AJ =SAJ :P1AJ =PAJ :COSET1 =COSET :LFT1 =LFT :GOTO 8982
8862  IF PSET <>2 THEN GOTO 8878
8864  R2TF =RTF :R2INC =RINC :R2INC1 =RINC1 :CRS2 =CRS :CRL2 =CRL :RS2 =RS :QRS2 =QRS 
8866  R2INC2 =RINC2 :R2INC3 =RINC3 :R2INC4 =RINC4 :R2INC5 =RINC5 :R2INC6 =RINC6 
8868  R2INCFR =RINCFR :R2INCFA =RINCFA :R2FR =RFPR :R2WS =RWS :R2DWELL =RDWELL 
8870  F2TF =FTF :F2INC =FINC :F2INC1 =FINC1 :F2INC2 =FINC2 :F2INC3 =FINC3 
8872  F2INC4 =FINC4 :F2INCFR =FINCFR :F2INCFA =FINCFA :F2FR =FFR :F2WS =FWS 
8874  IF FVS >0 THEN F2VS =9 ELSE F2VS =5
8876  F2DWELL =FDWELL :R2ANG =RANG :S2AJ =SAJ :P2AJ =PAJ :COSET2 =COSET :LFT2 =LFT :GOTO 8982
8878  IF PSET <>3 THEN GOTO 8894
8880  R3TF =RTF :R3INC =RINC :R3INC1 =RINC1 :CRS3 =CRS :CRL3 =CRL :RS3 =RS :QRS3 =QRS 
8882  R3INC2 =RINC2 :R3INC3 =RINC3 :R3INC4 =RINC4 :R3INC5 =RINC5 :R3INC6 =RINC6 
8884  R3INCFR =RINCFR :R3INCFA =RINCFA :R3FR =RFPR :R3WS =RWS :R3DWELL =RDWELL 
8886  F3TF =FTF :F3INC =FINC :F3INC1 =FINC1 :F3INC2 =FINC2 :F3INC3 =FINC3 
8888  F3INC4 =FINC4 :F3INCFR =FINCFR :F3INCFA =FINCFA :F3FR =FFR :F3WS =FWS 
8890  IF FVS >0 THEN F3VS =9 ELSE F3VS =5
8892  F3DWELL =FDWELL :R3ANG =RANG :S3AJ =SAJ :P3AJ =PAJ :GOTO 8982
8894  IF PSET <>4 THEN GOTO 8910
8896  R4TF =RTF :R4INC =RINC :R4INC1 =RINC1 :CRS4 =CRS :CRL4 =CRL :RS4 =RS :QRS4 =QRS 
8898  R4INC2 =RINC2 :R4INC3 =RINC3 :R4INC4 =RINC4 :R4INC5 =RINC5 :R4INC6 =RINC6 
8900  R4INCFR =RINCFR :R4INCFA =RINCFA :R4FR =RFPR :R4WS =RWS :R4DWELL =RDWELL 
8902  F4TF =FTF :F4INC =FINC :F4INC1 =FINC1 :F4INC2 =FINC2 :F4INC3 =FINC3 
8904  F4INC4 =FINC4 :F4INCFR =FINCFR :F4INCFA =FINCFA :F4FR =FFR :F4WS =FWS 
8906  IF FVS >0 THEN F4VS =9 ELSE F4VS =5
8908  F4DWELL =FDWELL :R4ANG =RANG :S4AJ =SAJ :P4AJ =PAJ :GOTO 8982
8910  IF PSET =5 THEN CRS5 =CRS :CRL5 =CRL :RS5 =RS :QRS5 =QRS 
8912  IF PSET =6 THEN CRS6 =CRS :CRL6 =CRL :RS6 =RS :QRS6 =QRS 
8914  IF PSET =7 THEN RS7 =RS :QRS7 =QRS 
8916  IF PSET =8 THEN RS8 =RS :QRS8 =QRS 
8918  IF PSET <>9 THEN GOTO 8934
8920  R9TF =RTF :R9INC =RINC :R9INC1 =RINC1 :CRS9 =CRS :CRL9 =CRL :RS9 =RS :QRS9 =QRS 
8922  R9INC2 =RINC2 :R9INC3 =RINC3 :R9INC4 =RINC4 :R9INC5 =RINC5 :R9INC6 =RINC6 
8924  R9INCFR =RINCFR :R9INCFA =RINCFA :R9FR =RFPR :R9WS =RWS :R9DWELL =RDWELL 
8926  F9TF =FTF :F9INC =FINC :F9INC1 =FINC1 :F9INC2 =FINC2 :F9INC3 =FINC3 
8928  F9INC4 =FINC4 :F9INCFR =FINCFR :F9INCFA =FINCFA :F9FR =FFR :F9WS =FWS 
8930  IF FVS >0 THEN F9VS =9 ELSE F9VS =5
8932  F9DWELL =FDWELL :R9ANG =RANG :S9AJ =SAJ :P9AJ =PAJ :GOTO 8982
8934  IF PSET <>10 THEN GOTO 8950
8936  R10TF =RTF :R10INC =RINC :R10INC1 =RINC1 :CRS10 =CRS :CRL10 =CRL :RS10 =RS :QRS10 =QRS 
8938  R10INC2 =RINC2 :R10INC3 =RINC3 :R10INC4 =RINC4 :R10INC5 =RINC5 :R10INC6 =RINC6 
8940  R10INCFR =RINCFR :R10INCFA =RINCFA :R10FR =RFPR :R10WS =RWS :R10DWELL =RDWELL 
8942  F10TF =FTF :F10INC =FINC :F10INC1 =FINC1 :F10INC2 =FINC2 :F10INC3 =FINC3 
8944  F10INC4 =FINC4 :F10INCFR =FINCFR :F10INCFA =FINCFA :F10FR =FFR :F10WS =FWS 
8946  IF FVS >0 THEN F10VS =9 ELSE F10VS =5
8948  F10DWELL =FDWELL :R10ANG =RANG :S10AJ =SAJ :P10AJ =PAJ :GOTO 8982
8950  IF PSET <>11 THEN GOTO 8966
8952  R11TF =RTF :R11INC =RINC :R11INC1 =RINC1 :CRS11 =CRS :CRL11 =CRL :RS11 =RS :QRS11 =QRS 
8954  R11INC2 =RINC2 :R11INC3 =RINC3 :R11INC4 =RINC4 :R11INC5 =RINC5 :R11INC6 =RINC6 
8956  R11INCFR =RINCFR :R11INCFA =RINCFA :R11FR =RFPR :R11WS =RWS :R11DWELL =RDWELL 
8958  F11TF =FTF :F11INC =FINC :F11INC1 =FINC1 :F11INC2 =FINC2 :F11INC3 =FINC3 
8960  F11INC4 =FINC4 :F11INCFR =FINCFR :F11INCFA =FINCFA :F11FR =FFR :F11WS =FWS 
8962  IF FVS >0 THEN F11VS =9 ELSE F11VS =5
8964  F11DWELL =FDWELL :R11ANG =RANG :S11AJ =SAJ :P11AJ =PAJ :GOTO 8982
8966  IF PSET <>12THEN GOTO 8982
8968  R12TF =RTF :R12INC =RINC :R12INC1 =RINC1 :CRS12 =CRS :CRL12 =CRL :RS12 =RS :QRS12 =QRS 
8970  R12INC2 =RINC2 :R12INC3 =RINC3 :R12INC4 =RINC4 :R12INC5 =RINC5 :R12INC6 =RINC6 
8972  R12INCFR =RINCFR :R12INCFA =RINCFA :R12FR =RFPR :R12WS =RWS :R12DWELL =RDWELL 
8974  F12TF =FTF :F12INC =FINC :F12INC1 =FINC1 :F12INC2 =FINC2 :F12INC3 =FINC3 
8976  F12INC4 =FINC4 :F12INCFR =FINCFR :F12INCFA =FINCFA :F12FR =FFR :F12WS =FWS 
8978  IF FVS >0 THEN F12VS =9 ELSE F12VS =5
8980  F12DWELL =FDWELL :R12ANG =RANG :S12AJ =SAJ :P12AJ =PAJ 
8982  ESCENB =1:ENDPROC 
9000  UERR 100 'TVM DRIVE '
9001  UERR 101 'HYDRAULIC PRESSURE LOW'
9002  UERR 102 'HYDROSTATIC PRESSURE LOW'
9003  UERR 103 'CARRIAGE LUBE PRESSURE LOW'
9004  UERR 104 'HYDRAULIC FILTER BLOCKED'
9005  UERR 105 'HYDROSTATIC FILTER BLOCKED'
9006  UERR 106 'CARRIAGE LUBE FILTER BLOCKED'
9007  UERR 107 'CARRIAGE LUBE LEVEL LOW'
9008  UERR 108 'SPINDLE LUBE FILTER BLOCKED'
9009  UERR 109 'SPINDLE LUBE LEVEL LOW'
9010  UERR 110 'WHEELSPEED CONTROLLER '
9011  UERR 111 'SPINDLE LUBE NOT RETURNING'
9012  UERR 112 'CHECK SIFAM LOW SPEED O/P'
9013  UERR 113 'CHECK SIFAM HIGH SPEED O/P'
9014  UERR 114 'SPINDLE LUBE RETURN FLOAT SWITCH NOT RESET'
9015  UERR 115 'WHEEL BELT GUARD OPEN'
9016  UERR 116 'WHEEL OVERSPEED, DEPRESS CANCEL (//) SOFT SWITCH TO CLEAR'
9017  UERR 117 'WHEEL UNDERSPEED, DEPRESS CANCEL (//) SOFT SWITCH TO CLEAR'
9018  UERR 118 'DRESSER LUBE '
9019  UERR 119 'FOOT STOCK HAS NOT ADVANCED'
9020  UERR 120 'FOOTSTOCK IS NOT ADVANCED'
9021  UERR 121 'WORKREST NOT IN CORRECT POSITION'
9022  UERR 122 'WAIT, WHEEL STILL RUNNING'
9023  UERR 123 'CLOSE REAR GUARDS AND ADVANCE REAR SHOTBOLT'
9024  UERR 124 'ADVANCE GUARD AND SHOTBOLT'
9025  UERR 125 'ADVANCE SHOTBOLT'
9026  UERR 126 'WORKREST NOT ADVANCED'
9027  UERR 127 'WORKREST NOT RETRACTED'
9028  UERR 128 'REAR GUARD OPEN'
9029  UERR 129 'GUARD OVERRIDE SELECTED'
9030  UERR 130 'TVM DRIVE'
9031  UERR 131 'HYDROSTATIC PRESSURE LOW'
9032  UERR 132 'CARRIAGE LUBE PRESSURE LOW'
9033  UERR 133 'SHUT SLIDING DOOR'
9034  UERR 134 'RUN THE GRINDING WHEEL'
9035  UERR 135 'GRINDING WHEEL NOT UP TO SPEED'
9036  UERR 136 'ADVANCE GUARD & SHOTBOLT OR SELECT GUARD DEFEAT'
9037  UERR 137 'MASTER STOP PUSH BUTTON IS PRESSED'
9038  UERR 138 'WHEELBASE AT EXTREME FRONT OR BACK LIMIT'
9039  UERR 139 'CARRIAGE AT EXTREME LEFT LIMIT'
9040  UERR 140 'CARRIAGE AT EXTREME RIGHT LIMIT'
9041  UERR 141 'CHECK MOTOR OVERLOADS & THERMISTORS'
9042  UERR 142 'RETRACT WORKREST'
9043  UERR 143 'RETURN TO LOAD POSITION'
9044  UERR 144 'RETURN TO LOAD POSITION OR STOP WHEEL'
9045  UERR 145 'RETRACT SHOTBOLT'
9046  UERR 146 'CHECK FOOTSTOCK ADVANCE LIMIT SWITCH'
9047  UERR 147 'WAIT - WHEEL BALANCING IN PROGRESS'
9048  UERR 148 'NOTE - WHEEL IS OUT OF BALANCE'
9049  UERR 149 'DRESSER COOLANT FLOW SWITCH NOT RESET'
9050  UERR 150 'SHOTBOLT NOT ADVANCED'
9051  UERR 151 'INCORRECT SHAFT SELECTION, NO CYCLE START'
9052  UERR 152 'ADVANCE REAR SHOTBOLT'
9053  UERR 153 'WHEEL NOT AT WHEEL CHANGE POSITION'
9054  UERR 154 'ADVANCE FOOTSTOCK'
9055  UERR 155 'DRESSER COOLANT NOT FLOWING'
9056  UERR 156 'DIAMOND ROLLER DRIVE - CHECK DRIVE BELT'
9057  UERR 157 'DIAMOND ROLLER DRIVE PROXIMITY SWITCH HAS NOT RESET'
9058  UERR 158 'MACHINE COOLANT NOT FLOWING'
9059  UERR 159 'MACHINE NOT READY - RESTART CYCLE'
9060  UERR 160 'DIAMOND ROLLER RUNNING FORWARD NOT CONFIRMED'
9061  UERR 161 'SLIDING DOOR OPENED AWAY FROM LOAD POSITION'
9062  UERR 162 'FOOTSTOCK HAS OVER ADVANCED'
9063  UERR 163 'WORKDRIVE LOCATION FAULT-RETRACT FOOTSTOCK TO CLEAR'
9064  UERR 164 'CHUCK HAS NOT CLAMPED'
9065  UERR 165 'CHUCK HAS NOT UNCLAMPED'
9066  UERR 166 'RETRACT FOOTSTOCK'
9067  UERR 167 'UNCLAMP CHUCK'
9068  UERR 168 'OPEN WORK TABLE GUARDS'
9069  UERR 169 'LOADER ARM NOT AT PARK POSITION'
9070  UERR 170 'OPEN GRIPPER FINGERS'
9071  UERR 171 'FINISH CONVEYOR OUT OF POSITION'
9072  UERR 172 'ROUGH CONVEYOR OUT OF POSITION'
9073  UERR 173 'UNLOAD FINISH CONVEYOR'
9074  UERR 174 'UNLOAD MACHINE'
9075  UERR 175 'LOADER ARM HAS NOT REACHED MACHINE. CYCLE STOPPED.'
9076  UERR 176 'LOADER ARM HAS NOT REACHED PARK POSITION. CYCLE STOPPED.'
9077  UERR 177 'LOADER ARM HAS NOT REACHED PICK UP POSITION. CYCLE STOPPED.'
9078  UERR 178 'GRIPPER FINGER ONLY OPERATES AT MACHINE OR PICK UP POSITION'
9079  UERR 179 'GRIPPER FINGER NOT CLOSED, CYCLE STOPPED'
9080  UERR 180 'GRIPPER FINGER NOT OPEN, CYCLE STOPPED'
9081  UERR 181 'LOAD CONVEYOR INDEX FAILED, CYCLE STOPPED'
9082  UERR 182 'LOADER MUST BE AT PARK POSITION TO INDEX CONVEYORS'
9083  UERR 183 'RELEASE AND RE-APPLY PUSH BUTTON FOR NEXT ROUGH CONVEYOR INDEX'
9084  UERR 184 'UNLOAD CONVEYOR INDEX FAILED, CYCLE STOPPED'
9085  UERR 185 'RELEASE AND RE-APPLY PUSH BUTTON FOR NEXT FINISH CONVEYOR INDEX'
9086  UERR 186 'LOCK LOADER'
9087  UERR 187 'OPEN GRIPPER FINGER OR REMOVE PART IN PICK UP STATION'
9088  UERR 188 'OPEN GRIPPER FINGER OR UNLOAD MACHINE'
9089  UERR 189 'WORK DRIVE LOCATION FAULT-RETRACT WORKREST TO CLEAR'
9090  UERR 190 'MACHINE COOLANT FLOW SWITCH NOT RESET'
9091  UERR 191 'RETURN LOAD ARM TO PICKUP POSITION'
9092  UERR 192 'INDEX FINISH CONVEYOR TO CLEAR DELIVERY POSITION'
9093  UERR 193 'AIR LUBE LEVEL LOW'
9094  UERR 194 'CHECK HYDRAULIC, HYDROSTATIC OR CARRIAGE LUBE FILTERS'
9095  UERR 195 'ADVANCE WORKREST'
9096  UERR 196 'CHECK WORKHEAD POSITION OR DRIVER LOCATION PROXIMITY SWITCH'
9097  UERR 197 'LOAD CONVEYOR EMPTY, CYCLE STOPPED'
9098  UERR 198 'LOAD CONVEYOR SAFETY FLAP OPERATED, CHECK SHAFT'
9099  UERR 199 'AIR PRESSURE FAILED'
9100  UERR 200 'ADVANCE GUARD'
9101  UERR 201 'ADVANCE GUARD OR SELECT GUARD DEFEAT'
9102  UERR 202 'WORK LOCATE CONDITIONS INCORRECT'
9103  UERR 203 'CHECK SIZE FAULT, PRESS CANCEL (//) SOFT SWITCH TO CLEAR'
9104  UERR 204 'MACHINE GUARD HAS NOT ADVANCED'
9105  UERR 205 'LOADER AUTO NOT SELECTED'
9106  UERR 206 'MACHINE GUARD HAS NOT RETRACTED'
9107  UERR 207 'CARRIAGE NOT AT SAFE POSITION' 
9108  UERR 208 'WORKREST SLIDE NOT AT LEFT'
9109  UERR 209 'WORKREST SLIDE NOT AT RIGHT'
9110  UERR 210 'GAUGE NOT RETRACTED'
9111  UERR 211 'HYDRAULIC/HYDROSTATIC OVER PRESSURE'
9112  UERR 212 'GAUGE FAULT, PRESS CANCEL (//) SOFT SWITCH TO CLEAR'
9113  UERR 213 'LOCATION NOT REQUIRED TO DRY CYCLE'
9114  UERR 214 'FOOTSTOCK HAS NOT RETRACTED'
9115  UERR 215 'GENERAL FAULT, PRESS CANCEL (//) SOFT SWITCH TO CLEAR'
9116  UERR 216 'SELECT KEY SWITCH TO ALLOW MANUAL CONTROL'
9117  UERR 217 'SHAFT SELECTION NOT CONFIRMED'
9118  UERR 218 'COMPONENT UNDERSIZE, CHECK SHAFT'
9119  UERR 219 'LOADER NOT CLEAR OF MACHINE'
9200  UERR 220 'HYDRAULIC/HYDROSTATIC PRESSURE LOW'
9201  UERR 221 'CLOSE GUARDS WITH CYCLE START PUSH BUTTONS'
9202  UERR 222 'SELECT GUARD OVERRIDE'
9203  UERR 223 'HYDRAULIC/HYDROSTATIC LUBE TANK LEVEL LOW'
9204  UERR 224 'MAIN SPINDLE LUBE PRESSURE LOW'
9205  UERR 225 'AUXILLIARY SPINDLE LUBE PRESSURE LOW'
9206  UERR 226 'AUXILLIARY SPINDLE AIR PRESSURE FAIL'
9207  UERR 227 'LOCATE WORK PROXIMITY SWITCH FAILED ON'
9208  UERR 228 'SPINDLE SELECTED DOES NOT MATCH SPINDLE FITTED'
9209  UERR 229 'WHEELHEAD NOT WITNESSED SWIVEL LEFT'
9210  UERR 230 'WHEELHEAD NOT WITNESSED SWIVEL RIGHT'
9211  UERR 231 'WHEELHEAD MUST BE SWIVELLED RIGHT TO START CYCLE'
9212  UERR 232 'SWIVEL SLIDE LUBE FAULT, CHECK LUBE ADEQUATE PRESSURE SWITCH'
9213  UERR 233 'WORKREST INHIBITED IN 3 OR 4 CYLINDER CYCLE'
9214  UERR 234 'SERVO MOTORS POWERED UP WITH GUARDS OPEN'
9215  UERR 235 'CYCLE STOP PUSH BUTTON DEPRESSED'
9216  UERR 236 'WHEELFEED CONTACTOR NOT DE-ENERGISED, CHECK CONTACTOR 776'
9217  UERR 237 'HYDRAULIC/HYDROSTATIC OIL LEVEL HIGH'
9218  UERR 238 'NEXT LOADER CYCLE STOPPED'
9219  UERR 239 'HYDRAULIC/HYDROSTATIC OIL OVER TEMPERATURE'
9220  UERR 240 'SELECT KEY SWITCH TO ALLOW AUTO CONTROL'
9221  UERR 241 'COMPONENT CHECK REQUIRED'
9222  UERR 242 'WHEEL BALANCER'
9223  UERR 243 'DRESSER LUBE LEVEL LOW'
9224  UERR 244 'WHEEL BALANCER FILTER BLOCKED'
9225  UERR 245 'LOADER OIL PRESSURE MAXIMUM'
9226  UERR 246 'LOADER OIL PRESSURE MINIMUM'
9227  UERR 247 'LOADER OIL FILTER "1A" BLOCKED'
9228  UERR 248 'LOADER OIL FILTER "1B" BLOCKED'
9229  UERR 249 'DRESSER NOT AT START POSITION'
9230  UERR 250 'WHEEL SPINDLE LUBE OVER TEMPERATURE'
9231  UERR 251 'CARRIAGE LUBE OVER TEMPERATURE'
9232  UERR 252 'HYDRAULIC LUBE FILLER FILTER BLOCKED'
9233  UERR 253 'WHEEL SPINDLE LUBE FILLER FILTER BLOCKED'
9234  UERR 254 'CARRIAGE LUBE FILLER FILTER BLOCKED'
9235  UERR 255 'WARNING: HYDRAULIC OIL APPROACHING LOW LEVEL'
9236  UERR 256 'LOAD CONTROL RELAY TRIPPED, PRESS CANCEL KEY (//) TO RESET'
9237  UERR 257 'CAMSHAFT ROTATION OVERSPEED'
9238  UERR 258 'CONTROL COOLANT NOT ON'
9239  UERR 259 'WARNING: AUXILLIARY COOLANT FEED TANK HIGH LEVEL'
9240  UERR 260 'FOOTSTOCK NOT ADVANCED, CHECK CORRECT SHAFT IS LOADED'
9241  UERR 261 'SELECT GAUGE AUTO'
9242  UERR 262 'HEADSTOCK ANGLE ERROR'
9243  UERR 263 'CHECK CIRCUIT BREAKERS'
9244  UERR 264 'HYDROSTATIC BEARING PRESSURE LOW, WHEEL STOPPED'
9245  UERR 265 'CABINET 2 OVER TEMPERATURE'
9246  UERR 266 'CABINET 3 OVER TEMPERATURE'
9247  UERR 267 'WHEEL DRIVE CONTROLLER OVER TEMPERATURE'
9248  UERR 268 'WHEEL GUARD OPEN'
9249  UERR 269 'COOLANT TANK LOW LEVEL'
9250  UERR 270 'SHAFT OVERSIZE - CHECK COMPONENT'
9251  UERR 271 'CHECK TRANSFORMER OVERLOADS'
9252  UERR 272 'CHECK 24 VOLTS DC OUTPUTS SUPPLY'
9253  UERR 273 'CHECK 24 VOLTS DC INPUTS SUPPLY'
9254  UERR 274 'CARRIAGE LUBE'
9255  UERR 275 'WORKREST LUBE'
9256  UERR 276 'CHECK WHEEL GUARD BOLTS'
9257  UERR 277 'SPINDLE LUBE LOW LEVEL WARNING'
9258  UERR 278 'CARRIAGE LUBE LOW LEVEL WARNING'
9259  UERR 279 'SELECT MACHINE AND LOADER AUTO KEY'
9260  UERR 280 'ACCUMULATOR GAS PRESSURE LOW'
9261  UERR 281 'ACCUMULATOR VALVE CLOSED'
9262  UERR 282 'HYDRAULIC/HYDROSTATIC OIL APPROACHING OVER TEMPERATURE'
9263  UERR 283 'AIR CONDITIONER SUPPLY FAILED'
9264  UERR 284 'AIR LUBE PRESSURE FAILED'
9265  UERR 285 'RELEASE EMERGENCY STOP PB AND/OR DEPRESS MACHINE RESET PB'
9266  UERR 286 'CHECK TRANSFORMER SECONDARY OVERLOADS'
9267  UERR 287 'CHECK SOLENOID OVERLOADS'
9268  UERR 288 'CHECK 24V D.C. CONTROL SOLENOIDS'
9269  UERR 289 'MAINS SUPPLY OVER VOLTAGE'
9270  UERR 290 'MAINS SUPPLY UNDER VOLTAGE'
9271  UERR 291 'MAINS SUPPLY OVER FREQUENCY'
9272  UERR 292 'MAINS SUPPLY UNDER FREQUENCY'
9273  UERR 293 'PHASE SEQUENCE FAULT'
9274  UERR 294 'MACHINE NOT IN USE, MACHINE POWERED DOWN'
9275  UERR 295 'RETURN TO MANUAL CONTROL SOFT KEY PAGE'
9276  UERR 296 'WHEEL OVERSPEED- ISOLATE MACHINE TO CLEAR'
9277  UERR 297 'WHEEL UNDERSPEED- ISOLATE MACHINE TO CLEAR'
9278  UERR 298 'RETRACT LOCATION KEY'
9279  UERR 299 'DEPRESS PHASE SEQUENCE PB'
9299  UERR 319 'WORKHEAD SYNCHRONISATION ERROR'
9300  UERR 400 'UERR 400 THRU 499 (LINES 9300/9399) RESERVED FOR LANDIS TOOL CO'
9400  UERR 700 'PARAMETER SET 1 SWINGS WHEELHEAD CLOCKWISE VIEWED FROM TOP'
9401  UERR 701 'PARAMETER SET 2 SWINGS WHEELHEAD COUNTER CLOCKWISE VIEWED FROM TOP'
9402  UERR 702 'CARRIAGE MOVEMENT DISABLED'
9403  UERR 702 'NOT CLEAR TO TRAVERSE OR GUARD NOT CLOSED'
9404  UERR 703 'REAR GUARD OPEN, WHEELHEAD NOT SAFE TO MOVE'
9405  UERR 704 '* FAULT: CARRIAGE POSITION DEMAND OUT OF RANGE *'
9406  UERR 705 '* FAULT: PART CLEARANCE RADIUS TOO SMALL *'
9407  UERR 706 'COMPENSATION CORRECTION IS APPLIED AS A PERCENTAGE OF'
9408  UERR 706 'FEED, NEGATIVE COMPENSATION UNDER COMPENSATES'
9409  UERR 706 'THAT IS, MAKES PART GROW LARGER'
9410  UERR 707 'WHEEL RECIPROCATION STOPPED OUT OF POSITION'
9411  UERR 708 'NOT SAFE TO POWER UP SERVO MOTORS, CHECK MACHINE GUARDS'
9412  UERR 710 'RETRACT GAUGE TO CONTINUE CYCLE'
9413  UERR 711 'ADVANCE GAUGE TO CONTINUE CYCLE'
9414  UERR 712 '* WARNING: WAITING FOR DRESS COMPLETION'
9416  UERR 714 '* WARNING: DRESS CYCLE ABORTED'
9417  UERR 715 'SECURITY SWITCH NOT IN PARAMETER CHANGE POSITION'
9418  UERR 716 '** WARNING: GUARD OVERRIDE SELECTED **'
9419  UERR 717 'FAULT: WORKHEAD NOT AT LOAD POSITION'
9420  UERR 718 'NOTE: L/H CYCLE START PB MUST BE PRESSED SIMULTANEOUSLY'
9421  UERR 719 'NOTE:DIAMOND BAR MUST BE CLEANED BEFORE RETRACTING'
9422  UERR 720 'FAULT:SHAFT NOT LOADED CORRECTLY,CYCLE ABORTED'
9423  UERR 721 'VIEWED DATA CAN BE PRINTED AT THE SERIAL PORT'
9424  UERR 721 'CONNECT PRINTER TO SERIAL PORT AND SELECT PRINT ON'
9425  UERR 722 'NOTE: DRESS LUBE FAILURE, DRESS LUBE CYCLE MUST BE INITIATED'
9426  UERR 723 '** WARNING: ZERO WHEEL SPEED SET'
9500 DEFPROC VIEWDATA
9501  PROC CLEAR:PROC BLANK
9502  PROC PRINTKEY
9505  MSG 721
9510  UKEY 1'PROCESS''DATA''''PRODATA'
9514  UKEY 3'OIL''DATA''''OILDATA'
9515  UKEY 4'ELECTRICS''DATA''''ELECDATA'
9516  UKEY 6'TOOLING''DATA''''TOOLDATA'
9520  UKEY 12'RESET''PROCESS''DATA''RPRODATA'
9524  UKEY 14'''''''CANCEL'
9530  ENDPROC 
9540 DEFPROC RPRODATA
9541  IF BIT 4069>0 THEN PARTCT =0:RESB 4069:RESB 4070:RESB 4071:ENDPROC 
9542  IF BIT 3776=1 THEN PARTCT =0:ENDPROC 
9544  MSG 715:ENDPROC 
9550 DEFPROC PRODATA:PROC PRINTER:PRINT 
9552  PRINT 'LANDIS CNCCAM GRINDER SERIAL NO.          :';SERIAL 
9553  PRINT 'SETUP ON SHAFT                            :';GSTYP 
9554  PRINT 'TOTAL PARTS GROUND                        :';TOPARTCT 
9556  PRINT 'TOTAL WHEEL CHANGES                       :';TOWCHCT 
9557  PRINT 'TOTAL DRESSES                             :';TOTDRCT 
9558  PRINT 'PARTS GROUND SINCE LAST COUNT RESET       :';PARTCT 
9560  PRINT 'LAST PART CYCLE TIME             (SECONDS):';CTIME /10
9562  PRINT 'NUMBER OF PARTS BEFORE WHEEL CHANGE       :';WLEFT 
9564  IF DFLAG =0 THEN PROC WV
9568  PRINT 'WHEEL INNER EDGE TO Z AXIS DATUM (ZDAT)   :';ZDAT 
9570  PRINT :ENDPROC 
9580 DEFPROC TOOLDATA:PROC PRINTER:PRINT 
9581  PRINT 'TOOLING DIAGRAM NO.    MW           MACHINE SERIAL';SERIAL 
9582  PRINT 'LANDIS NO. CUSTOMER NO.  DESCRIPTION '
9584  PRINT '   GRINDING WHEEL'
9586  PRINT '   DIAMOND WHEEL DUAL TRACK'
9588  PRINT '   DIAMOND WHEEL SINGLE TRACK'
9590  PRINT '   SETTING BAR WORKRESTS'
9592  PRINT '   SETTING BAR MASTER WORKRESTS'
9594  PRINT '   WORKREST LOWER SHOE'
9596  PRINT '   WORKREST UPPER SHOE'
9598  PRINT '   WORKCENTER FOOTSTOCK'
9600  PRINT '   WORKCENTER HEADSTOCK'
9602  PRINT '   ROUGH FACE DRESS DIAMOND'
9604  PRINT '   WORKDRIVER PEG'
9606  PRINT '   WORKDRIVER BLOCK'
9608  ENDPROC 
9620 DEFPROC OILDATA:PROC PRINTER:PRINT 
9622  PRINT 'HYDRAULIC DIAGRAM NO.  HY002244     MACHINE SERIAL';SERIAL 
9624  PRINT 'LUBE. DIAGRAM NO.      HY002245'
9625  PRINT 'PNEUMATIC DIAGRAM NO.  HY002246'
9626  PRINT 'COOLANT DIAGRAM NO.    HY002247'
9630  PRINT 'HYDRAULIC/HYDROSTATIC  BP ENERGOL HLP32(ISO)/MOBIL DTE24'
9631  PRINT ' CUSTOMER NO. 1WC/32   FILTER NO.'
9635  PRINT 'WHEELSPINDLE LUBE      BP ENERGOL HLP10(ISO)/MOBIL VELOCITE 6'
9636  PRINT ' CUSTOMER NO. 1WA/10   FILTER NO.'
9640  PRINT 'CARRIAGE WAYS LUBE     SUN OIL CO. WAYLUBE 80'
9641  PRINT ' CUSTOMER NO. SW/L     FILTER NO.'
9645  PRINT 'GEARBOX OIL            MOBIL GEAR 627'
9650  PRINT 'GREASE NIPPLES         MOBIL PLEX 48'
9655  PRINT 'CHANGE OIL & FILTERS, CLEAN TANKS & MAGNETIC PLUGS 6 MONTHLY'
9657  PRINT 'GIVE GREASE NIPPLES 2 SHOTS AT 3 MONTHLY INTERVALS.'
9660  ENDPROC 
9670 DEFPROC ELECDATA:PROC PRINTER:PRINT 
9672  PRINT 'ELECTRICAL DIAGRAM NO. EY01121         MACHINE SERIAL';SERIAL 
9690  ENDPROC 
9850 DEFPROC QRUN:IF BIT 1022 =1 THEN PROC SERVON
9852  QV =1800
9854  QP =0
9856  IF QST >2 THEN GOTO 9856
9858  QP =720
9860  IF QST >2 THEN GOTO 9860
9862  GOTO 9854
9864  ENDPROC 
9900 DEFPROC ZRUN:ZA =200:XV =10:IF BIT 1022=1 THEN PROC SERVON:XP =0 ELSE XP =0
9901  ZV =166
9902  ZV =100
9904  IF ZST >2 THEN GOTO 9904 ELSE DELAY 2:ZP =0
9906  IF ZST >2 THEN GOTO 9906 ELSE DELAY 2:ZP =300:GOTO 9904:ENDPROC 
9910 DEFPROC SRUN:IF BIT 1022=1 THEN PROC SERVON
9911  PROC SPHOLD:SV =360
9912  IF SST >2 THEN GOTO 9912 ELSE DELAY 2:SP =SP +360
9914  IF SST >2 THEN GOTO 9914 ELSE DELAY 2:SP =SP -360:GOTO 9912
9916  ENDPROC 
9920 DEFPROC XRUN:IF BIT 1022=1 THEN PROC SERVON
9921  XV =20
9922  IF XST >2 THEN GOTO 9922 ELSE DELAY 2:XP =0
9924  IF XST >2 THEN GOTO 9924 ELSE DELAY 2:XP =-100:GOTO 9922:ENDPROC 
9930 DEFPROC RIPPLE:SV =30
9932  PRINT 'WORKHEAD TACHO RIPPLE TEST'
9934  SST =5:PRINT 'WORKHEAD RPM';SV /6:DELAY 4
9936  IF SV >719 THEN GOTO 9940
9938  SV =SV +30:GOTO 9934
9940  SV =180:SST =5:DELAY 2:SST =2
9942  PRINT 'RIPPLE TEST COMPLETE':ENDPROC 
10000 DEFPROC SPINID:IF BIT 40=1 THEN ENDPROC 
10002  RESB 1015:RESB 1016:RESB 1017:RESB 1018:RESB 1019
10003  IF SPIN =0 THEN SETB 1015
10005  IF SPIN =1 THEN SETB 1016
10007  IF SPIN =2 THEN SETB 1017
10010  IF SPIN =3 THEN SETB 1018
10013  IF SPIN =4 THEN SETB 1019
10015  ENDPROC 
10020 DEFPROC SPIN0:ESCENB =0:SPIN =0:PROC SPINX:ENDPROC 
10023 DEFPROC SPIN1:ESCENB =0:SPIN =1:PROC SPINX:ENDPROC 
10025 DEFPROC SPIN2:ESCENB =0:SPIN =2:PROC SPINX:ENDPROC 
10027 DEFPROC SPIN3:ESCENB =0:SPIN =3:PROC SPINX:ENDPROC 
10030 DEFPROC SPIN4:ESCENB =0:SPIN =4:PROC SPINX:ENDPROC 
10037 DEFPROC SPINX:PROC SETUP:PROC WSMSG:ESCENB =1:ENDPROC 
10050 DEFPROC DDATSET:RESB 954
10053  DDATC =DDAT :PROC AXSTOP:PRINT 
10055  PRINT 'DIAMOND MUST BE CHANGED / ADJUSTED'
10056  PRINT 'DIAMOND DATUM HAS BEEN RESET TO   ';DDATC :GOTO 10055
10057  ENDPROC 
10080 DEFPROC SDPAR
10083  GPVAR 'ROUGH DEPTH OF CUT               ',RDFD ,0.1,0
10085  GPVAR 'FINISH DEPTH OF CUT              ',DFD ,0.1,0
10087  ENDPROC 
10100 DEFPROC SELFADFR 
10102  IF BIT 4041=0 THEN RV =FADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10104  IF XST <>7 THEN XVARI =LBSET ELSE XVARI =PSET 
10106  IF XVARI =1 THEN RV =FADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10107  IF XVARI =2 THEN RV =F2ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10108  IF XVARI =3 THEN RV =F3ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10109  IF XVARI =4 THEN RV =F4ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10110  IF XVARI =5 THEN RV =F5ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10111  IF XVARI =6 THEN RV =F6ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10112  IF XVARI =7 THEN RV =F7ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10113  IF XVARI =8 THEN RV =F8ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10114  IF XVARI =9 THEN RV =F9ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10115  IF XVARI =10 THEN RV =F10ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10116  IF XVARI =11 THEN RV =F11ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10117  IF XVARI =12 THEN RV =F12ADFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10120 DEFPROC SELFADFR2 
10122  IF BIT 4041=0 THEN RV =FADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10124  IF XST <>7 THEN XVARI =LBSET ELSE XVARI =PSET 
10126  IF XVARI =1 THEN RV =FADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10127  IF XVARI =2 THEN RV =F2ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10128  IF XVARI =3 THEN RV =F3ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10129  IF XVARI =4 THEN RV =F4ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10130  IF XVARI =5 THEN RV =F5ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10131  IF XVARI =6 THEN RV =F6ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10132  IF XVARI =7 THEN RV =F7ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10133  IF XVARI =8 THEN RV =F8ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10134  IF XVARI =9 THEN RV =F9ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10135  IF XVARI =10 THEN RV =F10ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10136  IF XVARI =11 THEN RV =F11ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10137  IF XVARI =12 THEN RV =F12ADFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10140 DEFPROC SELFRDFR 
10141  IF DWLCK >0.1 THEN SETB 3796:DELAY 3
10142  IF BIT 4041=0 THEN RV =FRDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10144  IF XST <>7 THEN XVARI =LBSET ELSE XVARI =PSET 
10146  IF XVARI =1 THEN RV =FRDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10147  IF XVARI =2 THEN RV =F2RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10148  IF XVARI =3 THEN RV =F3RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10149  IF XVARI =4 THEN RV =F4RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10150  IF XVARI =5 THEN RV =F5RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10151  IF XVARI =6 THEN RV =F6RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10152  IF XVARI =7 THEN RV =F7RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10153  IF XVARI =8 THEN RV =F8RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10154  IF XVARI =9 THEN RV =F9RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10155  IF XVARI =10 THEN RV =F10RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10156  IF XVARI =11 THEN RV =F11RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10157  IF XVARI =12 THEN RV =F12RDFR *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10160 DEFPROC SELFRDFR2 
10162  IF BIT 4041=0 THEN RV =FRDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10164  IF XST <>7 THEN XVARI =LBSET ELSE XVARI =PSET 
10166  IF XVARI =1 THEN RV =FRDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10167  IF XVARI =2 THEN RV =F2RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10168  IF XVARI =3 THEN RV =F3RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10169  IF XVARI =4 THEN RV =F4RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10170  IF XVARI =5 THEN RV =F5RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10171  IF XVARI =6 THEN RV =F6RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10172  IF XVARI =7 THEN RV =F7RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10173  IF XVARI =8 THEN RV =F8RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10174  IF XVARI =9 THEN RV =F9RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10175  IF XVARI =10 THEN RV =F10RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10176  IF XVARI =11 THEN RV =F11RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10177  IF XVARI =12 THEN RV =F12RDFR2 *DTCAL *0.9*WRMAX /WRAC :ENDPROC 
10200 DEFPROC SETFDFR
10222  GPVAR 'SET 1 FINISH ADVANCE RATE  ',FADFR ,6000/DTCAL ,0
10224  IF XVARI =1 THEN GPVAR 'SET 1 FINISH ADVANCE RADIUS RATE',FADFR2 ,6000/DTCAL ,0
10226  GPVAR 'SET 1 FINISH RETRACT RATE  ',FRDFR ,6000/DTCAL ,0
10228  IF XVARI =1 THEN GPVAR 'SET 1 FINISH RETRACT RADIUS RATE',FRDFR2 ,6000/DTCAL ,0
10230  GPVAR 'SET 2 FINISH ADVANCE RATE  ',F2ADFR ,6000/DTCAL ,0
10232  IF XVARI =1 THEN GPVAR 'SET 2 FINISH ADVANCE RADIUS RATE',F2ADFR2 ,6000/DTCAL ,0
10234  GPVAR 'SET 2 FINISH RETRACT RATE  ',F2RDFR ,6000/DTCAL ,0
10236  IF XVARI =1 THEN GPVAR 'SET 2 FINISH RETRACT RADIUS RATE',F2RDFR2 ,6000/DTCAL ,0
10238  GPVAR 'SET 3 FINISH ADVANCE RATE  ',F3ADFR ,6000/DTCAL ,0
10240  IF XVARI =1 THEN GPVAR 'SET 3 FINISH ADVANCE RADIUS RATE',F3ADFR2 ,6000/DTCAL ,0
10242  GPVAR 'SET 3 FINISH RETRACT RATE  ',F3RDFR ,6000/DTCAL ,0
10244  IF XVARI =1 THEN GPVAR 'SET 3 FINISH RETRACT RADIUS RATE',F3RDFR2 ,6000/DTCAL ,0
10246  GPVAR 'SET 4 FINISH ADVANCE RATE  ',F4ADFR ,6000/DTCAL ,0
10248  IF XVARI =1 THEN GPVAR 'SET 4 FINISH ADVANCE RADIUS RATE',F4ADFR2 ,6000/DTCAL ,0
10250  GPVAR 'SET 4 FINISH RETRACT RATE  ',F4RDFR ,6000/DTCAL ,0
10252  IF XVARI =1 THEN GPVAR 'SET 4 FINISH RETRACT RADIUS RATE',F4RDFR2 ,6000/DTCAL ,0
10254  GPVAR 'SET 5 FINISH ADVANCE RATE  ',F5ADFR ,6000/DTCAL ,0
10256  IF XVARI =1 THEN GPVAR 'SET 5 FINISH ADVANCE RADIUS RATE',F5ADFR2 ,6000/DTCAL ,0
10258  GPVAR 'SET 5 FINISH RETRACT RATE  ',F5RDFR ,6000/DTCAL ,0
10260  IF XVARI =1 THEN GPVAR 'SET 5 FINISH RETRACT RADIUS RATE',F5RDFR2 ,6000/DTCAL ,0
10262  GPVAR 'SET 6 FINISH ADVANCE RATE  ',F6ADFR ,6000/DTCAL ,0
10264  IF XVARI =1 THEN GPVAR 'SET 6 FINISH ADVANCE RADIUS RATE',F6ADFR2 ,6000/DTCAL ,0
10266  GPVAR 'SET 6 FINISH RETRACT RATE  ',F6RDFR ,6000/DTCAL ,0
10268  IF XVARI =1 THEN GPVAR 'SET 6 FINISH RETRACT RADIUS RATE',F6RDFR2 ,6000/DTCAL ,0
10270  GPVAR 'SET 7 FINISH ADVANCE RATE  ',F7ADFR ,6000/DTCAL ,0
10272  IF XVARI =1 THEN GPVAR 'SET 7 FINISH ADVANCE RADIUS RATE',F7ADFR2 ,6000/DTCAL ,0
10274  GPVAR 'SET 7 FINISH RETRACT RATE  ',F7RDFR ,6000/DTCAL ,0
10276  IF XVARI =1 THEN GPVAR 'SET 7 FINISH RETRACT RADIUS RATE',F7RDFR2 ,6000/DTCAL ,0
10278  GPVAR 'SET 8 FINISH ADVANCE RATE  ',F8ADFR ,6000/DTCAL ,0
10280  IF XVARI =1 THEN GPVAR 'SET 8 FINISH ADVANCE RADIUS RATE',F8ADFR2 ,6000/DTCAL ,0
10282  GPVAR 'SET 8 FINISH RETRACT RATE  ',F8RDFR ,6000/DTCAL ,0
10284  IF XVARI =1 THEN GPVAR 'SET 8 FINISH RETRACT RADIUS RATE',F8RDFR2 ,6000/DTCAL ,0
10286  GPVAR 'SET 9 FINISH ADVANCE RATE  ',F9ADFR ,6000/DTCAL ,0
10288  IF XVARI =1 THEN GPVAR 'SET 9 FINISH ADVANCE RADIUS RATE',F9ADFR2 ,6000/DTCAL ,0
10290  GPVAR 'SET 9 FINISH RETRACT RATE  ',F9RDFR ,6000/DTCAL ,0
10292  IF XVARI =1 THEN GPVAR 'SET 9 FINISH RETRACT RADIUS RATE',F9RDFR2 ,6000/DTCAL ,0
10294  GPVAR 'SET 10 FINISH ADVANCE RATE  ',F10ADFR ,6000/DTCAL ,0
10296  IF XVARI =1 THEN GPVAR 'SET 10 FINISH ADVANCE RADIUS RATE',F10ADFR2 ,6000/DTCAL ,0
10298  GPVAR 'SET 10 FINISH RETRACT RATE  ',F10RDFR ,6000/DTCAL ,0
10300  IF XVARI =1 THEN GPVAR 'SET 10 FINISH RETRACT RADIUS RATE',F10RDFR2 ,6000/DTCAL ,0
10302  GPVAR 'SET 11 FINISH ADVANCE RATE  ',F11ADFR ,6000/DTCAL ,0
10304  IF XVARI =1 THEN GPVAR 'SET 11 FINISH ADVANCE RADIUS RATE',F11ADFR2 ,6000/DTCAL ,0
10306  GPVAR 'SET 11 FINISH RETRACT RATE  ',F11RDFR ,6000/DTCAL ,0
10308  IF XVARI =1 THEN GPVAR 'SET 11 FINISH RETRACT RADIUS RATE',F11RDFR2 ,6000/DTCAL ,0
10310  GPVAR 'SET 12 FINISH ADVANCE RATE  ',F12ADFR ,6000/DTCAL ,0
10312  IF XVARI =1 THEN GPVAR 'SET 12 FINISH ADVANCE RADIUS RATE',F12ADFR2 ,6000/DTCAL ,0
10314  GPVAR 'SET 12 FINISH RETRACT RATE  ',F12RDFR ,6000/DTCAL ,0
10316  IF XVARI =1 THEN GPVAR 'SET 12 FINISH RETRACT RADIUS RATE',F12RDFR2 ,6000/DTCAL ,0
10320  ENDPROC 
10400 DEFPROC SETFDTR
10422  GPVAR 'SET 1 FINISH TRAVERSE RATE  ',FADFR ,6000/DTCAL ,0
10424  IF XVARI =1 THEN GPVAR 'SET 1 FINISH RADIUS TRAVERSE RATE',FADFR2 ,6000/DTCAL ,0
10426  GPVAR 'SET 2 FINISH TRAVERSE RATE  ',F2ADFR ,6000/DTCAL ,0
10428  IF XVARI =1 THEN GPVAR 'SET 2 FINISH TRAVERSE RADIUS RATE',F2ADFR2 ,6000/DTCAL ,0
10430  GPVAR 'SET 3 FINISH TRAVERSE RATE  ',F3ADFR ,6000/DTCAL ,0
10432  IF XVARI =1 THEN GPVAR 'SET 3 FINISH RADIUS TRAVERSE RATE',F3ADFR2 ,6000/DTCAL ,0
10434  GPVAR 'SET 4 FINISH TRAVERSE RATE  ',F4ADFR ,6000/DTCAL ,0
10436  IF XVARI =1 THEN GPVAR 'SET 4 FINISH RADIUS TRAVERSE RATE',F4ADFR2 ,6000/DTCAL ,0
10438  GPVAR 'SET 5 FINISH TRAVERSE RATE  ',F5ADFR ,6000/DTCAL ,0
10440  IF XVARI =1 THEN GPVAR 'SET 5 FINISH RADIUS TRAVERSE RATE',F5ADFR2 ,6000/DTCAL ,0
10442  GPVAR 'SET 6 FINISH TRAVERSE RATE  ',F6ADFR ,6000/DTCAL ,0
10444  IF XVARI =1 THEN GPVAR 'SET 6 FINISH RADIUS TRAVERSE RATE',F6ADFR2 ,6000/DTCAL ,0
10446  GPVAR 'SET 7 FINISH TRAVERSE RATE  ',F7ADFR ,6000/DTCAL ,0
10448  IF XVARI =1 THEN GPVAR 'SET 7 FINISH RADIUS TRAVERSE RATE',F7ADFR2 ,6000/DTCAL ,0
10450  GPVAR 'SET 8 FINISH TRAVERSE RATE  ',F8ADFR ,6000/DTCAL ,0
10452  IF XVARI =1 THEN GPVAR 'SET 8 FINISH RADIUS TRAVERSE RATE',F8ADFR2 ,6000/DTCAL ,0
10454  GPVAR 'SET 9 FINISH TRAVERSE RATE  ',F9ADFR ,6000/DTCAL ,0
10456  IF XVARI =1 THEN GPVAR 'SET 9 FINISH RADIUS TRAVERSE RATE',F9ADFR2 ,6000/DTCAL ,0
10458  GPVAR 'SET 10 FINISH TRAVERSE RATE  ',F10ADFR ,6000/DTCAL ,0
10460  IF XVARI =1 THEN GPVAR 'SET 10 FINISH RADIUS TRAVERSE RATE',F10ADFR2 ,6000/DTCAL ,0
10462  GPVAR 'SET 11 FINISH TRAVERSE RATE  ',F11ADFR ,6000/DTCAL ,0
10464  IF XVARI =1 THEN GPVAR 'SET 11 FINISH RADIUS TRAVERSE RATE',F11ADFR2 ,6000/DTCAL ,0
10466  GPVAR 'SET 12 FINISH TRAVERSE RATE  ',F12ADFR ,6000/DTCAL ,0
10468  IF XVARI =1 THEN GPVAR 'SET 12 FINISH RADIUS TRAVERSE RATE',F12ADFR2 ,6000/DTCAL ,0
10470  ENDPROC 
11000 DEFPROC ACCESS
11005  CHECK =0
11010  PRINT 'ENTER PASSWORD':ODCTRL =4
11015  GPVAR '',CHECK ,0,0
11020  ODCTRL =1
11025  IF CHECK =PASSWORD THEN PRINT 'OK' ELSE PRINT 'TRY AGAIN':GOTO 11005
11030  ENDPROC 
19000 DEFPROC AWSPEED
19003  XVARN =32767*CVWRSET *CV /WRAC /CVSET 
19005  IF XVARN >32767 THEN DTOA1 =32767 ELSE DTOA1 =XVARN 
19006  IF XVARN *XVARN <1 THEN MSG 723
19007  ENDPROC 
19040 DEFPROC MWSPEED
19045  IF BIT 4077<1 THEN ENDPROC 
19051  IF BIT 985=1 THEN PROC WSPEED
19052  IF DUALCY =1 THEN GOTO 19062 
19056  IF FICY =1 THEN XVARN =100+PDROP /100*FMWCV 
19058  IF ROCY =1 THEN XVARN =100 +PDROP /100 *RMWCV 
19060  IF SINGCY =0 THEN GOTO 19064
19062  IF BIT 4039 =0 THEN XVARN =100 +PDROP /100 *RMWCV ELSE XVARN =100 +PDROP /100 *FMWCV 
19064  IF BIT 985=0 THEN GOTO 19066
19065  XVARN1 =WRMIN *XVARN /STEPRAD /MWCVMAX :GOTO 19067
19066  XVARN1 =32767*WRMIN *XVARN /WRAC /MWCVMAX 
19067  USPEED =32767*WRMIN /WRAC :IF XVARN1 /USPEED <0.9 THEN SETB 3832 ELSE RESB 3832
19068  IF SPIN *CVSET >0 THEN GOTO 19070
19069  IF XVARN1 >32767 THEN DTOA1 =32767:GOTO 19071 ELSE DTOA1 =XVARN1 :GOTO 19071
19070  IF XVARN1 >32767 THEN DTOA2 =32767 ELSE DTOA2 =XVARN1 
19071  IF XVARN1 *XVARN1 <1 THEN MSG 723
19080  ENDPROC 
19100 DEFPROC DMWSPEED
19101  IF BIT 4077<1 THEN ENDPROC 
19102  IF DSTATE =1 THEN GOTO 19105
19103  XVARN =32767*WRMIN *FDMWCV /WRAC /MWCVMAX :GOTO 19106
19105  XVARN =32767*WRMIN *RDMWCV /WRAC /MWCVMAX 
19106  USPEED =32767*WRMIN /WRAC :IF XVARN /USPEED <0.9 THEN SETB 3832 ELSE RESB 3832
19108  IF SPIN *CVSET >0 THEN GOTO 19112
19110  IF XVARN >32767 THEN DTOA1 =32767:GOTO 19115 ELSE DTOA1 =XVARN :GOTO 19115
19112  IF XVARN >32767 THEN DTOA2 =32767 ELSE DTOA2 =XVARN 
19115  IF XVARN *XVARN <1 THEN MSG 723
19120  ENDPROC 
19200 DEFPROC WSPDSET
19202  PROC CLEAR
19204  DVAR 'DIAMOND COUNTER'DIAMCTR 
19206  UKEY 6'DIAMOND''JOG''ADVANCE'''
19208  UKEY 8'DIAMOND''JOG''RETRACT'''
19210  UKEY 10'RESET''DIAMOND''COUNTER'''
19212  DV =DVMAX 
19214  IF BIT 10=1 THEN DIAMCTR =0:DPSET =DP 
19216  IF BIT 6=1 THEN DP =DP -1:PROC CHGWHLSPD:GOTO 19216
19218  IF BIT 8=1 THEN DP =DP +1:PROC CHGWHLSPD:GOTO 19218
19220  DST =2:GOTO 19214
19222  ENDPROC 
19250 DEFPROC CHGWHLSPD
19252  DIAMCTR =DPSET -DP :XVARN =WRMAX -DIAMCTR 
19254  XVARN1 =32767*WRMIN /XVARN 
19256  IF SPIN *CVSET >0 THEN GOTO 19260
19258  IF XVARN1 >32767 THEN DTOA1 =32767:GOTO 19262 ELSE DTOA1 =XVARN1 :GOTO 19262
19260  IF XVARN1 >32767 THEN DTOA2 =32767 ELSE DTOA2 =XVARN1 
19262  ENDPROC 
19600 DEFPROC SAVEPAR
19603  UKEY 14'''''''CANSAVE'
19605  ODCTRL =5
19607  PRINT 'UNITS=',UNITS ,':GSTYP=',CHR 39,GSTYP ,CHR 39
19608  PRINT 'RGSTYP=',CHR 39,RGSTYP ,CHR 39,':FGSTYP=',CHR 39,FGSTYP ,CHR 39
19609  PRINT 'DUALPWS=',DUALPWS 
19610  PRINT 'SLOAD=',SLOAD ,':ZLOAD=',ZLOAD ,':XLOAD=',XLOAD ,':SLOBE=',SLOBE 
19613  PRINT 'CRS1=',CRS1 ,':CRS2=',CRS2 ,':CRS3=',CRS3 ,':CRS4=',CRS4 
19615  PRINT 'CRS5=',CRS5 ,':CRS6=',CRS6 ,':CRS9=',CRS9 ,':CRS10=',CRS10 
19616  PRINT 'CRS11=',CRS11 ,':CRS12=',CRS12 
19617  PRINT 'RAPIDFR=',RAPIDFR ,':GICRB=',GICRB ,':FCWA=',FCWA ,':BCWA=',BCWA 
19620  PRINT 'R1TF=',R1TF ,':R2TF=',R2TF ,':R3TF=',R3TF ,':R4TF=',R4TF 
19621  PRINT 'R9TF=',R9TF ,':R10TF=',R10TF ,':R11TF=',R11TF ,':R12TF=',R12TF 
19622  PRINT 'R1INC=',R1INC ,':R2INC=',R2INC ,':R3INC=',R3INC ,':R4INC=',R4INC 
19623  PRINT 'R9INC=',R9INC ,':R10INC=',R10INC ,':R11INC=',R11INC ,':R12INC=',R12INC 
19625  PRINT 'R1INC1=',R1INC1 ,':R1INC2=',R1INC2 ,':R1INC3=',R1INC3 
19627  PRINT 'R1INC4=',R1INC4 ,':R1INC5=',R1INC5 ,':R1INC6=',R1INC6 
19630  PRINT 'R2INC1=',R2INC1 ,':R2INC2=',R2INC2 ,':R2INC3=',R2INC3 
19632  PRINT 'R2INC4=',R2INC4 ,':R2INC5=',R2INC5 ,':R2INC6=',R2INC6 
19633  PRINT 'R3INC1=',R3INC1 ,':R3INC2=',R3INC2 ,':R3INC3=',R3INC3 
19634  PRINT 'R3INC4=',R3INC4 ,':R3INC5=',R3INC5 ,':R3INC6=',R3INC6 
19635  PRINT 'R4INC1=',R4INC1 ,':R4INC2=',R4INC2 ,':R4INC3=',R4INC3 
19636  PRINT 'R4INC4=',R4INC4 ,':R4INC5=',R4INC5 ,':R4INC6=',R4INC6 
19637  PRINT 'R9INC1=',R9INC1 ,':R9INC2=',R9INC2 ,':R9INC3=',R9INC3 
19638  PRINT 'R9INC4=',R9INC4 ,':R9INC5=',R9INC5 ,':R9INC6=',R9INC6 
19639  PRINT 'R10INC1=',R10INC1 ,':R10INC2=',R10INC2 ,':R10INC3=',R10INC3 
19640  PRINT 'R10INC4=',R10INC4 ,':R10INC5=',R10INC5 ,':R10INC6=',R10INC6 
19641  PRINT 'R11INC1=',R11INC1 ,':R11INC2=',R11INC2 ,':R11INC3=',R11INC3 
19642  PRINT 'R11INC4=',R11INC4 ,':R11INC5=',R11INC5 ,':R11INC6=',R11INC6 
19643  PRINT 'R12INC1=',R12INC1 ,':R12INC2=',R12INC2 ,':R12INC3=',R12INC3 
19644  PRINT 'R12INC4=',R12INC4 ,':R12INC5=',R12INC5 ,':R12INC6=',R12INC6 
19645  PRINT 'R1INCFR=',R1INCFR ,':R2INCFR=',R2INCFR ,':R3INCFR=',R3INCFR 
19646  PRINT 'R1INCFA=',R1INCFA ,':R2INCFA=',R2INCFA ,':R3INCFA=',R3INCFA 
19647  PRINT 'R4INCFR=',R4INCFR ,':R4INCFA=',R4INCFA 
19648  PRINT 'R9INCFR=',R9INCFR ,':R10INCFR=',R10INCFR ,':R11INCFR=',R11INCFR 
19649  PRINT 'R12INCFR=',R12INCFR ,':R9INCFA=',R9INCFA ,':R10INCFA=',R10INCFA 
19650  PRINT 'R11INCFA=',R11INCFA ,':R12INCFA=',R12INCFA 
19652  PRINT 'R1FR=',R1FR ,':R1WS=',R1WS ,':R1DWELL=',R1DWELL 
19655  PRINT 'R2FR=',R2FR ,':R2WS=',R2WS ,':R2DWELL=',R2DWELL 
19656  PRINT 'R3FR=',R3FR ,':R3WS=',R3WS ,':R3DWELL=',R3DWELL 
19657  PRINT 'R4FR=',R4FR ,':R4WS=',R4WS ,':R4DWELL=',R4DWELL 
19658  PRINT 'R9FR=',R9FR ,':R9WS=',R9WS ,':R9DWELL=',R9DWELL 
19659  PRINT 'R10FR=',R10FR ,':R10WS=',R10WS ,':R10DWELL=',R10DWELL 
19660  PRINT 'R11FR=',R11FR ,':R11WS=',R11WS ,':R11DWELL=',R11DWELL 
19661  PRINT 'R12FR=',R12FR ,':R12WS=',R12WS ,':R12DWELL=',R12DWELL 
19662  PRINT 'F1TF=',F1TF ,':F2TF=',F2TF ,':F3TF=',F3TF ,':F4TF=',F4TF 
19663  PRINT 'F9TF=',F9TF ,':F10TF=',F10TF ,':F11TF=',F11TF ,':F12TF=',F12TF 
19665  PRINT 'F1VS=',F1VS ,':F2VS=',F2VS ,':F3VS=',F3VS ,':F4VS=',F4VS 
19666  PRINT 'F9VS=',F9VS ,':F10VS=',F10VS ,':F11VS=',F11VS ,':F12VS=',F12VS 
19667  PRINT 'F1INC=',F1INC ,':F2INC=',F2INC ,':F3INC=',F3INC 
19670  PRINT 'F4INC=',F4INC ,':F9INC=',F9INC 
19671  PRINT 'F10INC=',F10INC ,':F11INC=',F11INC ,':F12INC=',F12INC 
19672  PRINT 'F1INC1=',F1INC1 ,':F1INC2=',F1INC2 ,':F1INC3=',F1INC3 
19675  PRINT 'F1INC4=',F1INC4 
19677  PRINT 'F2INC1=',F2INC1 ,':F2INC2=',F2INC2 ,':F2INC3=',F2INC3 
19680  PRINT 'F2INC4=',F2INC4 
19682  PRINT 'F3INC1=',F3INC1 ,':F3INC2=',F3INC2 ,':F3INC3=',F3INC3 
19685  PRINT 'F3INC4=',F3INC4 
19686  PRINT 'F4INC1=',F4INC1 ,':F4INC2=',F4INC2 ,':F4INC3=',F4INC3 
19687  PRINT 'F4INC4=',F4INC4 
19688  PRINT 'F9INC1=',F9INC1 ,':F9INC2=',F9INC2 ,':F9INC3=',F9INC3 
19689  PRINT 'F9INC4=',F9INC4 
19690  PRINT 'F10INC1=',F10INC1 ,':F10INC2=',F10INC2 ,':F10INC3=',F10INC3 
19691  PRINT 'F10INC4=',F10INC4 
19692  PRINT 'F11INC1=',F11INC1 ,':F11INC2=',F11INC2 ,':F11INC3=',F11INC3 
19693  PRINT 'F11INC4=',F11INC4 
19694  PRINT 'F12INC1=',F12INC1 ,':F12INC2=',F12INC2 ,':F12INC3=',F12INC3 
19695  PRINT 'F12INC4=',F12INC4 
19696  PRINT 'F1INCFR=',F1INCFR ,':F2INCFR=',F2INCFR ,':F3INCFR=',F3INCFR 
19697  PRINT 'F1INCFA=',F1INCFA ,':F2INCFA=',F2INCFA ,':F3INCFA=',F3INCFA 
19698  PRINT 'F4INCFR=',F4INCFR ,':F4INCFA=',F4INCFA 
19699  PRINT 'F9INCFR=',F9INCFR ,':F10INCFR=',F10INCFR ,':F11INCFR=',F11INCFR 
19700  PRINT 'F9INCFA=',F9INCFA ,':F10INCFA=',F10INCFA ,':F11INCFA=',F11INCFA 
19701  PRINT 'F12INCFR=',F12INCFR ,':F12INCFA=',F12INCFA 
19702  PRINT 'F1FR=',F1FR ,':F1WS=',F1WS ,':F1DWELL=',F1DWELL 
19703  PRINT 'F2FR=',F2FR ,':F2WS=',F2WS ,':F2DWELL=',F2DWELL 
19704  PRINT 'F3FR=',F3FR ,':F3WS=',F3WS ,':F3DWELL=',F3DWELL 
19705  PRINT 'F4FR=',F4FR ,':F4WS=',F4WS ,':F4DWELL=',F4DWELL 
19706  PRINT 'F9FR=',F9FR ,':F9WS=',F9WS ,':F9DWELL=',F9DWELL 
19707  PRINT 'F10FR=',F10FR ,':F10WS=',F10WS ,':F10DWELL=',F10DWELL 
19708  PRINT 'F11FR=',F11FR ,':F11WS=',F11WS ,':F11DWELL=',F11DWELL 
19709  PRINT 'F12FR=',F12FR ,':F12WS=',F12WS ,':F12DWELL=',F12DWELL 
19710  PRINT 'R1ANG=',R1ANG ,':R2ANG=',R2ANG ,':R3ANG=',R3ANG ,':R4ANG=',R4ANG 
19711  PRINT 'R9ANG=',R9ANG ,':R10ANG=',R10ANG ,':R11ANG=',R11ANG ,':R12ANG=',R12ANG 
19712  PRINT 'S1AJ=',S1AJ ,':S2AJ=',S2AJ ,':S3AJ=',S3AJ ,':S4AJ=',S4AJ 
19715  PRINT 'S5AJ=',S5AJ ,':S6AJ=',S6AJ 
19716  PRINT 'S9AJ=',S9AJ ,':S10AJ=',S10AJ ,':S11AJ=',S11AJ ,':S12AJ=',S12AJ 
19717  PRINT 'P1AJ=',P1AJ ,':P2AJ=',P2AJ ,':P3AJ=',P3AJ ,':P4AJ=',P4AJ 
19718  PRINT 'P9AJ=',P9AJ ,':P10AJ=',P10AJ ,':P11AJ=',P11AJ ,':P12AJ=',P12AJ 
19719  PRINT 'COSET1=',COSET1 ,':COSET2=',COSET2 
19720  PRINT 'RLPD=',RLPD ,':FLPD=',FLPD ,':DFD=',DFD ,':DFR=',DFR ,':RDFR=',RDFR 
19722  PRINT 'DTURN=',DTURN ,':COMPCOR=',COMPCOR ,':SPD=',SPD ,':RDFD=',RDFD 
19723  PRINT 'DTINT=',DTINT 
19725  PRINT 'DPOS=',DPOS ,':DTRAV=',DTRAV ,':DFCLR=',DFCLR ,':RDTURN=',RDTURN 
19727  PRINT 'RADFD=',RADFD ,':RADFR=',RADFR ,':RRDFD=',RRDFD ,':RRDFR=',RRDFR 
19728  PRINT 'NO1POS=',NO1POS ,':NO2POS=',NO2POS ,':NO3POS=',NO3POS ,':NO4POS=',NO4POS 
19729  PRINT 'NO5POS=',NO5POS ,':TWD=',TWD ,':TOFFSET=',TOFFSET ,':NO6POS=',NO6POS 
19730  PRINT 'NO7POS=',NO7POS ,':BWTR=',BWTR 
19731  PRINT 'FADFD=',FADFD ,':FADFR=',FADFR ,':FRDFD=',FRDFD ,':FRDFR=',FRDFR 
19732  PRINT 'RADFR2=',RADFR2 ,':FADFR2=',FADFR2 ,':RRDFR2=',RRDFR2 
19735  PRINT 'F2ADFR=',F2ADFR ,':F3ADFR=',F3ADFR ,':F4ADFR=',F4ADFR 
19737  PRINT 'F5ADFR=',F5ADFR ,':F6ADFR=',F6ADFR ,':F7ADFR=',F7ADFR 
19740  PRINT 'F8ADFR=',F8ADFR ,':F9ADFR=',F9ADFR 
19741  PRINT 'F10ADFR=',F10ADFR ,':F11ADFR=',F11ADFR ,':F12ADFR=',F12ADFR 
19742  PRINT 'F2RDFR=',F2RDFR ,':F3RDFR=',F3RDFR ,':F4RDFR=',F4RDFR 
19745  PRINT 'F5RDFR=',F5RDFR ,':F6RDFR=',F6RDFR ,':F7RDFR=',F7RDFR 
19747  PRINT 'F8RDFR=',F8RDFR ,':F9RDFR=',F9RDFR 
19748  PRINT 'F10RDFR=',F10RDFR ,':F11RDFR=',F11RDFR ,':F12RDFR=',F12RDFR 
19750  PRINT 'F2ADFR2=',F2ADFR2 ,':F3ADFR2=',F3ADFR2 ,':F4ADFR2=',F4ADFR2 
19752  PRINT 'F5ADFR2=',F5ADFR2 ,':F6ADFR2=',F6ADFR2 ,':F7ADFR2=',F7ADFR2 
19755  PRINT 'F8ADFR2=',F8ADFR2 ,':F9ADFR2=',F9ADFR2 
19756  PRINT 'F10ADFR2=',F10ADFR2 ,':F11ADFR2=',F11ADFR2 ,':F12ADFR2=',F12ADFR2 
19757  PRINT 'F2RDFR2=',F2RDFR2 ,':F3RDFR2=',F3RDFR2 ,':F4RDFR2=',F4RDFR2 
19760  PRINT 'F5RDFR2=',F5RDFR2 ,':F6RDFR2=',F6RDFR2 ,':F7RDFR2=',F7RDFR2 
19762  PRINT 'F8RDFR2=',F8RDFR2 ,':FRDFR2=',FRDFR2 ,':F9RDFR2=',F9RDFR2 
19763  PRINT 'F10RDFR2=',F10RDFR2 ,':F11RDFR2=',F11RDFR2 ,':F12RDFR2=',F12RDFR2 
19765  PRINT 'LOWP=',LOWP ,':FPCLR=',FPCLR ,':DRINFD=',DRINFD 
19767  PRINT 'SINGCY=',SINGCY ,':DUALCY=',DUALCY ,':FICY=',FICY ,':ROCY=',ROCY 
19768  PRINT 'GAGEPOS1=',GAGEPOS1 ,':GAGEPOS2=',GAGEPOS2 ,':GAGEPOS3=',GAGEPOS3 
19769  PRINT 'GAGEPOS4=',GAGEPOS4 ,':GAGEPOS5=',GAGEPOS5 ,':GAGEPOS6=',GAGEPOS6 
19770  PRINT 'BWS=',BWS ,':BAFR=',BAFR ,':BFFR=',BFFR ,':BFEP=',BFEP 
19772  PRINT 'BFDWELL=',BFDWELL ,':BBDWELL=',BBDWELL ,':BBEP=',BBEP 
19775  PRINT 'BRAEP=',BRAEP ,':BMFR=',BMFR ,':BMDWELL=',BMDWELL 
19777  PRINT 'BMEP=',BMEP ,':BSFR=',BSFR ,':BSDWELL=',BSDWELL 
19780  PRINT 'BRFR=',BRFR ,':BREP=',BREP ,':ORUN=',ORUN ,':BGA=',BGA 
19782  PRINT 'CRL1=',CRL1 ,':CRL2=',CRL2 ,':CRL3=',CRL3 ,':CRL4=',CRL4 
19785  PRINT 'CRL5=',CRL5 ,':CRL6=',CRL6 
19786  PRINT 'CRL9=',CRL9 ,':CRL10=',CRL10 ,':CRL11=',CRL11 ,':CRL12=',CRL12 
19787  PRINT 'DBOFF=',DBOFF ,':DWS=',DWS ,':VSPEED=',VSPEED ,':RECIPS=',RECIPS 
19788  PRINT 'RMWCV=',RMWCV ,':FMWCV=',FMWCV ,':FDMWCV=',FDMWCV ,':RDMWCV=',RDMWCV ,':PDROP=',PDROP 
19790  PRINT 'RS1=',RS1 ,':RS2=',RS2 ,':RS3=',RS3 ,':RS4=',RS4 
19791  PRINT 'RS5=',RS5 ,':RS6=',RS6 ,':RS7=',RS7 ,':RS8=',RS8 
19792  PRINT 'RS9=',RS9 ,':RS10=',RS10 ,':RS11=',RS11 ,':RS12=',RS12 
19793  PRINT 'QRS1=',QRS1 ,':QRS2=',QRS2 ,':QRS3=',QRS3 ,':QRS4=',QRS4 
19794  PRINT 'QRS5=',QRS5 ,':QRS6=',QRS6 ,':QRS7=',QRS7 ,':QRS8=',QRS8 
19795  PRINT 'QRS9=',QRS9 ,':QRS10=',QRS10 ,':QRS11=',QRS11 ,':QRS12=',QRS12 
19796  PRINT 'IDCTRL=2'
19797  ODCTRL =1:UKEY 14 '''''''EXDATCH':ENDPROC 
20000 DEFPROC LAST:NULL ='':SETB 4095
20005  DVAR 'PROGRAMME LOAD OK'NULL :ENDPROC 
END
